<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Computernetwork2_datalinklayer</title>
    <link href="/2024/01/05/computernetwork2/"/>
    <url>/2024/01/05/computernetwork2/</url>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>数据链路层使用的信道主要有</p><p><strong>（1）点对点信道</strong>：一对一点对点的通信方式。</p><p><strong>（2）广播信道</strong>：这种信道使用一对多的广播通信方式，过程比较复杂，需要专用的共享信道协议来调节这些主机的数据发送</p><h1 id="使用点对点信道的数据链路层"><a href="#使用点对点信道的数据链路层" class="headerlink" title="使用点对点信道的数据链路层"></a>使用点对点信道的数据链路层</h1><p><strong>链路（link）</strong>是从一个结点到相邻结点的一段物理线路而中间没有任何的交换结点</p><p><strong>数据链路（data link）</strong>当在一条线路上传输数据的时候，除了必须要有一条物理线路以外，还必须要有一些必要的通信协议来控制哲学数据的传输。把实现这些协议的硬件和软件加到链路上就构成了数据链路。目前一般使用<strong>网络适配器</strong>来实现这些协议</p><p>点对点星岛的数据链路层在进行通信的时候的主要步骤：</p><p>（1）结点A的数据链路层把网络层交下来的IP数据报添加首部和尾部封装成帧。</p><p>（2）结点A把封装好的帧发送给结点B的数据链路层</p><p>（3）若结点B的数据链路层收到的帧没有差错，那么从收到的帧中提取出IP报文交付上面的网络层，否则丢弃。</p><h2 id="三个基本问题"><a href="#三个基本问题" class="headerlink" title="三个基本问题"></a>三个基本问题</h2><p><strong>（1）封装成帧（framing）</strong></p><p>接收端在收到物理层上交的比特流以后，就能够根据首部和尾部的标记，从收到的比特流中识别帧的开始和结束。即<strong>帧界定</strong>。同时首部和尾部也包含了一些控制信息。</p><p>每一种链路层协议都规定了所能传送的帧的数据部分长度上线——最大传送单元*<strong>MTU（Maximum Transfer Unit）</strong>(<em>ps:这里说的是数据部分长度上线</em>)</p><p>当数据是可以答应的ASCII文本文件的时候，帧的界定可以使用特殊的<strong>帧界定符</strong>。</p><p>控制字符<strong>SOH（Start Of Header）</strong>放在一个帧的最前面，表示帧的首部的开始；<strong>EOT（End Of Transmission）</strong>表示帧的结束，放在帧的最后面</p><p><strong>（2）透明传输</strong></p><p>帧传输的数据中的任何8bit的组合一定不能和帧控制字符一样。</p><p>如果传输的是文本组成的帧，这种情况显然是不可能的。</p><p>但是其余情况可能会有该问题。</p><p>解决方案：在数据部分中冲突的SOH和EOT前插入一个转义字符<strong>ESC</strong>，接收端在把数据送往网络层之前删除这个转义字符.如果出现转义字符本身的冲突，也插入一个转义字符。这种方法叫做<strong>字节填充（byte stuffing）</strong>or<strong>字符填充（character stuffing）</strong></p><p><strong>（3）差错检测</strong></p><p><strong>CRC(Cyclic Redundancy Check)</strong></p><p>process</p><p>首先把数据划分为组，假定每组k个bit，现在假定带传送的数据M &#x3D; 101001（k&#x3D;6）CRC就是在后面添加供差错检测用的nbit冗余码,然后作为n+kbit一起发送出去</p><p>先将M左移nbit右边补0，然后除以一个两边实现商量好的n+1bit的数P，显然得到了一个nbit的余数，那么就把这个余数作为冗余的nbit拼接在M后面然后作为k+nbit发送过于，这个为了检验错误而存在冗余码有时也叫做帧检验序列<strong>FCS（Frame Check Sequence）</strong>(<em>ps:不一定要是由CRC方法得出的</em>)</p><p>显然接收方对其除以P的时候得到的结果一定是0</p><p><em>上述措施并不能保证数据链路层的数据传输是可靠的，但是当前网络信道传输质量较高，这样做可以提高通信效率，因此使用广泛</em></p><h1 id="点对点协议PPP"><a href="#点对点协议PPP" class="headerlink" title="点对点协议PPP"></a>点对点协议PPP</h1><p>通信质量较差的时代，在数据链路层使用可靠传输协议是一种好方法,于是其使用高级数据链路控制<strong>HDLC(High-level Data Link Control)<strong>。目前我们使用更加简单的</strong>PPP（Point-to-Point Protocol）</strong></p><p><img src="/../img/computernetwork/2-26.png"></p><p>PPP协议满足的要求</p><p>（1）简单（2）分装成帧（3）透明性（4）多种网络层协议（5）多种类型的链路（6）差错检测（7）检测链接状态（8）最大传送单元（9）网络层地址协商（10）数据压缩协商</p><p>PPP协议的组成</p><p>（1）将一个IP数据报文封装到串行链路的方法（2）一个用来建立，配置和测试数据链路连接的链路控制协议<strong>LCP（Link Control Protocol）</strong>（3）一套网络控制协议<strong>NCP（Network Control Protocol）</strong></p><h2 id="PPP协议的帧格式"><a href="#PPP协议的帧格式" class="headerlink" title="PPP协议的帧格式"></a>PPP协议的帧格式</h2><h3 id="各个字段的意义"><a href="#各个字段的意义" class="headerlink" title="各个字段的意义"></a>各个字段的意义</h3><p><img src="/../img/computernetwork/2-27.png"></p><p>首部的第一个字段和尾部的第二个字段都是标志字段 <strong>F（Flag）</strong>规定为0x7E 即 01111110，作用为帧界定符号，两个相邻的帧之间只需要一个帧界定符号。</p><p>首部中的地址字段A规定为0xFF，控制字段规定为0x03，这两个字段没有意义，只是做此规定</p><p>首部的第四个字段是2byte的协议字段，如0x0021的时候就是IP报文 0xC021的时候就是LCP的数据</p><p>信息字段的长度是任意的要与MTU相符合，默认不超过1400字节</p><p>尾部第一个字段是2byte的FCS</p><h3 id="字节填充"><a href="#字节填充" class="headerlink" title="字节填充"></a>字节填充</h3><p>转义字符定义为0x7D</p><p>0x7E -&gt; 0x7D 0x7E</p><p>0x7D -&gt; 0x7D 0x5D</p><h3 id="零比特填充"><a href="#零比特填充" class="headerlink" title="零比特填充"></a>零比特填充</h3><p>首先利用硬件等等处理信息字段，只要发现有5个连续的1，就立即填入一个0，接收方再对其进行还原，就可以避免冲突。</p><h2 id="PPP协议的工作状态"><a href="#PPP协议的工作状态" class="headerlink" title="PPP协议的工作状态"></a>PPP协议的工作状态</h2><p><img src="/../img/computernetwork/2-28.png"></p><p>用户个人向ISP发送一系列链路控制协议LCP分组，这些分组的响应决定了用户将要使用的一些参数。然后网络控制协议NCP给新接入的用户个人电脑分配一个临时的IP地址。</p><p>具体过程：</p><p>PPP链路处于<strong>链路静止（Link Dead）</strong> 状态。当用户个人佃农通过调制解调器呼叫路由器后PPP进入链路建立 <strong>（Link Establish）</strong> 状态，LCP连接建立</p><p>开始发送LCP的配置请求帧（Configure-Request），接着链路另一端发送以下响应中的一种</p><p><strong>（1）确认配置（Configure-Ack）</strong></p><p><strong>（2）配置否认（Configure-Nak）</strong></p><p><strong>（3）配置拒绝（Configure-Reject）</strong></p><p>内容包括链路上的最大帧长度，所使用的鉴别协议等等</p><p>接着进入PPP鉴别状态 <strong>（Authenticate）</strong></p><p>此阶段只允许传送LCP分组，鉴别协议分组以及检测链路质量的分组，此时可以采用口令鉴别协议 <strong>PAP（Password Authentication Protocol）</strong> 或者 <strong>口令握手鉴别协议CHAP（Challenge-HandShake Authentication Protocol）。</strong> 鉴别失败转入链路终止状态，否则进入<strong>网络层协议状态（Network-layer Protocol）</strong>(<em>ps:这使得PPP两端的网络层运行不同的网络协议但是仍然可以使用同一个PPP协议进行通信</em>)</p><p>网络层配置完毕后链路就进入数据通信的 <strong>链路打开（Link Open）</strong> 状态，此时PPP端点仍然可以发送LCP分组 <strong>回送请求（Echo-Request）</strong> 和<strong>回送回答分组LCP（Echo-Reply）</strong> 检查链路状态</p><p>当然链路出现故障也会回到链路终止状态。</p><h1 id="使用广播信道的数据链路层"><a href="#使用广播信道的数据链路层" class="headerlink" title="使用广播信道的数据链路层"></a>使用广播信道的数据链路层</h1><h2 id="局域网的数据链路层"><a href="#局域网的数据链路层" class="headerlink" title="局域网的数据链路层"></a>局域网的数据链路层</h2><p>（1）具有广播功能，一个站点可以方便的访问全网</p><p>（2）便于系统的扩展和逐渐演变，各个设备的位置可以灵活调整</p><p>（3）提高可靠性，可用性，生存性</p><p>分类：星形网，环形网，总线网</p><p>一个重要问题是让众多的用户共享通信媒体资源</p><p>（1）静态划分信道</p><p>（2）动态媒体接入控制，又称之为多点接入（multiple access）</p><p>又可以继续分类</p><ul><li><p>随机接入（需要碰撞处理）</p></li><li><p>受控接入（比如轮询）</p></li></ul><h3 id="以太网的标准"><a href="#以太网的标准" class="headerlink" title="以太网的标准"></a>以太网的标准</h3><p>为了使得数据链路层能够适应多种局域网标准，我们把局域网的数据 链路层拆分为两个子层 <strong>逻辑控制LLC（Logical Link Protocol）</strong> 和 <strong>MAC（Medium Access Control）</strong></p><p>当前LLC基本被废弃</p><h2 id="CSMA-x2F-CD协议"><a href="#CSMA-x2F-CD协议" class="headerlink" title="CSMA&#x2F;CD协议"></a>CSMA&#x2F;CD协议</h2><p>由于总线上只要有一台计算机再发送数据，总线的传输资源就会被占用，因此再同一实践只能允许有一台计算机发送数据。</p><p>CSMA&#x2F;CD 载波监听多点接入&#x2F;碰撞检测 <strong>（Carrier Sense Multiple Access with Collision Detection）</strong></p><p>多点接入：说明是总线网络</p><p>载波监听：利用电子技术不断检测信道上有没有计算机再发送</p><p>碰撞检测：适配器边发送数据边检测信道上的型号电压的变化情况一确定是否有其他站在发送数据。</p><p>显然A在发送数据以后，最迟要2t的时间才能知道自己发送的数据又没有和其他人发生碰撞。首先在t之后各个站点都已经知道了A在发送数据，不会再发送了，但是t之前有可能有人在发送，这时候这个发送的冲突数据一定会在2t以内到达A。</p><p>显然使用CSMA&#x2F;CD协议的时候一个站不可能同时进行发送和接受（不然就变成碰撞了）所以CSMA&#x2F;CD的以太网不可能进行全双工通信，只能进行双向交替通信。</p><p>我们将以太网的往返时间2称之为 <strong>争用期（contention period）</strong>  又称之为 <strong>碰撞窗口（collision window）</strong> </p><p><strong>截断二进制指数退避（truncated binary exponential backoff）</strong></p><p>令K为重传次数和10取小</p><p>从0-2^k - 1中去一个数字r</p><p>重传要退后时间就是r倍的争用期。即检测到发生碰撞以后立即停止发送数据（接着执行认为干扰。。。）再接着就等待退避算法的时间完成后再次检测信道。</p><p>重传次数达到16次的时候向上层报告表示连续冲突，丢弃该帧。</p><p>每个帧的CSMA&#x2F;CD算法都是无记忆的。</p><p>但是这是建立在发送帧需要很长时间的，如果发送的帧时间很短，甚至短于2t，那么A可能提前进入监测状态，此时他认为自己已经没有发送任务，收到碰撞信息视而不见。</p><p>因此如果发送的数据过小，就必须进行数据填充，使其发送时间大于一个争用期51.2mius 即不小于64字节。因此凡是长度小于64byte的帧一律算作无效帧</p><p>以太网规定了帧间最小间隔9.6mius，使得甘冈接受数据帧的站的接受缓存来得及清理。</p><p><strong>强化碰撞</strong> 当发送数据的站一旦发现碰撞，就停止发送数据，还要再继续发送32bit或者28bit的人为干扰型号。</p><h2 id="集线器的星形拓扑"><a href="#集线器的星形拓扑" class="headerlink" title="集线器的星形拓扑"></a>集线器的星形拓扑</h2><p>表面上课使用集线器的局域网在物理上是一个星型网但是集线器使用电子器件模拟电缆工作，逻辑上仍然是一个总线网络，还是使用CSMA&#x2F;CD协议。</p><p>一个集线器更像一个多接口的转发器</p><p>集线器工作在物理层，每个接口仅仅转发bit，不进行碰撞检测</p><h2 id="信道利用率"><a href="#信道利用率" class="headerlink" title="信道利用率"></a>信道利用率</h2><p><img src="/../img/computernetwork/2-29.png"></p><p>here we define $a &#x3D; \frac{t}{T_0}$</p><h2 id="以太网MAC层"><a href="#以太网MAC层" class="headerlink" title="以太网MAC层"></a>以太网MAC层</h2><p>IEEE 802为局域网规定了一种48bit的的全球地址固化在适配器的ROM中</p><p>适配器具有过滤的功能，其没收到一个MAC帧就先用硬件检查其目的地址，如果是发往本站的，就手下，否则丢弃，其主要包括：</p><p>（1）单播(unicast)</p><p>（2）广播(broadcast)</p><p>（3）多播(multicast)</p><h3 id="MAC帧的格式"><a href="#MAC帧的格式" class="headerlink" title="MAC帧的格式"></a>MAC帧的格式</h3><p><img src="/../img/computernetwork/2-30.png"></p><p>目的地址和源地址</p><p>类型字段标志商议层使用的是什么协议（也有一些协版本是指明了数据的长度），最后还有4byte的FCS</p><p>由于以太网使用曼彻斯特编码，所以其很容易知道一个帧的结束</p><p>显然由于CSMA&#x2F;CD的要求，MAC帧的数据部分一定要在46-1500之间，因此有可能需要填充数据部分。这主要依靠的是上一层报文中的“总长度字段”例如IP报文中的总长度字段，IP报文会将多余的填充字段去掉。</p><p>从MAC子层再次向下传输到物理层的时候还要再帧前面叫上8byte，包含7byte的 <strong>同步码（1010101010.。。。）</strong> 和1byte的 <strong>帧开始界定符</strong> 10101011，(都属于MAC帧的一部分)FCS不包括前同步符和帧开始界定符号。</p><p>以太网上的帧的传输是一定由间隙的，但是PPP上却是可能连续传输的。</p><h3 id="MAC-address"><a href="#MAC-address" class="headerlink" title="MAC address"></a>MAC address</h3><p>The first 6 hexadecimal digits (from left to right), which the IEEE<br>administers, identify the manufacturer or vendor and comprise the Organizational Unique Identifier (OUI). </p><p>The remaining 6 hex digits comprise the interface serial<br>number, administered by specific vendor</p><p>Broadcast</p><p>The destination MAC all 1’s </p><h1 id="扩展的以太网"><a href="#扩展的以太网" class="headerlink" title="扩展的以太网"></a>扩展的以太网</h1><h2 id="物理层扩展"><a href="#物理层扩展" class="headerlink" title="物理层扩展"></a>物理层扩展</h2><h2 id="数据链路层扩展"><a href="#数据链路层扩展" class="headerlink" title="数据链路层扩展"></a>数据链路层扩展</h2><p>通过自动学习算啊发建立一个帧交换表</p><p>其表项有生命周期</p><p>由来源学习对应的端口，不知道目标端口就像所有端口转发。</p><p>有时候为了增加网络的可靠性，会增加一些冗余的链路，这样自学习就可能导致不停兜圈子，于是需要一个生成树协议STP（见下面的论述）</p><h1 id="WANs"><a href="#WANs" class="headerlink" title="WANs"></a>WANs</h1><p>虚拟局域网协议允许在以太网的帧格式中插入一个4byte的表示符，记为 <strong>VLAN标记（tag）</strong> </p><p><img src="/../img/computernetwork/2-31.png"></p><h2 id="WAN-Technology-amp-Devices"><a href="#WAN-Technology-amp-Devices" class="headerlink" title="WAN Technology &amp; Devices"></a>WAN Technology &amp; Devices</h2><h3 id="WAN-Services"><a href="#WAN-Services" class="headerlink" title="WAN Services"></a>WAN Services</h3><p>A WAN is the communications network that connects LANs through a WAN Service Provider</p><p>WANs operate at the first three layers of the OSI, but focus mainly on the physical and datalinks</p><p><img src="/../img/computernetwork/2-17.png"></p><h3 id="WAN-Virtual-Circuits"><a href="#WAN-Virtual-Circuits" class="headerlink" title="WAN Virtual Circuits"></a>WAN Virtual Circuits</h3><p><strong>Switched Virtual Circuits (SVCs)</strong> are WAN paths to the destination established and terminated on demand</p><p>Three phases:</p><p><strong>Circuit establishment: creates the virtual circuit</strong></p><p><strong>Data transfer-sending and receiving user data</strong></p><p><strong>Ciruit termination tearing down the virtual circuit</strong></p><p>Telephone service and ATM use SVCs</p><p>Increased use of bandwidth but decreased cost</p><p><strong>Permanent Virtual Circuits (PVCs)</strong> are permanently established circuits with one mode:data transfer</p><p>x.25 and Frame Relay use PVCs</p><p>Decreased use of bandwidth but increased cost</p><h3 id="WAN-Devices"><a href="#WAN-Devices" class="headerlink" title="WAN Devices"></a>WAN Devices</h3><p>Inorder to connect to a leassed line the customer must have</p><ul><li><p>Access to the service provider’s circuit</p></li><li><p>An appropriate router port available</p></li><li><p>A CSU&#x2F;DSU, modem ISDN Termianl Adapter,etc</p></li></ul><h3 id="Modems"><a href="#Modems" class="headerlink" title="Modems"></a>Modems</h3><p><strong>Also called CSU&#x2F;DSUs (channel service units&#x2F;digital service units)</strong></p><p>Interface with voice-grade connection in order to convert analog signal to digital</p><h2 id="WAN-amp-The-OSI-Model"><a href="#WAN-amp-The-OSI-Model" class="headerlink" title="WAN &amp; The OSI Model"></a>WAN &amp; The OSI Model</h2><h3 id="WAN-Standards"><a href="#WAN-Standards" class="headerlink" title="WAN Standards"></a>WAN Standards</h3><p><img src="/../img/computernetwork/2-18.png"></p><p>physical layer:</p><p>protocols that describe how to provide electrical mechanical operational and functional connections for WAN services</p><p>These services are most often obtained from WAN service providers, alternate carriers post-telephone, and telegraph agencies</p><p>Descibles the interface between the <strong>data terminal equipment(DTE)</strong> and the <strong>data circuit-terminating equipment(DCE)</strong></p><p>Typically the DCE is the service provider and the DTE is the attached device</p><p>In this model, the services offered to the DTE are made available through a modem or a CSU&#x2F;DSU</p><p>Several physical layer standards specifying this interface between the DTE &amp; DCE are…</p><ul><li>EIA&#x2F;TIA-232<br>…</li></ul><h3 id="WAN-Data-Link-Layer"><a href="#WAN-Data-Link-Layer" class="headerlink" title="WAN Data-Link Layer"></a>WAN Data-Link Layer</h3><p>WAN data link protocols describe how frames are carried between systems on a single data link</p><p>They include protocols designed to operate over dedicated point-to-point, multipoint, and multi-access switched services</p><p>WAN standards are defined and managed bu a number of recongnized authorities, including the following agencies;ITU-T,ISO,IETF,&amp;EIA</p><h3 id="Data-link-Encapsulations"><a href="#Data-link-Encapsulations" class="headerlink" title="Data-link Encapsulations"></a>Data-link Encapsulations</h3><p>The WAN data link layers defines how data is encapsulated for transmission to remote sites</p><ul><li><p><strong>Point-to-Point(PPP):</strong> developed by the IETF.PPP contains a protocol field to identify the network-layer protocol</p></li><li><p>**High-Level Data Link Control (HDLC):**an ISO standard, HDLC not compatible between different vendors because of the way each vendor has chosen to implement it.HDLC support point-to-point&#x2F;multipoint configurations</p></li><li><p><strong>Frame Relay:</strong> uses simplified encapsulation with no error correction over high-quality digital facilities</p></li><li><p>**ISDN:**a set of digital services that services that transmits voice and data over existing phone lines</p></li><li><p>**Link Access Procedure,Balanced(LAPB):**For packet-switched networks used to encapsulate packets at layer 2 of the X.25 stack.Provides reliability and flow control on a point-to-point basis</p></li></ul><h2 id="WAN-Accessing-Methods"><a href="#WAN-Accessing-Methods" class="headerlink" title="WAN Accessing Methods"></a>WAN Accessing Methods</h2><p>The two most common point-to-point WAN encapsulation are HDLC and PPP</p><p>All the serial line encapsulation shared a common frame format, which has the following fields</p><p><img src="/../img/computernetwork/2-32.png"></p><p>The choice of encapsulation protocol depends on the WAN technologyand the communicatioing equipment</p><h3 id="PPP-and-HDLC"><a href="#PPP-and-HDLC" class="headerlink" title="PPP and HDLC"></a>PPP and HDLC</h3><p>PPP is  a standard serial-line encapsulation method</p><ul><li><p>Developed by IETF; replacing SLIP </p></li><li><p>Contains a field to identify the network layer protocol</p></li><li><p>PPP can check for link quality during connection establishment</p></li></ul><p>Provides authentication through <strong>Password Authentication Protocol(PAP)</strong> and <strong>Challenge Handshake Authentication Protocol(CHAP)</strong></p><p>HDLC is Cisco’s default encapsulation for serial lines</p><ul><li><p>No windowing or flow control</p></li><li><p>A proprietary type code is inserted in the frame which means that HDLC framing is not interoperate with other vendors’s equipment</p></li><li><p>Used when both ends of a dedicated-line connection are routers running Cisco IOS</p></li></ul><h3 id="PPP"><a href="#PPP" class="headerlink" title="PPP"></a>PPP</h3><p>The most widely used layer-2 protocol over serial links</p><p>Developed from SLIP, which</p><ul><li><p>Supports only IP protocol</p></li><li><p>Doesn’t support authentication</p></li><li><p>Doesn’t support compression</p></li><li><p>Doesn’t support error detection</p></li></ul><p>PPP offers the following features:</p><ul><li><p>Network protocol multiplexing</p></li><li><p>Dynamic assignement of IP addresses</p></li><li><p>Authentication:PAP,CHAP Compression</p></li><li><p>Compression</p></li></ul><p>use HDLC(IOS HDLC) as a basis to encapsulate layer 3 datagrams</p><p>Implements <strong>LCP (link control protocol)</strong> for:</p><ul><li><p>Connection establishment</p></li><li><p>Connection configuration options</p></li><li><p>Link-quality testing</p></li></ul><p>Implements <strong>NCP (Network Control Protocol)</strong> to select and configure layer 3 protocol</p><h3 id="PPP-frame-format"><a href="#PPP-frame-format" class="headerlink" title="PPP frame format"></a>PPP frame format</h3><p><img src="/../img/computernetwork/2-19.png"></p><h3 id="PPP-session-establishment-x2F-termianation"><a href="#PPP-session-establishment-x2F-termianation" class="headerlink" title="PPP session establishment&#x2F;termianation"></a>PPP session establishment&#x2F;termianation</h3><p>To establish communication over a point-to-point link:PPP goes through four distinct phases:</p><ul><li><p>Link establishment and configuration negotiation(LCP)</p></li><li><p>Link quality testing</p></li><li><p>Network layer protocol configuration(NCP)</p></li><li><p>Link termination</p></li></ul><h3 id="Phase1-link-establishment"><a href="#Phase1-link-establishment" class="headerlink" title="Phase1. link establishment"></a>Phase1. link establishment</h3><p>Link establishment is the first phase before any network-layer datagrams can be exchanged</p><p>Each PPP device sends LCPs to open the connection</p><p>LCP packets contain a configuration option field that allows devices to negotiate the use of options such as compression and authentication protocol etc</p><p>If a configuration option is not included in an LCP packet the default value for that configuration option is assumed</p><p>This phase is complete when a configuration acknowledge frames has been sent and received</p><h3 id="Phase2-Link-quality-determination"><a href="#Phase2-Link-quality-determination" class="headerlink" title="Phase2. Link quality determination"></a>Phase2. Link quality determination</h3><p>LCP packets are sent and received to measure the error rate on the link if configured to do so</p><p>Authentication, if used, takes place before the network-layer protocol congfiguration phase begins</p><p>LCP can delay transmission of network-layer protocol information until this phase is completed</p><h3 id="Phase3-Network-layer-protocol-configuration"><a href="#Phase3-Network-layer-protocol-configuration" class="headerlink" title="Phase3.Network layer protocol configuration"></a>Phase3.Network layer protocol configuration</h3><p>In this phase, the PPP devices send NCP packets to choose and configure one or more network-layer protocols(such as IP)</p><p>When each of the chosen network-layer protocols has been configured, datagrams form each network-layer protocol can be sent over link</p><h3 id="Phase4-Link-termination"><a href="#Phase4-Link-termination" class="headerlink" title="Phase4. Link termination"></a>Phase4. Link termination</h3><p>LCP can terminate the link at any time</p><p>At the user request;</p><p>Quality of the link;</p><p>Timeout</p><p>When LCP closes the link, it informs the network-layer protocols so that they can take appropriate action</p><h3 id="PAP"><a href="#PAP" class="headerlink" title="PAP"></a>PAP</h3><p><img src="/../img/computernetwork/2-20.png"></p><p>The calling side of the link enter authentication information to help ensure that the user has the network administrator’s permission to make the call</p><p>Remote node establishes its indentity, using a two-way handshake PAP</p><p>Username&#x2F;password pair is repeatedly sent by the remote node until authentication is acknowledged or the connection is terminated</p><p>Passwords are sent across the link in <strong>clear text</strong></p><p>Remote node is authenticated only once after the connection establishment phase</p><p>Configuration of remote router</p><p><code>Router(config)# int s0</code></p><p><code>Router(config)# ip addr 192.168.2.1 255.255.255.0</code></p><p><code>Router(config)# encapsulation ppp</code></p><p><code>Router(config)# ppp pap sent-username Router password ciscoA</code></p><p><code>Router(config)# no shut</code></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">Router</span><span class="hljs-params">(config)</span></span><span class="hljs-selector-id">#hostname</span> RTB<br><span class="hljs-function"><span class="hljs-title">RTB</span><span class="hljs-params">(config)</span></span><span class="hljs-selector-id">#username</span> RTA password CiscoA<br><span class="hljs-function"><span class="hljs-title">RTB</span><span class="hljs-params">(config)</span></span><span class="hljs-selector-id">#int</span> s0<br><span class="hljs-function"><span class="hljs-title">RTB</span><span class="hljs-params">(config)</span></span><span class="hljs-selector-id">#ip</span> <span class="hljs-selector-tag">address</span> <span class="hljs-number">192.168</span>.<span class="hljs-number">2.2</span> <span class="hljs-number">255.255</span>.<span class="hljs-number">255.0</span><br><span class="hljs-function"><span class="hljs-title">RTB</span><span class="hljs-params">(config)</span></span><span class="hljs-selector-id">#clock</span> rate <span class="hljs-number">56000</span><br><span class="hljs-function"><span class="hljs-title">RTB</span><span class="hljs-params">(config)</span></span><span class="hljs-selector-id">#encapsulation</span> ppp<br><span class="hljs-function"><span class="hljs-title">RTB</span><span class="hljs-params">(config)</span></span><span class="hljs-selector-id">#ppp</span> authentication pap<br><span class="hljs-function"><span class="hljs-title">RTB</span><span class="hljs-params">(config)</span></span><span class="hljs-selector-id">#no</span> shu<br></code></pre></td></tr></table></figure><h3 id="CHAP"><a href="#CHAP" class="headerlink" title="CHAP"></a>CHAP</h3><p><img src="/../img/computernetwork/2-21.png"></p><p>The called party periodically verifies the calling side, using a <strong>three-way handshake</strong> CHAP protocol</p><p>CHAP does not allow a caller to attempt authentication without a challenge(random number)</p><p>The remote node responds with a value (encrypted value including: the received challenge, its username and its password) </p><p>The host checks the response against its own value </p><ul><li><p>if the values match, the authentication is acknowledged</p></li><li><p>Otherwise, the connection is terminated</p></li></ul><p><img src="/../img/computernetwork/2-22.png"></p><p><img src="/../img/computernetwork/2-23.png"></p><p><strong>code</strong></p><p>Configuration of remote router</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">Router</span><span class="hljs-params">(config)</span></span><span class="hljs-selector-id">#hostname</span> RTA<br><span class="hljs-function"><span class="hljs-title">RTA</span><span class="hljs-params">(config)</span></span><span class="hljs-selector-id">#username</span> RTB password CiscoA<br><span class="hljs-function"><span class="hljs-title">RTA</span><span class="hljs-params">(config)</span></span><span class="hljs-selector-id">#int</span> s0<br><span class="hljs-function"><span class="hljs-title">RTA</span><span class="hljs-params">(config)</span></span><span class="hljs-selector-id">#ip</span> <span class="hljs-selector-tag">address</span> <span class="hljs-number">192.168</span>.<span class="hljs-number">2.1</span> <span class="hljs-number">255.255</span>.<span class="hljs-number">255.0</span><br><span class="hljs-function"><span class="hljs-title">RTA</span><span class="hljs-params">(config)</span></span><span class="hljs-selector-id">#encapsulation</span> ppp<br><span class="hljs-function"><span class="hljs-title">RTA</span><span class="hljs-params">(config)</span></span><span class="hljs-selector-id">#no</span> shu<br></code></pre></td></tr></table></figure><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">Router</span><span class="hljs-params">(config)</span></span><span class="hljs-selector-id">#hostname</span> RTB<br><span class="hljs-function"><span class="hljs-title">RTB</span><span class="hljs-params">(config)</span></span><span class="hljs-selector-id">#username</span> RTA password CiscoA<br><span class="hljs-function"><span class="hljs-title">RTB</span><span class="hljs-params">(config)</span></span><span class="hljs-selector-id">#int</span> s0<br><span class="hljs-function"><span class="hljs-title">RTB</span><span class="hljs-params">(config)</span></span><span class="hljs-selector-id">#ip</span> <span class="hljs-selector-tag">address</span> <span class="hljs-number">192.168</span>.<span class="hljs-number">2.2</span> <span class="hljs-number">255.255</span>.<span class="hljs-number">255.0</span><br><span class="hljs-function"><span class="hljs-title">RTB</span><span class="hljs-params">(config)</span></span><span class="hljs-selector-id">#clock</span> rate <span class="hljs-number">56000</span><br><span class="hljs-function"><span class="hljs-title">RTB</span><span class="hljs-params">(config)</span></span><span class="hljs-selector-id">#encapsulation</span> ppp<br><span class="hljs-function"><span class="hljs-title">RTB</span><span class="hljs-params">(config)</span></span><span class="hljs-selector-id">#ppp</span> authentication chap<br><span class="hljs-function"><span class="hljs-title">RTB</span><span class="hljs-params">(config)</span></span><span class="hljs-selector-id">#no</span> shu<br></code></pre></td></tr></table></figure><h3 id="ISDN"><a href="#ISDN" class="headerlink" title="ISDN"></a>ISDN</h3><p><strong>Integrated Services Digital Networks</strong> allow digital signals to be transmitted over exiting phone lines.</p><ul><li>Provides connectivity for remote sites</li></ul><p>ISDN has the following benefits:</p><ul><li><p>Can carry voice, video and data</p></li><li><p>Faster call setup tahn modems using the out-of-band D (or Delta) channel</p></li><li><p>Offter faster data transfer using the B (or Barrier) channels at 64kps</p></li></ul><h3 id="BRI-and-PRI"><a href="#BRI-and-PRI" class="headerlink" title="BRI and PRI"></a>BRI and PRI</h3><p>Therer are two ISDN services</p><ul><li><p><strong>BRI (Basic Rate Interface)</strong></p></li><li><p><strong>PRI(Primary Rate Interface)</strong></p></li></ul><p>The ISDN BRI service offers two B channels and one D channel</p><p>ISDN BRI delivers a total bandwidth of a 144-kbps (2B + D &#x3D;&#x3D; 144kps)<br>ne into three separate channels</p><p>BRI B channel service operates at 64kbps and is meant to carry user data and voice traffic</p><p>The third channel the D channel is a 16kbps signalling channell used to carry instructions that tell the telephone network how to handle each of the B channels</p><p><img src="/../img/computernetwork/2-24.png"></p><h3 id="Standard"><a href="#Standard" class="headerlink" title="Standard"></a>Standard</h3><p>ISDN utilizes a suite of ITU-T standards spanning the physical, data-link, and network layers of the OSI reference model</p><p><em>Several encapsulation choices are available. The two most common encapsulations are PPP and HDLC</em></p><p>ISDN defaults to HDLC However PPP is much more robust because it provides an excellent mechanism for authentication and negotiation of compatible link and protocol configuration</p><p>ISDN interfaces allow only a single encapsulation type</p><h3 id="xDSL"><a href="#xDSL" class="headerlink" title="xDSL"></a>xDSL</h3><p>使用数字技术对现有的模拟电话用户先进行改造，使其能够承载宽带业务</p><p>把0-4khz的低频谱段留给传统电话使用二八没有利用的高端频谱留给用户上网使用</p><p>DSL：数字用户线（Digital Subscriber Line）</p><p>x表示不同的宽带实现方案</p><h3 id="xDSL-1"><a href="#xDSL-1" class="headerlink" title="xDSL"></a>xDSL</h3><p>**ADSL (Asymmetric Digital Subscriber Line)**：非对称<br>数字用户线</p><p><strong>HDSL (High speed DSL)：</strong>高速数字用户线</p><p><strong>SDSL (Single-line DSL)：</strong> 对线的数字用户线</p><p><strong>VDSL (Very high speed DSL)：</strong>甚高速数字用户线</p><p><strong>IDSL ：</strong>ISDN 用户线</p><p><strong>RADSL (Rate-Adaptive DSL)：</strong>速率自适应 DSL，是ADSL 的一个子集，可自动调节线路速率</p><h3 id="ADSL"><a href="#ADSL" class="headerlink" title="ADSL"></a>ADSL</h3><p>ADSL的极限传输距离与数据率以及用户线的线径都有很大关系</p><p>上行和下行带宽不对称</p><p>ADSL在用户线两端各自安装一个ADSL的调制解调器</p><p><strong>DMT</strong></p><p>DMT采用频分复用的方法把40kHZ以上的一直到1.1MHz的高端频谱划分为许多的子信道，其中25个子信道用于上行信道，249个子信道用于下行信道</p><p>每个子信道大概占据4kHz。</p><p>相当于在一对数据线上使用许多小的调制解调器并行地传输数据</p><p>由于用户线地具体条件相差很大，所以ADSL采用自适应地调制技术</p><p>ADSL调制解调器检测可用地频率，各个子信道受到干扰地情况</p><p><img src="/../img/computernetwork/2-33.png"></p><h3 id="SONET"><a href="#SONET" class="headerlink" title="SONET"></a>SONET</h3><p><strong>同步光纤网（Synchronous Optical Network）</strong>各级时钟都来自一个非常精确地主时钟</p><p>四个光接口层</p><p>光子层（Photonic Layer）：处理跨越光缆地比特传送</p><p>段层（Section Layer）：在光缆上传送地STS-N帧</p><p>线路层（Line Layer）：负责路径层地同步和复用</p><p>路径层（Path Layer）：处理路径端接受设备PTE之间业务传输</p><h3 id="HFC（Hybrid-Fiber-Coax）"><a href="#HFC（Hybrid-Fiber-Coax）" class="headerlink" title="HFC（Hybrid Fiber Coax）"></a>HFC（Hybrid Fiber Coax）</h3><p><strong>光前同轴混合网（Hybrid Fiber Coax）</strong></p><p>HFC地主干线路采用光纤</p><p>HFC网将CATV网中地通州电缆主干部分使用为光纤</p><p>模拟光纤中使用AM技术</p><p>模拟光纤从头端链接到fiber node即光纤分配结点（ODN）（Optical Distribution Node）</p><p><img src="/../img/computernetwork/2-25.png"></p><p><strong>电缆调制解调器（Cable Modem</strong></p><p>是为了HFC使用地调制解调器</p><h3 id="FTTX"><a href="#FTTX" class="headerlink" title="FTTX"></a>FTTX</h3><p>Fiber to the x</p><p>光签到户，大楼，路边</p><h1 id="LAN-Switching-and-VLAN"><a href="#LAN-Switching-and-VLAN" class="headerlink" title="LAN Switching and VLAN"></a>LAN Switching and VLAN</h1><h2 id="Switching"><a href="#Switching" class="headerlink" title="Switching"></a>Switching</h2><p>Switch perform two basic functions: Building and maintaining switching tables based on MAC; Switching frames out the interface to the destination</p><h3 id="Symmetric-Switching"><a href="#Symmetric-Switching" class="headerlink" title="Symmetric Switching"></a>Symmetric Switching</h3><p>symmetric switching provides switched connections between prots with the same bandwidth</p><p>it can cause bottlenecks as users try to access servers on other segments</p><h3 id="Asymmetric-Switching"><a href="#Asymmetric-Switching" class="headerlink" title="Asymmetric Switching"></a>Asymmetric Switching</h3><p>asymmetric switching reduces the likelihood of a potential bottlenect at the server by attaching the segment with the server to a higher bandwidth port</p><p>asymmetric switching reqiures memory buffering in the switch</p><h3 id="Memory-Buffering"><a href="#Memory-Buffering" class="headerlink" title="Memory Buffering"></a>Memory Buffering</h3><p>Area of memory in a switch where destination and transmission data are stored until it can be switched out the correct port</p><ul><li><p>Port-based memory buffering: Packets are stored in a queue on each port possible for one packet to delay transmission of other packtets because of a busy destination port</p></li><li><p>Shared memory buffering: common memory buffering shared bu all ports; allows packtest to be RX on one port and TX out another port without changing it to a different queue</p></li></ul><h3 id="Switching-Methods"><a href="#Switching-Methods" class="headerlink" title="Switching Methods"></a>Switching Methods</h3><ul><li><p>Store-and-Forward: The switch receives the entire frame calculating the CRC at the end, before sending it to the destination</p></li><li><p>Cut-through: A switch add latency. It can be reduced by using cut-through switching method; Fast forward switching –only checks the destination MAC before immediatley forwarding the frame; Fragment Free–read the first 64 bytes to reduce errors before forwarding the frame</p></li></ul><p><img src="/../img/computernetwork/2-1.png"></p><h2 id="The-Spanning-Tree-Protocol"><a href="#The-Spanning-Tree-Protocol" class="headerlink" title="The Spanning-Tree Protocol"></a>The Spanning-Tree Protocol</h2><p>Loops may occur in a network for a variety of reasons:</p><p>Usually loops in networks are the result of a deliberate attempt to provide redundancy</p><p>Can also occur by configuration error: Two primary reasons loops can be absolutely disastrous in a bridged network: broadcast loops and bridge-table corruption</p><h3 id="L2-loops"><a href="#L2-loops" class="headerlink" title="L2 loops"></a>L2 loops</h3><p>Broadcasts and layer 2 loops can be a dangerous combination</p><p>Ethernet frames have no TTL field</p><p>After an Ethernet frame starts to loop, it will probably continue until someone shuts off one of the switches or break a link</p><p>The switches will flip flop the bridging table entry for Host A (creating extremely high CPU utilization)</p><p><img src="/../img/computernetwork/2-2.png"></p><h3 id="Overview-of-STP"><a href="#Overview-of-STP" class="headerlink" title="Overview of STP"></a>Overview of STP</h3><p>Elements of the Spanning Tree Protocol</p><p>Main function: allow redundant paths in a switched&#x2F;bridged network without incurring latency frome the effects of the loops</p><p>STP prevents loops by calculating a stable spanning-tree network topology</p><p>Spanning-tree frames(called bridge protocol data units–BPDUS) are used to determine the spanning-tree topology</p><h3 id="BPDUs"><a href="#BPDUs" class="headerlink" title="BPDUs"></a>BPDUs</h3><ul><li><p>STP establishes a root node, called the root bridge</p></li><li><p>The resulting tree originates from the root bridge</p></li><li><p>Redundant links that are not part of the shortest path tree are blocked</p></li><li><p>Data frames received on blocked links are dropped.</p></li><li><p>The message that a switch sends, allowing the formation a loop free logical topology, is BPDU</p></li></ul><p><img src="/../img/computernetwork/2-3.png"></p><p><img src="/../img/computernetwork/2-4.png"></p><h3 id="STP-Decision-Sequence"><a href="#STP-Decision-Sequence" class="headerlink" title="STP Decision Sequence"></a>STP Decision Sequence</h3><p>use the same four-step decision sequence:</p><p><strong>Lowest root BID</strong></p><p><strong>Lowest path cost to root bridge</strong></p><p><strong>Lowest sender BID</strong></p><p><strong>Lowest port ID</strong></p><h3 id="BID"><a href="#BID" class="headerlink" title="BID"></a>BID</h3><p>A Bridge ID 8 Bytes</p><p>The high-order BID subfield(2 bytes): bridge priority</p><p>2^16 possible values 0 - 655535(default 32768) but typically expressed in a decimal format</p><p>The low-order subfield(6 bytes): a MAC address assigned to the switch</p><p>Expressed in hexadecimal format</p><h3 id="electing-the-root-switch"><a href="#electing-the-root-switch" class="headerlink" title="electing the root switch"></a>electing the root switch</h3><p><strong>The switches elect a single root switch by looking for the switch with lowest BID</strong></p><p><strong>If all the switches are using the default bridge priority of 32768, the lowest MAC address serves as the tie-breaker</strong></p><h3 id="STP-cost"><a href="#STP-cost" class="headerlink" title="STP cost"></a>STP cost</h3><p><img src="/../img/computernetwork/2-5.png"></p><h3 id="Five-STP-states"><a href="#Five-STP-states" class="headerlink" title="Five STP states"></a>Five STP states</h3><p>States are established by configuring each port according to policy</p><p>Then STP modifies the states based on traffic patterns and potential loops</p><p>The default order of STP states are:</p><p><strong>Blocking-no frame forward, BPDUs heard</strong></p><p><strong>Listening–no frame forward, listening for data</strong></p><p><strong>Learning–no frame forwarded, learning addresses</strong></p><p><strong>Forwarding– frame forwarded, learning addresses</strong></p><p><strong>Disabled–no frames forwarded, no BPDUs heard</strong></p><h3 id="Initial-STP-Convergence"><a href="#Initial-STP-Convergence" class="headerlink" title="Initial STP Convergence"></a>Initial STP Convergence</h3><p>When the network first starts, all the bridges flood the network with a mix of BPDUs information</p><p>Immediately, they apply the decision sequence allowing them to home in on the set of BPDUs that form a single spanning tree for the entire network</p><p><strong>Step1:</strong> A single root bridge is elected to act as the central point of this network</p><p>Announce itself as the root</p><p>Checking all BPDUs received on the port as well as the BPDU that would be sent on that port</p><p>For each arrived BPDUs, if it is lower in value than the existing BPDU saved for the port</p><p>The old value is replaced</p><p>The sender of BPDU is accepted as the new root</p><p><strong>Step2:</strong> All the remaining bridges calculate a set of root ports</p><p>Every non-root bridge must select one root port</p><p>The root port of a bridge is the port that is closest to the root bridge.</p><p>The root path cost is the cumulative cost of all links to the root bridge</p><p><strong>Step3</strong>: Electing the designated ports: All the remaining bridges calculate a set of designated ports.</p><p>Each segment has one designated port that both sends and receives traffic to and from that segment and the root bridge</p><p>The bridge&#x2F;switch containing the desigated port for a given segment is referred to as the designated bridge for that segemnt</p><p>All the bridges&#x2F;switches will block the non-designed ports on them</p><h2 id="VLAN"><a href="#VLAN" class="headerlink" title="VLAN"></a>VLAN</h2><p>In a typical shared LAN</p><p>Users are grouped physically based on the hub they are plugged into</p><p>Routers segment the LAN and provide broadcast firewalls</p><p>In VLANS</p><p>you can group users logically by function, department or application in use</p><p>configuration is done through proprietary software</p><h3 id="VLANS"><a href="#VLANS" class="headerlink" title="VLANS"></a>VLANS</h3><p>vlan</p><p>work at layer 2 &amp; 3</p><p>control network broadcasts</p><p>allow users to be assigned by net admin</p><p>provide tighter network security</p><p><img src="/../img/computernetwork/2-6.png"></p><h3 id="Characteristics"><a href="#Characteristics" class="headerlink" title="Characteristics"></a>Characteristics</h3><p>A logical grouping of networks devices or users that are not restricted to a physical switch segment</p><p>The devices or users in a VLAN can be grouped by function, department, application and so on, regardless of their physical segment location</p><p>A VLAN creates a single broadcast domain that is not restricted tp a physical segment and is treated like a subnet</p><p>VLAN setup is done in the switch by the network administrator using the vendor’s software.</p><h3 id="Grouping-users"><a href="#Grouping-users" class="headerlink" title="Grouping users"></a>Grouping users</h3><p>VLAN can logically segment users into different subnets(broadcast domains)</p><p>Broadcast frames are only switched between ports on the switch or switches with the same VLAN ID.</p><p>Users can be logically group via software based on:</p><p><strong>port number</strong></p><p><strong>MAC address</strong></p><p><strong>protocol being used</strong></p><p><strong>application being used</strong></p><h3 id="VLANS-Across-the-Backbone"><a href="#VLANS-Across-the-Backbone" class="headerlink" title="VLANS Across the Backbone"></a>VLANS Across the Backbone</h3><p>VLAN configuration needs to support backbone transport of data between interconnected routers and switches</p><p>The backbone is the area used for interVlan communication</p><p>The backbone should be high-speed links, typically 100Mbps or greater</p><h3 id="Router’s-role-in-a-VLAN"><a href="#Router’s-role-in-a-VLAN" class="headerlink" title="Router’s role in a VLAN"></a>Router’s role in a VLAN</h3><p>A router provides connection between different VLANSjok</p><p>For example, you have VLAN1 and VLAN2</p><p>Within the switch, users one separate VLANs cannot talk to each other(benefit of a VLAN)</p><p>However, users on VLAN1 can email users on VLAN2 but they need a router to do it</p><h3 id="How-frames-are-used-in-a-vlan"><a href="#How-frames-are-used-in-a-vlan" class="headerlink" title="How frames are used in a vlan"></a>How frames are used in a vlan</h3><p>Switches amke filtering and forwarding decisions based on datat in the frame</p><p>There are two techniques used</p><ul><li><p>Frame filtering: examines particular information about each frame MAC address or layer 3 protocol type</p></li><li><p>Frame tagging: places a unique identifier in the header of each frame as it is forwarded throughout the network backhone</p></li></ul><p><strong>Frame fitering</strong></p><p><img src="/../img/computernetwork/2-7.png"></p><p>A filtering table is developed for each switch. Switches shared address table information. Table entries are compared with the frames. Switch takes appropriate action</p><p><strong>Frame Tagging</strong></p><p>Frame tagging implementation process:</p><p>Places a VLAN identifier in the header of each frame as it is forward throughout the network backbone</p><p>The identifier is understood and examined by each switch</p><p>When the frame exits the network backhone, the switch removes the identifier before the frame is transmitted to the target end station</p><p>Frame tagging functions at layer 2 and requires little processing or administrative overhead</p><p>IEEE standard, insert a label of VLAN to the header to identifythe VLAN belonging to(Frame Tagging)</p><p>ISL Cisco propriety ISL add a header of 26 bytes in front of the data frame and appends a CRC 4 bytes at the end</p><h3 id="Ports-VLANS-and-Broadcasts"><a href="#Ports-VLANS-and-Broadcasts" class="headerlink" title="Ports VLANS and Broadcasts"></a>Ports VLANS and Broadcasts</h3><p>Method for implementing VLANs </p><p><strong>Static</strong> </p><p><strong>Dynamic</strong>*</p><p>Each switched port can be assigned to a VLAN which ensures ports that do not share the same VLAN do not share broadcasts and ensures ports that do share the same VLAN will share broadcasts</p><h3 id="Static-VLANs"><a href="#Static-VLANs" class="headerlink" title="Static VLANs"></a>Static VLANs</h3><p>Defined</p><p>Static VLANs are when ports on a switch are administratively assigned to a VLAN</p><p>Benefits</p><p>secure easy to configure and monitor</p><p>works well in networks where moves are controlled</p><h3 id="Dynamic-VLANs"><a href="#Dynamic-VLANs" class="headerlink" title="Dynamic VLANs"></a>Dynamic VLANs</h3><p>When a station is initially connected to an unassigned port, the switch checks an entry in the table and dynamically configures the port with the right VLAN</p><p>Benefits</p><p>less administration (more upfront) when users are added or move</p><p>centralized notification of unauthorized user</p><p><img src="/../img/computernetwork/2-9.png"></p><p><img src="/../img/computernetwork/2-8.png"></p><p><img src="/../img/computernetwork/2-10.png"></p><h3 id="Port-Centric-VLANs"><a href="#Port-Centric-VLANs" class="headerlink" title="Port-Centric VLANs"></a>Port-Centric VLANs</h3><p><img src="/../img/computernetwork/2-11.png"></p><p>All nodes in the same VLAN are attached to the same router interface</p><p>Makes management easier because…</p><p>Users are assigned by router port</p><p>Vlan are easy to admin</p><p>provides increased security</p><p>packets do not “leak” into other domains</p><h3 id="Access-and-Trunk-links"><a href="#Access-and-Trunk-links" class="headerlink" title="Access and Trunk links"></a>Access and Trunk links</h3><p><img src="/../img/computernetwork/2-12.png"></p><p>Access link is a link on the switch that is a member of only one VLAN</p><p>This VLAN is referred to as the native VLAN of the port</p><p>Any device that is attached to the port is completely unaware that a VLAN exists.</p><h3 id="Trunk-Links"><a href="#Trunk-Links" class="headerlink" title="Trunk Links"></a>Trunk Links</h3><p>A trunk link is capable of supporting multiple VLANs</p><p>Trunk links are typically used to connect switches to other switches or routers</p><p>Switches support trunk links on both FastEthernet and Gigabit Ethernet ports</p><p>Access and trunk links exist too</p><p><img src="/../img/computernetwork/2-13.png"></p><p>A trunk is a point to point link that supports several VLANs</p><p>A trunk is to saves ports when creating a link between two devices implementing VLANs</p><p>A trunk link does not belong to a specific VLAN </p><p>Acts as a conduit for VLANs between switches and routers</p><p>The trunk link can be configured to transport all VLANs or to transport a limited number of VLANs</p><p>A trunk link may however a native VLAN</p><p>The native VLAN of the trunk is the VLAN that the trunk uses if the trunk link fails for any reason</p><h3 id="code"><a href="#code" class="headerlink" title="code"></a>code</h3><p>The following guidelines must be followed when configuring VLANs on Cisco 29xx switches</p><p>The maximum number of VLANs is switch dependent</p><p>VLAN 1  is one of the factory-default VLANs</p><p>VLAN 1 is the default Ethernet VLAN</p><p>Cisco Discovery Protocol and VLAN Trunking Protocol advertisements are sent on VLAN 1</p><p>The Catalyst 29xx IP address is in the VLAN 1 broadcast domain by default</p><figure class="highlight hsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs hsp"><span class="hljs-keyword">Switch</span><span class="hljs-meta"># vlan database</span><br><span class="hljs-keyword">Switch</span>(vlan)<span class="hljs-meta"># vlan vlan_number</span><br><span class="hljs-keyword">Switch</span>(vlan)<span class="hljs-meta"># exit</span><br>\<br><span class="hljs-keyword">Switch</span>(config)<span class="hljs-meta"># interface fastethernet <span class="hljs-number">0</span>/<span class="hljs-number">9</span></span><br><span class="hljs-keyword">Switch</span>(config-<span class="hljs-keyword">if</span>)<span class="hljs-meta"># switchport access vlan vlan number</span><br><br><span class="hljs-keyword">Switch</span><span class="hljs-meta"># show vlan [vlanid]</span><br><span class="hljs-keyword">Switch</span><span class="hljs-meta"># no vlan vlanid</span><br><span class="hljs-comment">//when a vlan is deteted any ports assigned to that VLAN become inactive. The ports will, however, remain associated with the deleted VLAN until assigned to a new VLAN.</span><br></code></pre></td></tr></table></figure><h3 id="Routing-between-VLANs"><a href="#Routing-between-VLANs" class="headerlink" title="Routing between VLANs"></a>Routing between VLANs</h3><p><img src="/../img/computernetwork/2-14.png"></p><p>Each VLAN has its own IP network or subnet</p><p><img src="/../img/computernetwork/2-15.png"></p><p><strong>code:</strong></p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-constructor">Router(<span class="hljs-params">config</span>)</span># interface fastethernet port-number subinterface-number<br><br><span class="hljs-constructor">Router(<span class="hljs-params">config</span>-<span class="hljs-params">if</span>)</span>#encapsulation dot1q vlan-number<br><br><span class="hljs-constructor">Router(<span class="hljs-params">config</span>-<span class="hljs-params">if</span>)</span>#ip address ip-address subnet-mask<br><br></code></pre></td></tr></table></figure><p><img src="/../img/computernetwork/2-16.png"></p>]]></content>
    
    
    <categories>
      
      <category>computernetwork</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Computernetwork3_networklayer</title>
    <link href="/2023/12/13/computernetwork3/"/>
    <url>/2023/12/13/computernetwork3/</url>
    
    <content type="html"><![CDATA[<h1 id="网络层简介"><a href="#网络层简介" class="headerlink" title="网络层简介"></a>网络层简介</h1><p>网络层向上提供简单灵活的，无连接的，尽最大努力的的数据报服务</p><p><strong>datagram 数据报</strong></p><h1 id="网际协议IP"><a href="#网际协议IP" class="headerlink" title="网际协议IP"></a>网际协议IP</h1><p><strong>网际协议IP Kahn-Cerx协议</strong></p><p><strong>IP协议配套协议</strong></p><p><strong>ARP(address Resolution)</strong></p><p><strong>ICMP(Internet Control Message Protocol)</strong></p><p><strong>IGMP(Internet Group Management Protocol)</strong></p><p><strong>RARP(Reverse Address Resolution Protocol)</strong></p><p><img src="/../img/computernetwork/3-11.png"></p><p><strong>一些中间设备</strong></p><p>物理层使用的中间设备叫做<strong>转发器(repeater)</strong></p><p>数据链路层使用的中间设备叫做<strong>网桥或者桥接器(bridge)</strong></p><p>网络层使用的中间设备叫做<strong>路由器(router)</strong></p><p>网络层以上使用的中间商设备叫做<strong>网关(gateway)</strong></p><p>由于参与互联的计算机网络都使用相同的网际协议IP（Internet Protocol）因此可以把互联以后的计算机网络看成是一个虚拟互联网络。</p><h2 id="IP地址"><a href="#IP地址" class="headerlink" title="IP地址"></a>IP地址</h2><p>基本划分以及历史发展</p><p>IP地址现在由互联网名字和数字分配机构ICANN(Internent Corporation for Assigned Names and Numbers)进行分配。</p><p>其地址的编址方案经过了三个历史阶段：</p><p><strong>1，分类的IP地址</strong></p><p><strong>2，子网的划分</strong></p><p><strong>3，构成超网</strong></p><h3 id="分类的IP地址"><a href="#分类的IP地址" class="headerlink" title="分类的IP地址"></a>分类的IP地址</h3><p>分成两个字段net-id标志主机或者路由器连接到的网络，此号在整个互联网内都是唯一的</p><p>主机号host-id标志此主机或者是路由器，在其所在的网络里必须时唯一的.</p><p>由此可见一个IP地址在整个互联网范围内都是唯一的。</p><p><img src="/../img/computernetwork/3-1.png"></p><p>网络号本身占有8 16 24 位，但是其开头几位是固定的了，否则计算机无法确认所给的地址是哪一类地址。</p><p>其中ABC都是单播地址用于一对一通信</p><p>D类地址用于多播</p><p>E类地址保留位以后使用</p><p><strong>点分十进制：</strong></p><p>将32位分割位8位然后用对应的十进制代替0-255</p><p><strong>网络号与主机号</strong></p><p>对于每个网络号，如果整个网络字段全为0是个保留地址，意思是本网络(形式上是一个A类地址的形式)；</p><p>网络号为127（01111111）（形式上是一个A类地址的形式）表示本地软件的回环测试（loopback set）</p><p>对于全为0的主机号码实际上表示的时一个网络地址，该主机所连接的到的网络地址(分配给网络地址)</p><p>对于全为1的主机号码实际上表示的时该网络上的所有主机</p><p>注意对于整个IP地址空间一共有2^32的地址</p><p>对于B类网络，由于其开头是10，首先网络字段全为0已经不可能（也意味着本网络只可能是A类）而127的回环地址又是属于A地址，所以网络号不存在减2的问题，但是实际上B类网络字段为10000000 0000000 （128.0）  也是不分配的。</p><p>实际上B类可以指派的网络号有2^14 - 1,主机号2^16-2</p><p>同理C类的无法表示出本网络以及回环地址，但是1100000 00000000 00000000 （192.0.0）也是不分配的</p><p>实际上C类可以指派的网络号由2^21 - 1,主机号2^8-2</p><p><img src="/../img/computernetwork/3-2.png"> </p><ol><li><p>IP地址管理机构在分配IP地址只分配网络号，而剩下的由得到网络号的单位来自行分配。</p></li><li><p>路由器仅仅根据目的主机所连接的网络号来转发分组而不考虑目的主机号，减小了路由表的储存空间以及查找路由表的时间</p></li><li><p>IP地址是标志一台主机和一条链路的接口的。</p></li><li><p>如果两个router仅仅只有一条线连接，可以不为这样一个比较小的网络分配IP，可视为无编号网络或者是无名网络(unumbered network)(anonymous network)</p></li></ol><p><img src="/../img/computernetwork/3-12.png"></p><h2 id="Private-address-Space"><a href="#Private-address-Space" class="headerlink" title="Private address Space"></a>Private address Space</h2><p>10.0.0.0 - 10.255.255.255</p><p>172.16.0.0 - 172.31.255.255</p><p>192.168.0.0 - 192.168.255.255</p><p>There are certain IP address ranges reserved for private IP addressing schemes.</p><p>数据报中的源地址和目的地址是不变的，路由器的地址并不在其中</p><h2 id="IP-地址与硬件地址"><a href="#IP-地址与硬件地址" class="headerlink" title="IP 地址与硬件地址"></a>IP 地址与硬件地址</h2><p><img src="/../img/computernetwork/3-13.png"></p><p><img src="/../img/computernetwork/3-14.png"></p><ol><li><p>IP抽象层只能看到IP数据报</p></li><li><p>路由器可以看到IP地址但是路由器仅仅是根据IP地址选择合适的转发路径，具体选择转发路径的方式就是选择不同的端口以及相对应的MAC地址进行再次封装</p></li><li><p>在局域网的链路层只能看见MAC帧</p></li><li><p>IP屏蔽了一些下层的复杂的细节</p></li></ol><h2 id="ARP"><a href="#ARP" class="headerlink" title="ARP"></a>ARP</h2><p>每台主机上都有一个ARP Cache里面有本局域网上的各个主机和路由器的IP地址到硬件地址的映射表，如果A要向某台主机B发送IP数据报，则在ARP Cache 中寻找对应的MAC地址，写入MAC帧。</p><p>如果找到了，封装mac帧，发送。</p><p>如果没找到则A就运行ARP协议</p><p>1）A发送一个ARP请求分组</p><p>注意ARP请求分组是广播而ARP响应是单播的</p><p>为了提高效率，在ARP请求中也会有主机A的MAC信息，B可以在收到请求后吧A的映射也写到自己的ARP Cache中</p><p>2）如果B在收到这个请求分组后发现自己的IP和要查询的IP相同，那么就收下（在自己的Cache中存储A的映射）,然后发送ARP响应分组。给出自己的IP地址以及硬件地址。由于B已经知道了A的MAC地址和IP地址的映射，因此ARP响应分组是普通的单播。</p><p>4）A收到响应分组以后就在ARP告诉缓存中写u人主机B的IP地址到硬件地址的映射。</p><p>ARP中的每一段映射都有生存周期，如果出现硬件更换的情况生存周期可以确保A能重新发送请求获得正确的映射（但是错误发送的IP报文回不来了）</p><p>注意：以上协议只能发生在同一局域网中，如果目标主机在另外的局域网中，那么主机只需要知道此网络的router的ip和mac的映射关系（这也可以解释为什么路由器在网络层应为其必须要去除mac帧的头然后读取ip信息然后才能转发）</p><h2 id="IP数据报的格式"><a href="#IP数据报的格式" class="headerlink" title="IP数据报的格式"></a>IP数据报的格式</h2><p><img src="/../img/computernetwork/3-3.png"></p><p>一个IP数据报由首部和数据两个部分组成。首部包括20byte的固定长度和可选字段。</p><ol><li>版本（4bit）</li></ol><p>IP协议版本</p><ol start="2"><li>首部长度（4bit）。</li></ol><p>首部长度的单位是32bit（4byte）由于固定部分是20字节所以其最小值是5 0101，最长是 15 1111 表示首部长为6obyte </p><p>如果首部长度不是4字节的整数倍，则必须填充以满足。</p><ol start="3"><li>区分服务（8bit）</li></ol><p>只有在使用区分服务的时候，这个字段才有作用，但是一般都不使用。</p><ol start="4"><li>总长度（16bit）</li></ol><p>总长度的单位是字节。最大可以表示的数据报有2^16 - 1&#x3D;65535byte.</p><p>数据报文最大（首部和数据之和的长度）受制于一个数据帧的数字字段的最大长度（最大传送单元MTU Maximum Transfer Unit）所以一个IP数据报的总长度一定不能超过MTU，否则必须进行分片处理</p><p>为了统一规定IP协议规定互联网中的所有主机和路由器必须能够接受长度不超过576字节的数据包 512 + 60（最长的IP数据报首部）+ 4字节的富余量，如果实际传输的数据大于此值，那么首先要检查目的主机以及路由器能否处理，否则就需要分片</p><p>如果有分片，，那么总长度是指的是各个分片的总长度（说明分片的时候要修改）</p><ol start="5"><li>标识：（identification）(16bit<br>)</li></ol><p>每产生一个数据报计数器就+1并且将此值付给标识字段。标识没有序号意义，仅仅只是作为是否同属一个原来的数据报在分片的标志。</p><ol start="6"><li>标志：(flag)（3bit）</li></ol><p>目前只有两位有意义</p><p>MF（more fragment）最低位，表示后面还有分片，否则表示这就是最后一个分片</p><p>DF(dont fragment)意思是不能分片，只有DF &#x3D; 0 的时候才允许分片。</p><ol start="7"><li>片位移（13bit）：单位为8byte，指出某片在原分组中的相对位置。这个偏移是在最原始的IP数据报中偏移而不是相对偏移。</li></ol><p>分片过程中标识不需要修改，但是总长度，MF位，DF位，片位移都需要进行相应的修改。</p><ol start="8"><li>生存时间：TTL（Time to live）（8bit）</li></ol><p>目前是作为跳数限制占8位最多255，每次经过一个路由器的时候就-1，当等于0则丢弃</p><ol start="9"><li>协议（8bit）</li></ol><p>此数据包携带的数据是哪种协议以便于上交给哪个协议进行处理</p><ol start="10"><li>首部检验和（16bit）</li></ol><p>只检验首部而不检验数据以减小计算量数据报每经过一个路由器，路由器都要重新计算一下首部检验和（首部可能有字段发生变化）</p><p>如何计算？</p><p>先把首部划分为16bit的字段，把校验和字段置为0。应为首部一定事宜4byte为单位的，因此一定可以完整划分。</p><p>将各个16bit按照反码算数运算相加，将得到的值取反码写入检验和字段。接收方收到数据报后将首部所有字段再用反码算数运算计算一遍最后取发反码，若没有差错则和为0</p><ol start="11"><li><p>源地址（32bit）</p></li><li><p>目的地址（32bit）</p></li></ol><p>可变部分：</p><p>主要用于支持排错测量以及安全等等措施。</p><h2 id="IP分组的转发"><a href="#IP分组的转发" class="headerlink" title="IP分组的转发"></a>IP分组的转发</h2><p>一个实际的路由表可能还会有其他信息，比如标记参数使用情况等等。</p><p><img src="/../img/computernetwork/3-15.png"></p><p>特定主机路由：针对特定的目的主机指明一个路由。</p><p>默认路由：</p><p>分组转发算法：</p><ol><li><p>从数据报的首部提取目的主机的IP地址D，得出目的网络地址位N</p></li><li><p>如果N就是此路由器直接相连的某个网络地址则直接交付，否则继续</p></li><li><p>如果路由表中有目的地址的D的特定主机路由，则交给指定的下一跳，否则继续</p></li><li><p>如果路由表中有达到网络N的路由，则把数据报传送给下一跳路由器。否则继续</p></li><li><p>如何没有则交给默认路由器</p></li><li><p>如果连默认路由器都没有，则报告转发出错</p></li></ol><h1 id="划分子网与构造超网"><a href="#划分子网与构造超网" class="headerlink" title="划分子网与构造超网"></a>划分子网与构造超网</h1><p>划分子网的方法是从主机号借用若干位作为子网号（sub-netid）</p><p>发送给某一网络的数据报照常，但是路由器收到数据报进行交付的时候根据子网交付</p><p>子网在拓扑结构上已经实际上是一个网络了，应为他实际上已经连接的是路由器的不同端口了</p><p><img src="/../img/computernetwork/3-16.png"></p><p><strong>子网掩码</strong></p><p>如果一个网络没有划分子网则其子网掩码中的1的位置和IP地址中的网络号字段（net-id）刚好一一对应</p><p>所以在配置路由器的时候在配置某一个端口的ip的同时也要配置其对应的子网掩码</p><p>注意：一但划分了子网，那么发送者应该是要知道这种划分的，原来的网络就不存在了，存在的只有各个子网，这些子网对外显现出为一个网络。</p><p>若subnet-id有nbit则一共有2^n的情况，除去全为0和全为1的情况，就可以得出表中的子网数。</p><p><img src="/../img/computernetwork/3-18.png"></p><p><img src="/../img/computernetwork/3-17.png"></p><p>子网号不能位全0或者全1但是随着CIDR的出现，这种方式在某些情况下也是支持的</p><h2 id="转发算法相应的改动"><a href="#转发算法相应的改动" class="headerlink" title="转发算法相应的改动"></a>转发算法相应的改动</h2><p>如果有子网，则转发算法也要修改</p><p>在判断是否直接交付时，此时连接路由器各个端口的已经不再是传统分类上的网络，而可能是子网，所以在判断网络时要将D与子网掩码AND然后判断</p><p>只有直接交付的情况下才能看到子网的具体划分，其余情况都是默认掩码，按照网络号（这与后面的路由表的生成有关系）</p><h2 id="CIDR-无分类编址"><a href="#CIDR-无分类编址" class="headerlink" title="CIDR 无分类编址"></a>CIDR 无分类编址</h2><p>CIDR将网络前缀都相同的连续IP组成一个CIDR地址块，在此情况下CIDR使的子网掩码就是一连串网络前缀的1</p><p>地址表示中全0和全1的主机号依然保留做特殊用途。</p><p>利用超网的划分可以实现地址聚合。</p><p><strong>最长前缀匹配</strong></p><p><img src="/../img/computernetwork/3-19.png"></p><p>采用地址聚合时一般是不会出现多个匹配的情况的，但是实际路由设置过程中可能出现非聚合的情况</p><p>如果出现多个匹配则选择最长的前缀匹配。</p><p>一种快速查找方法，首先将每一个网络号的唯一前缀求出来，唯一前缀要是最小的能够唯一表示的前缀字段</p><p>首先利用二分查找找出和最小前缀匹配的项目，但是这只是一个充分条件，在找到叶节点以后，在与子网掩码AND具体判断到底是不是正确的网络号</p><p>还有更进一步的压缩技术等等</p><h2 id="ICMP"><a href="#ICMP" class="headerlink" title="ICMP"></a>ICMP</h2><p><img src="/../img/computernetwork/3-4.png"></p><p>实际上就是一种控制意义的IP数据报</p><p>有两种类型：</p><p>ICMP差错报文和ICMP询问报文</p><p><img src="/../img/computernetwork/3-20.png"></p><p>ICMP的前4个字节是统一的格式，共有三个字段：类型，代码和检验和。接着4个字节与ICMP的类型有关，最后是数据字段，长度取决于ICMP类型。</p><p><strong>差错报文类型：</strong></p><ol><li><p>终点不可到达:路由器或者主机不能交付数据报就向源点发送终点不可到达报文。</p></li><li><p>时间超过：路由器收到生存时间为0的数据报，再丢弃数据报外，还要向源点发送时间超过报文。</p></li><li><p>参数问题：当路由器或者目的主机收到的数据报的首部中的字段的值不正确，就丢弃该数据报，并且向源点发送参数问题报文</p></li><li><p>改变路由（重定向）：路由器把改变路由报文发送给主机，让主机知道下一次应该法数据报发送给更好的路由器</p></li></ol><p><em>主机也有一个路由表。出于效率的考虑，这些主机不和连接在网络上的路由器定期交换路由信息。一般都在路由表中设置一个默认路由器的IP地址。</em></p><p>所有ICMP的差错报告报文中的数字字段都具有相同的格式。把收到的需要进行差错报告的IP数据报的首部和数据字段的前8个字节提取出来作为ICMP报文的数据字段。在加上ICMP报文的前8个字节。其中IP数据报的前八个字节是得到了运输层的端口号（TCP和UDP）</p><p><img src="/../img/computernetwork/3-21.png"></p><p>以下情况不发送差错报文</p><ul><li><p>ICMP差错报文的差错不发送差错报文</p></li><li><p>第一个分片的数据报片的所有后续数据报片</p></li><li><p>多播地址的数据报</p></li><li><p>特殊地址（如127.0.0.0或者0.0.0.0）</p></li></ul><p><strong>询问报文类型：</strong></p><ol><li>回送请求或者回答</li></ol><p>ICMP 回送请求报文是由主机或者路由器向一个特定的目的主机发出的询问。收到此报文的主机必须给ICMP发送回送回答报文。</p><ol start="2"><li>时间戳请求或者回答</li></ol><p>请某台主机或者路由器回答当前的日期和时间。回答报文中有一个32bit的字段。</p><h2 id="ping（Packet-Internet-Group）"><a href="#ping（Packet-Internet-Group）" class="headerlink" title="ping（Packet Internet Group）"></a>ping（Packet Internet Group）</h2><p>tracerout指令</p><h1 id="路由选择协议"><a href="#路由选择协议" class="headerlink" title="路由选择协议"></a>路由选择协议</h1><p>理想的路由算法：</p><ul><li><p>算法必须是正确的和完整的</p></li><li><p>算法在计算上应该简答</p></li><li><p>算法能适应通信量和网络拓扑的变化</p></li><li><p>算法应该具有稳定性</p></li><li><p>算法应该是公平的</p></li><li><p>算法应该是最佳的</p></li></ul><p>静态路由选择策略（人工配置每一条路由）</p><p>动态路由选择（自适应路由选择）</p><h3 id="AS（autonomous-system）（自洽系统）"><a href="#AS（autonomous-system）（自洽系统）" class="headerlink" title="AS（autonomous system）（自洽系统）"></a>AS（autonomous system）（自洽系统）</h3><p>在单一技术管理下的一组路由器，这些路由器使用一种自洽系统内部的路由选择协议和共同的度量。一个AS对于其他AS表现出的是一个单一的和一致的路由选择策略。</p><p>互联网将路由选择协议划分为两大类</p><ul><li><strong>内部网关协议IGP（Interior Gateway Protocol)</strong></li></ul><p>内部的路由选择协议和外部其他自洽系统的选择无关，有多种RIP OSPF  </p><ul><li><strong>外部网关协议EGP （Externel Gateway Protocol）</strong></li></ul><p>如果源主机和目的主机位于不同的自洽系统中，需要通过不同的路由协议转到另外一个自洽系统,目前使用BGP.</p><p>自洽系统之间的路由选择叫做域间路由选择（interdomain routing）</p><p>内部叫做 域内路由选择（intradomain routing）</p><p><img src="/../img/computernetwork/3-22.png"></p><h3 id="RIP"><a href="#RIP" class="headerlink" title="RIP"></a>RIP</h3><h4 id="RIP-History"><a href="#RIP-History" class="headerlink" title="RIP History"></a>RIP History</h4><p>RIP v1 is considered an interior gateway protocol that is classful</p><ul><li><p>RIP v1 is a distance vector protocol that broadcasts its entire routing table to each neighbour router at predetermined itervals. The default interval is 30 seconds.</p></li><li><p>RIP used hop count as a metric with 15 as the maximum number of hops</p></li></ul><p>RIP v1 is capable of load balancing over as many as six equal-cost paths, with four paths as the default.</p><p>等价路径是指在路由网络中，到达目的地的多条路径具有相同的代价或距离。RIP v1 可以在这些等价路径上进行负载均衡，确保流量在这些路径之间分布均匀。</p><p>RIP was originally specified in RFC 1058</p><p>it has the following limitations</p><ol><li><p>it doesn’t send subnet mask information in its updates</p></li><li><p>It sends updates as broadcasts on 255.255.255.255</p></li><li><p>It doesn’t support authentication</p></li><li><p>It doesn’t able to support VLSM(可变长度子网掩码) or Classless Interdomain Routing(CIDR)</p></li></ol><h4 id="code"><a href="#code" class="headerlink" title="code"></a>code</h4><p>The <code>router rip</code> command selects RIP as the routing protocol.</p><p>The network command assigns a NIC-based network address（特定网络接口卡相关联的网络地址） to which a router will be directly connected.</p><h4 id="RIP-v2"><a href="#RIP-v2" class="headerlink" title="RIP v2"></a>RIP v2</h4><p>RIP v2 is an improved version of RIP v1 and shares the following features:</p><ul><li><p>It is a distance vector protocol that uses a hop count metric.</p></li><li><p>It uses holddown timers to prevent routing loops&#x3D;default is 180 seconds.</p></li><li><p>It uses split horizon to prevent routing loops.</p></li></ul><p>“Split horizon” 是一种路由算法中的策略，旨在防止路由环路的发生。它规定了当路由器向邻居广播更新信息时，不应将包含该更新信息的路由条目发送给它学到这个信息的邻居。这就是说，如果路由器A向邻居B报告了某个目的地的路由信息，A就不会再从B那里接收关于这个目的地的路由信息。</p><p>A 中含有到达NET1的路由表项：NET1 直接交付，A转发给 B， B学到了此路由表 NET1 A。随后C与A的连接断开，但是A又收到了B的路由称中含有NET1 B，此时A已经删除了自己到达NET1的路由表项，因此又把NET1 B放入自己的路由表中，循环产生。</p><p>一般也可以使用带毒性的水平分割（split-horizon with poisoned reverse），B回发送给A的表项中条数被设置为16跳，即永远不可到达，因此A不可能将其放入自己的路由表中。</p><ul><li>It uses 16 hops as a metric for infinite distance</li></ul><h4 id="Compare-RIPV1-AND-RIPV2"><a href="#Compare-RIPV1-AND-RIPV2" class="headerlink" title="Compare RIPV1 AND RIPV2"></a>Compare RIPV1 AND RIPV2</h4><p><img src="/../img/computernetwork/3-23.png"></p><h4 id="code-1"><a href="#code-1" class="headerlink" title="code"></a>code</h4><p>The router command starts the routing process</p><p>The network commands causes the implementation of the following three functions:</p><ul><li>The routing updates are multicast out an interface</li></ul><p>RIP v2 使用组播（multicast）的方式发送路由更新。这意味着当路由器向网络中的其他路由器发送更新时，它将使用组播地址来传递这些信息，而不是向每个单独的路由器发送独立的更新。</p><ul><li>The routing updates are processed if they enter that same interface</li></ul><p>路由器接收到的路由更新只有在它们进入相同的接口时才会被处理。这是为了防止由于路由更新通过其他接口进入而引起的不必要的处理和信息循环。</p><ul><li>The subnet that is directly connected to that interface is advertised</li></ul><p>直接连接到路由器的子网将被广告（advertised）。这意味着路由器将告知其他路由器它所直接连接的网络的可达性信息。这是 RIP v2 的一种基本行为，确保网络中的其他路由器了解到这些直接连接的子网。</p><h4 id="Verifying-RIP-v2"><a href="#Verifying-RIP-v2" class="headerlink" title="Verifying RIP v2"></a>Verifying RIP v2</h4><ul><li><p>Router# show ip protocols </p></li><li><ul><li>Verifying the RIP Configuration</li></ul></li><li><p>Router# show ip route</p></li><li><ul><li>Displaying the IP Routing Table</li></ul></li></ul><p>Troubleshooting RIP v2</p><ul><li>Router# debug ip rip</li></ul><p><img src="/../img/computernetwork/3-24.png"></p><ul><li><ul><li>display RIP routing updates sent and received.</li></ul></li><li><p>Router# undebug all </p></li><li><ul><li>turn of al the debugging</li></ul></li></ul><h2 id="diferences-of-v1-and-v2"><a href="#diferences-of-v1-and-v2" class="headerlink" title="diferences of v1 and v2"></a>diferences of v1 and v2</h2><p><img src="/../img/computernetwork/3-9.png"></p><h4 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h4><p>基于距离向量的路由选择协议，要求每一个路由器都必须维护从他自己到其他每一个目的网络的距离的记录.</p><p>RIP使用“跳数”（hop count）记录距离。</p><p>RIP 跳数最大位16(15)，超过则认为不可达。</p><p>RIP不能再两个网络之间同时使用多条路由。RIP会选择一条具有有最少路由器的路由（哪怕存在更低时延的路由）</p><p><strong>如何交换信息</strong></p><ul><li><p>仅仅和相邻的路由器交换信息</p></li><li><p>交换的信息是当前本路由器知道的所有信息，即自己的现在路由表,“我到本自治系统中所有网络的最短距离，以及到每个网络应该经过的下一跳路由器”</p></li><li><p>按照固定的时间间隔交换路由信息</p></li></ul><p>PS：事实上也就意味着路由表中最主要的信息就是到某个网络的距离以及经过下一跳的地址。路由表更新的原则就是找到每个目的网络的最短距离，又称之为距离向量算法</p><p><strong>距离向量算法</strong></p><p>假设发送过来的路由表格式有：</p><ol><li><p>对于地址为X的相邻路由发送的报文，修改所有项目，把下一跳字段中的地址都作为X，并且把距离+1，即目的网络N， 距离d+1，下一跳路由器X。</p></li><li><p>如果路由表中没有N，则加入</p></li></ol><p>如果路由表中有N，否则查看此项目下一跳地址</p><p>如果下一跳地址是X，则更新</p><p>如果下一跳地址不是X，则比较距离，如果新项目距离更小则替换，如果项目距离更大则不替换。</p><ol start="3"><li>如果三分钟还没有收到相邻路由表的更新路由表，则把此相邻路由器记为不可到达，设置为16</li></ol><p><strong>Bellman-ford 算法</strong></p><p>对于一个有向图G（V,E）Bellman-ford算法可以给出对于源点s到其他各个点的最短路径。</p><p>算法思路。</p><p>set every vertice in a tag d(v) , default is inf except the source vertice. then check every edge e_i &lt;v_i,v_j&gt; if d(v_j) &gt; w(v_i,v_j) + d(v_i) then change the d(v_j) into w(v_i, v_j) + d(v_i). Do the loop for every vertice and after |v| - 1 loop all the vertice get the d(v) which is the min weighted path. </p><p>RIP协议也是封装在IP数据报内部的</p><h3 id="RIP协议的报文格式"><a href="#RIP协议的报文格式" class="headerlink" title="RIP协议的报文格式"></a>RIP协议的报文格式</h3><p><img src="/../img/computernetwork/3-6.png"></p><p>注意RIP协议使用UDP传输</p><p>首部四个字节，分为命令，版本，以及一段0，</p><p>命令字段指明此报文的意义，比如1请求路由信息<br>2表示对请求路由信息的响应或者未被请求而发出的路由更新报文</p><p>路由部分中地址标识符字段用来标志所使用的地址协议如果是IP就令这个字段为2（说明也可以支持非TCP&#x2F;IP协议）</p><p>路由标记填入自洽系统号（ASN Autonomous System Number）（有可能收到其他ASN的信息）</p><p>RIP报文的最大长度：4字节首部+20 * 25字节的路由信息</p><p>也可以使用鉴别功能此时将地址族标识设为全1，路由标记写入鉴别的类型</p><p>ASN是一个16位的号码 由IANA分配</p><p><img src="/../img/computernetwork/3-7.png"></p><p><strong>性质</strong>：</p><p>好消息传播的快，坏消息传播的慢</p><h3 id="OSPF"><a href="#OSPF" class="headerlink" title="OSPF"></a>OSPF</h3><p>Open Shortest Path First (OSPF) is a link-state routing protocol based on open standards</p><p>It is described in several standards of the Internet Engineering Task Force (IETF)</p><p>OSPF is becoming the preferred IGP protocol when compared with RIPv1 and RIPv2 because it is scalable</p><h4 id="Routing-Information"><a href="#Routing-Information" class="headerlink" title="Routing Information"></a>Routing Information</h4><p>The state of link is description of an interface and the relationship to its neighbouring routers</p><p>The collections of link-states forms a link-state database, sometimes called a topological database</p><p>Routers apply the Dijkstra shortest path first(SPF) algorithm to build the SPF tree, with themselves as the root.</p><p>Router calculate the best paths through SPF tree, then best paths are selected and placed in the routing table</p><p>开放最短路径有限（Open Short Path First）</p><p>使用了Dijstra提出的最短路径算法SPF</p><p><strong>Dijkstra SPF 算法</strong></p><p>set a source vertice</p><p>set a path_len array d[]</p><p>set a visited array visted[]</p><p>set a pre array[]</p><p>at the beginning d[s] &#x3D; 0 d[else] &#x3D; inf all the vertice is unvisited.</p><ol><li><p>in all unvisited vertice find the min path_len one v_j. set it as visited.</p></li><li><p>check all the connected and not visited vertice v_i if d[v_j] + w(v_j,v_i) &lt; d[v_i] update d[v_i] and set the pre of v_i as v_j;</p></li></ol><p>go back to 1 untill all the vertice is visited.</p><p><strong>proof</strong></p><p>for s-&gt; v if all the vertice between s -&gt; v is in S then the min v is dist[v] becaue eevry d[v] is inf so dist[v] if not update must come from v_n and which mean v_n have been visted. If there is a path s -&gt; v has a v_m not in the S, but s -&gt; v is the min, then pick s -&gt; v_m &lt; s -&gt; v_k v_k is the vertice before v, but when we pick v_k v_k is the min unvisited vertice and there is a paradox</p><p>特征：使用分布式的链路状态协议（link state protocol）</p><ol><li><p>用洪泛法（flooding）向所有路由器发送信息</p></li><li><p>发送的信息就是本路由器和相邻的所有路由器的链路状态 包括和哪些路由器相连以及该链路的度量（metric）</p></li><li><p>只有当链路发生变化的时候路由器才向所有路由器洪泛法发送信息，而RIP是定期交换信息</p></li></ol><p>最后全网范围内都有一个同步的链路数据库，包括所有路由器相互连接的情况，然后依据这个数据库构建自己的路由表Dijkstra最短路径路由算法</p><p>特点：更新过程收敛的块</p><p>为了降低洪泛法的消耗</p><p>可以将一个自洽系统划分位若干个更小的范围（area）每个区域都有一个32bit的区域标识符每一个区域的路由器只知道本区域的完整网络拓扑。在上层的区域叫做主干区域（backbone）规定其标识符为0.0.0.0，其他区域的来的信息都有区域边界路由器进行概括。所有主干区域内的路由器叫做主干路由器。与其他自治系统交换路由信息的路由器叫做自治边界路由器</p><p><img src="/../img/computernetwork/3-1.png">     </p><p>OSPF不使用UDP而是直接使用IP数据报传送</p><p><img src="/../img/computernetwork/3-8.png"></p><p>支持：</p><ol><li><p>为不同的业务设定不同的代价，从而得到不同的路由</p></li><li><p>如果某个目的网络有多条相同的代价，负载平衡</p></li><li><p>OSPF支持可变长的子网划分和无分类的CIDR</p></li><li><p>每一个链路状态都带上一个32位的序号，链路序号的增长速率不得超过5秒钟1次</p></li></ol><h4 id="OSPF五种分组分类"><a href="#OSPF五种分组分类" class="headerlink" title="OSPF五种分组分类"></a>OSPF五种分组分类</h4><ol><li><strong>问候（hello)</strong></li></ol><p>发现维持相邻的站的可达性</p><ol start="2"><li><strong>数据库描述分组（data description）</strong></li></ol><p>向临站给出自己的链路状态数据库中的所有的链路状态项目和摘要信息</p><p>3.<strong>链路状态请求（Link State Request</strong></p><p>向对方请求发送某些立澜路状态项目的详细信息</p><p>4.<strong>链路状态更新（Link State Update)</strong></p><p>用洪泛法对全网更新链路状态</p><p>5.<strong>链路状态确认（Link State Acknowledgment)</strong></p><p>两个相邻路由器每10s要交换依次问候分组，明确哪些相邻的路由器是可达的</p><p><img src="/../img/computernetwork/3-26.png"></p><h4 id="Difference-of-OSPF-and-RIP"><a href="#Difference-of-OSPF-and-RIP" class="headerlink" title="Difference of OSPF and RIP"></a>Difference of OSPF and RIP</h4><p><img src="/../img/computernetwork/3-10.png"></p><p>OSPF Features</p><p>OSPF overcomes these limitations</p><p>more robust and more scalable</p><p>large OSPF network use a hierarchical design</p><h4 id="Link"><a href="#Link" class="headerlink" title="Link"></a>Link</h4><p><strong>Link</strong> is a physical connection between two network devices</p><p><strong>Link-State</strong> of a link between two routers, including information about a router’s interface and its relationship to neighbouring routers</p><p><strong>cost</strong>: The value assigned to a link. Rather than hops, link-state protocols assign a cost to a link, which is based on the bandwidth of the link</p><p><strong>Area</strong>: a collection of networks&#x2F;routers having the same area ID Each router within an area has the same link-state information.</p><p><strong>Neighbourship Database</strong>: A listing of all the neighbours to which a router has established a bi-directional communication(双向通信)</p><p><strong>Topology Database</strong>: A list of information about all other routers in the internetwork. It shows the internetwork topology.</p><p><strong>Routing Table</strong>: Sometimes known as the forwarding database The routing table each router is unique.</p><p><strong>Designated Router</strong>(DR): One router on an OSPF multiaccess network that is elected to represent all the routers in that network</p><p><strong>Backup Designated Router(BDR)</strong></p><p>A standby router that becomes the DR, if the original DR fails.</p><p><strong>Area</strong>: Areas are defined with a 32 bits number. It can be either in IP format or single decimal value. Area 0 or Area 0.0.0.0</p><p><strong>Area 0</strong>:A single area whose area number is 0</p><p>OSPF uses a 2 level hierarchical model</p><p>In multi-area OSPF networks, all areas are required to connected to area 0</p><p><img src="/../img/computernetwork/3-27.png"></p><h4 id="OSPF-Operations"><a href="#OSPF-Operations" class="headerlink" title="OSPF Operations"></a>OSPF Operations</h4><p>OSPF use neighbour adjacencies to gain full knowledge of the network.</p><p>OSPF operation include five steps</p><p><strong>1. set up the adjacency relationships</strong></p><p>Router send hello packet at an interval. If a neighbour founded: Add the neighbour to the neighbourship database</p><p>Discover the network type</p><p>If a multi-access network, enter the DR&#x2F;BDR election process and enter Step2</p><p>Discover the network type. If point-to-point or point-to-multipoint, no DR&#x2F;BDR is elected and skip Step 2</p><p>If the DR&#x2F;BDR fields in the hello packet’s header is already occupied, no DR&#x2F;BDR election occurs and skip step2</p><p><strong>2. elect DR and BDR (if needed)</strong></p><p>If no other router online, the router becomes the DR. The next router to “come up” will be BDR</p><p>If multiple routers(two or more) come online simultaneously, then…</p><p>The router with the highest priority becomes DR (Priority of zero means “never DR”)(If there is a tie, then the router with the highest router ID become DR) (Router ID is the highest loopback or interface IP address)</p><p>Router with second highest priority or router ID beocmes BDR</p><p>BDR becomes DR if the DR fails</p><p>However If A new OSPF router joins the network with a higher priority or router ID the current DR and BDR do not change</p><p>It would become the new BDR only if the current DR failed or become the new DR only if the current DR and BDR failed</p><p><strong>3. Discover the routes</strong></p><p>Previously explained in the ExStart to Full State </p><p>Routers determine “master&#x2F;slave” relationship</p><p>DR&#x2F;BDR in multiaccess networks exchange LSAs and all DR routers send the DR&#x2F;BDR their Type 2 DBDS</p><p><strong>4. Choose appropriate routes</strong></p><p><strong>5. Maintain the route information</strong></p><p>The regular exchange of hellos is the mechanism OSPF uses to detect a new neighbour or a downed neighbour.</p><p>OSPF has seven states.</p><p>Init, 2Way, Ex Start, Exchange, Loading, Full</p><h4 id="OSPF-NetWork-Types"><a href="#OSPF-NetWork-Types" class="headerlink" title="OSPF NetWork Types"></a>OSPF NetWork Types</h4><ul><li><p>Broadcast multi-access, such as Ethernet</p></li><li><p>Point-to-Point networks</p></li><li><p>Nonbroadcast multi-access(NBMA)</p></li></ul><p>only Broadcast mutiaccess and nonbroadcast multiaccess should elect DR</p><h4 id="DR-amp-BDR"><a href="#DR-amp-BDR" class="headerlink" title="DR &amp; BDR"></a>DR &amp; BDR</h4><p>each router then forms adjacency with DR and BDR</p><p>The DR sends link-state information to all other routers on the segment using the multicast address of 224.0.0.5 for all OSPF routers</p><p>to ensure that DR&#x2F;BDR see the link states all routers send on the segment, the multicast address for all DR&#x2F;BDRs 224.0.0.6 is used.</p><h4 id="OSPF-Packets"><a href="#OSPF-Packets" class="headerlink" title="OSPF Packets"></a>OSPF Packets</h4><p><em>Header</em></p><p><img src="/../img/computernetwork/3-28.png"></p><p><img src="/../img/computernetwork/3-30.png"></p><p><strong>Hello</strong> Hello</p><p>when a router starts an OSPF routing process on an interface, it sends a hello packet and continues to send hello at regular intervals</p><p>The rule that govern the exchange of OSPF hello packets are called the Hello protocol</p><p>Hello are sent every 10 seconds by default on broadcast nulti-access and point-to-point networks, such as Frame Relay, the default time is 30 seconds.</p><p><strong>Database Description</strong> DBD</p><p><strong>Link-State Request</strong> LSR</p><p><strong>Link-State Update</strong> LSU</p><p><strong>Link-State Acknowledgement</strong> LSAck</p><h4 id="Which-Router-will-be-DR"><a href="#Which-Router-will-be-DR" class="headerlink" title="Which Router will be DR?"></a>Which Router will be DR?</h4><p>Priority + Router ID the biggest is DR the second biggest is BDR</p><p>Priority:1-255 Default &#x3D; 1;</p><p>Router ID:</p><ul><li><p>A loopback IP address</p></li><li><p>If the absence of loopback IP address, the highest-value address interface IP</p></li><li><p>If the interface goes down, the router must re-estabishing adjacency and readvertising LSA</p></li></ul><p><img src="/../img/computernetwork/3-29.png"></p><h4 id="code-2"><a href="#code-2" class="headerlink" title="code"></a>code</h4><p><code>router ospf process-id</code></p><p><code>network address wildcard-mask area area-id</code></p><p>在子网掩码中，将掩码的一位设成1表示IP地址对应的位属于网络地址部分。相反，在访问列表中将通配符掩码中的一位设成1表示I P地址中对应的位既可以是1又可以是0。有时，可将其称作“无关”位，因为路由器在判断是否匹配时并不关心它们。掩码位设成0则表示IP地址中相对应的位必须精确匹配。</p><p>to add stability to OSPF router ID</p><p><code>interface loopback number</code></p><p><code>ip address address subnet-mask</code></p><p>here the loopback interface must be configured before the OSPF process start</p><p><code>ip ospf priority number</code></p><p>number 0-255 default is 1</p><p>A 0 priority indicates an interface cannot be elected as DR or BDR</p><p><code>show ip ospf [interface type number]</code></p><h4 id="cost-of-ospf"><a href="#cost-of-ospf" class="headerlink" title="cost of ospf"></a>cost of ospf</h4><p>it is a 16bit number 1-65535</p><p>Formula COST &#x3D; 100000000&#x2F;Bandwidth</p><p>All interfaces connected to the same link must agree on the cost of that link. Otherwise, the link will be considered down.</p><p><code>Router(config-if)# ip ospf cost number</code></p><p><code>Router(config-if)# bandwidth number</code></p><h4 id="timers"><a href="#timers" class="headerlink" title="timers"></a>timers</h4><p>All the routers in an OSPF area must agree on the same hello interval and the same dead intervals</p><p><code>Router(config-if)# ip ospf hello-interval seconds</code></p><p><code>Router(config-if)# ip ospf dead-interval seconds</code></p><h2 id="BGP"><a href="#BGP" class="headerlink" title="BGP"></a>BGP</h2><p>互联网规模太大，自洽系统AS之间的路由选择非常困难</p><p>自洽系统AS之间路由选择必须考虑有关策略</p><p><strong>BGP发言人</strong></p><p>每一个自治系统的管理员选择至少一个路由器作为该自治系统的“BGP发言人”</p><p>BGP发言人之间使用TCP连接建立BGP共享路由信息</p><p>所以每一个BGP发言人除了要运行BGP协议以外，还必须运行该内部网关协议比如OSPF RIP</p><p><img src="/../img/computernetwork/3-31.png"></p><p>BGP刚刚运行的时候BGP相邻的站交换整个BGP路由表，以后只更新有变化的部分</p><p>报文：</p><ol><li><p>OPEN</p></li><li><p>UPDATE</p></li><li><p>KEPPALIVE</p></li><li><p>NOTIFICATION</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>computernetwork</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Computernetwork0_Summary</title>
    <link href="/2023/09/19/computernetwork0/"/>
    <url>/2023/09/19/computernetwork0/</url>
    
    <content type="html"><![CDATA[<h1 id="1-Summary"><a href="#1-Summary" class="headerlink" title="1 Summary"></a>1 Summary</h1><h2 id="networks"><a href="#networks" class="headerlink" title="networks"></a>networks</h2><p>What is a network</p><ul><li>a net work is an intricately connected system of objects, devices, or people</li></ul><h2 id="Data-Networks-Classifications"><a href="#Data-Networks-Classifications" class="headerlink" title="Data Networks Classifications"></a>Data Networks Classifications</h2><ul><li><p>LAN(Local Area Networks)</p><ul><li>Operate locally</li><li>Multi-user access</li><li>High speeds expected</li><li>Errror rate is easily controlled</li></ul></li><li><p>WAN(Wide Area Networks)</p><ul><li>Operate over larger areas</li><li>Access over serial links, optical links,etc</li><li>Traditionally, have lower speeds</li><li>Error rate can not be easily controlled</li></ul></li></ul><p><em>PS:Serial links typically refer to point-to-point connections that transmit data sequentially, bit by bit, over a single communication channel.</em> </p><p><em>PS: Optical links, also known as fiber-optic links, use fiber-optic cables to transmit data using light signals.</em></p><p>For WAN, it can be divded into point-point WAN and  switched WAN.</p><p>Image example:</p><p><img src="/img/computernetwork/1-1.png"></p><p>The most striking feature is the coverage, LAN usually cover a small area like an office or college, while LAN covers several nations or even continents</p><p>There is also other features. LAN can be privately held while WAN in most cases can not, the speed of its data transformation, business model and price are different too.</p><h2 id="LAN-Devices"><a href="#LAN-Devices" class="headerlink" title="LAN Devices"></a>LAN Devices</h2><ul><li>Hub（集线器）</li></ul><p>Multiport repeater, connects PCs, repeats siganls.</p><p>When one device sends data, the hub forwards it to all devices,regardless of whether the data is intended for a specific device or not</p><ul><li>Bridge（网桥）</li></ul><p>LAN segmentation,MAC addresses</p><p>It can separate the network into more segments.And it can forward or block traffic between segments based on MAC.</p><ul><li>Switch（交换机）</li></ul><p>Multiport-bridge, Full badn width</p><p><em>PS:The differences and similarities between switch and bridge. A Bridge has only 2 ports.<br>A switch can handle many ports.<br>Packet forwarding in Bridges is performed using the software. Thus bridges are software-based.<br>Packet forwarding in Switches are performed using ASICS (Application Specific Integrated Circuits). Thus a switch is hardware-based.<br>Both switch and bridge use the MAC address.</em></p><ul><li>Router（路由器）</li></ul><p>Path determination, Packet switching</p><h2 id="WAN-Devices"><a href="#WAN-Devices" class="headerlink" title="WAN Devices"></a>WAN Devices</h2><ul><li>Router</li></ul><p>Path determination,Packet switching</p><ul><li>Modem,CSU&#x2F;DSU,TA&#x2F;NT1</li></ul><p>Analog to Digital,Remote LAN connections</p><p><em>PS:A modem is a device that modulates digital data from a computer or network into analog signals suitable for transmission over analog communication lines, such as telephone lines.It also performs the reverse operation by demodulating incoming analog signals back into digital data for reception by computers or networking equipment.</em></p><h2 id="Multi-layer-ISP-structure"><a href="#Multi-layer-ISP-structure" class="headerlink" title="Multi-layer ISP structure"></a>Multi-layer ISP structure</h2><p>Image example:</p><p><img src="/img/computernetwork/1-5.png"></p><h2 id="Data"><a href="#Data" class="headerlink" title="Data"></a>Data</h2><p>Data is sent in bits,1s and 0s.</p><p>Data is not the information itself</p><p>Data is an encoded form of information</p><h2 id="Data-Packets"><a href="#Data-Packets" class="headerlink" title="Data Packets"></a>Data Packets</h2><ul><li><p>Computer data is often broken into small, easily transmitted units</p><ul><li>Using the OSI model, these units can be called packets, or frames or segments</li></ul></li></ul><p>Computers can take turns sending packets</p><p>If packet is lost, only small amount of data must be retransmitted.</p><p>Data can take different paths</p><h2 id="Protocol"><a href="#Protocol" class="headerlink" title="Protocol"></a>Protocol</h2><p>All devices must speak the same “language” or use the same protocol (use same set of rules).</p><h2 id="Source-and-Destination"><a href="#Source-and-Destination" class="headerlink" title="Source and Destination"></a>Source and Destination</h2><h2 id="Media-Types"><a href="#Media-Types" class="headerlink" title="Media Types"></a>Media Types</h2><p>Media—material through which data packets travel</p><h2 id="Digital-Bandwidth"><a href="#Digital-Bandwidth" class="headerlink" title="Digital Bandwidth"></a>Digital Bandwidth</h2><p>Bandwidth is the measure of how much information can flow from one place to another in a given amount of time.</p><p>Measured in: bits&#x2F;second (bps)</p><h2 id="Throughput"><a href="#Throughput" class="headerlink" title="Throughput"></a>Throughput</h2><p>Through is a measure of the rate of data transfer over a network.</p><h2 id="OSI-Open-System-Interconnection-Model"><a href="#OSI-Open-System-Interconnection-Model" class="headerlink" title="OSI(Open System Interconnection) Model"></a>OSI(Open System Interconnection) Model</h2><ol start="7"><li><p>Application (User interface)</p></li><li><p>Presentation (Data presentation and encryption)</p></li><li><p>Session (Inter-host connection)</p></li></ol><p><em>PS:the session layer is responsible for managing and controlling the establishment, maintenance, and termination of sessions or connections between two communicating devices.</em></p><ol start="4"><li><p>Transport (End-to-end connections)</p></li><li><p>Network (Address and best path)</p></li><li><p>Data Link (Access to media)</p></li><li><p>Physical (Binary transmission)</p></li></ol><p>The top 3 layers are known as the <em>application layers</em>, for they deal with the user interface, data formatting, and the application access.</p><p>Layers 1-4 are known as the data flow layers, for they control the physical delivery of messages over the network.</p><h3 id="Physical-Layer"><a href="#Physical-Layer" class="headerlink" title="Physical Layer"></a>Physical Layer</h3><p>defines the electrical and functional specifications for the link between end systems (including media)<br>defines voltage levels, timing of voltage changes, physical data rates, maximum transmission distances, physical connectors, and other, similar attributes.</p><h3 id="Data-Link-Layer"><a href="#Data-Link-Layer" class="headerlink" title="Data Link Layer"></a>Data Link Layer</h3><p>provides reliable transit of data across a physical link</p><p>is concerned with physical (as opposed to logical) addressing, network topology, network access, error notification, ordered delivery of frames, and flow control</p><p>is upper sublayer of the data link layer is Logical Link Control, (LLC)the lower sublayer of the data link layer called the Media Dependebt Sublayer(MDA)</p><p><em>PS:The data link layer breaks down the stream of data from the network layer (Layer 3) into smaller, manageable units called frames. These frames include both data and control information.</em></p><p><em>PS:Each network interface card (NIC) or network adapter on a device has a unique hardware address known as a Media Access Control (MAC) address. The data link layer uses MAC addresses to identify the source and destination devices within the same LAN. This addressing allows devices to determine whether a received frame is intended for them or not.</em></p><p><em>PS:The data link layer includes mechanisms for detecting and, in some cases, correcting errors that can occur during data transmission. This is crucial for ensuring data integrity within a local network.</em></p><p><em>PS:Flow control mechanisms are used to manage the flow of data between devices. They prevent data congestion by regulating the rate at which data is sent and acknowledged.</em></p><p>PS:In shared or multi-access LANs, such as Ethernet networks, the data link layer implements access control methods to determine which device has the right to transmit data at a given time. This helps avoid data collisions and ensures fair access to the network medium.</p><h3 id="The-Network-Layer"><a href="#The-Network-Layer" class="headerlink" title="The Network Layer"></a>The Network Layer</h3><p>Provide connectivity and path selection between two end systems where routing occurs</p><p>These may be located on geographically separated networks</p><h3 id="Transport-Layer"><a href="#Transport-Layer" class="headerlink" title="Transport Layer"></a>Transport Layer</h3><p>segments and reassembles data into a data stream</p><p>concerned with how reliable transport over an internetwork is accomplished</p><p>responsible for reliable network communication between end nodes and provides mechanisms for<br>the establishment, maintenance, and termination<br>of virtual circuits, transport fault detection and<br>recovery, and information flow contro</p><h3 id="Session-Layer"><a href="#Session-Layer" class="headerlink" title="Session Layer"></a>Session Layer</h3><p>establishes, manages, and terminates sessions between communicating hosts</p><p>synchronizes dialog between presentation layer entities and manages their data exchange</p><p>offers provisions for efficient data transfer, class of service, and exception reporting of session, presentation, and application layer problems</p><p>manages data exchange between presentation<br>layer entities</p><h2 id="Presentation-Layer"><a href="#Presentation-Layer" class="headerlink" title="Presentation Layer"></a>Presentation Layer</h2><p>ensures that information sent by the application layer of one system is readable by the application layer of another system</p><p>translates between multiple data representation formats by using a common data representation format</p><p>concerned with data structures and negotiation of data transfer syntax</p><p>responsible for compression and encryption</p><h2 id="Application-Layer"><a href="#Application-Layer" class="headerlink" title="Application Layer"></a>Application Layer</h2><p>closest to the user</p><p>provides network services to user applications</p><p>does not provide services to any other OSI layer</p><h2 id="Protocols-on-ISO-layers"><a href="#Protocols-on-ISO-layers" class="headerlink" title="Protocols on ISO layers"></a>Protocols on ISO layers</h2><p><img src="/img/computernetwork/1-6.png"></p><h2 id="Data-encapsulation"><a href="#Data-encapsulation" class="headerlink" title="Data encapsulation"></a>Data encapsulation</h2><p><img src="/img/computernetwork/1-7.png"></p><h2 id="TCP-x2F-IP-Model"><a href="#TCP-x2F-IP-Model" class="headerlink" title="TCP&#x2F;IP Model"></a>TCP&#x2F;IP Model</h2><p>TCP&#x2F;IP Model and OSI Model:</p><p>The OSI and TCP&#x2F;IP models are both logical models that describe how information is transmitted between two devices across a network. They both define a set of layers, with each layer performing a specific set of functions to enable the transmission of data</p><h3 id="Application-Layer-1"><a href="#Application-Layer-1" class="headerlink" title="Application Layer"></a>Application Layer</h3><p>Handles high-level protocols, issues of representation, encoding, and session control</p><p>TCP&#x2F;IP combines all application-related issues into one layer, and assures this data is properly packaged for the next layer.</p><h3 id="Transport-Layer-1"><a href="#Transport-Layer-1" class="headerlink" title="Transport Layer"></a>Transport Layer</h3><p>Deals with the quality-of-service issues of reliability, flow control, and error correction.</p><p>Transmission Control Protocol (TCP)</p><p>User Datagram Protocol(UDP)</p><p>It package application layer information into<br>units called segments</p><h3 id="Internet-Layer"><a href="#Internet-Layer" class="headerlink" title="Internet Layer"></a>Internet Layer</h3><p>Purpose: Send source packets from any network on the internetwork and have them arrive at the destination independent of the path and networks</p><p>Best path determination and packet switching occur at this layer</p><p>Internet protocol (IP)</p><h3 id="Network-Access-Layer"><a href="#Network-Access-Layer" class="headerlink" title="Network Access Layer"></a>Network Access Layer</h3><p>Is also called the host-to-network layer. </p><p>It is concerned with all of the issues that an IP packet requires to actually make a physical link, and then to make another physical link.</p><p>It includes the LAN and WAN technology details, and all the details in the OSI physical and data link layers.</p><h3 id="TCP-x2F-IP-Protocols"><a href="#TCP-x2F-IP-Protocols" class="headerlink" title="TCP&#x2F;IP Protocols"></a>TCP&#x2F;IP Protocols</h3><p>Image example</p><p><img src="/img/computernetwork/1-8.png"></p><h2 id="Network-Topologies"><a href="#Network-Topologies" class="headerlink" title="Network Topologies"></a>Network Topologies</h2><p>Image example</p><p><img src="/img/computernetwork/1-9.png"></p><h3 id="Bus"><a href="#Bus" class="headerlink" title="Bus"></a>Bus</h3><p>Physical Perspective:</p><p>Each host is wired to a common wire. </p><p>Advantage: all hosts can communicate directly. </p><p>Disadvantage: A break in the cable disconnects hosts from each other.</p><p>Logical Perspective </p><p>Every networking device to see all signals from all other devices </p><h3 id="Ring"><a href="#Ring" class="headerlink" title="Ring"></a>Ring</h3><p>Physical Perspective</p><p>All devices wired directly to each other in what is called a daisy-chain. </p><p>Logical Perspective</p><p>In order for information to flow, each station must pass the information to its adjacent station.</p><h3 id="Dual-Ring"><a href="#Dual-Ring" class="headerlink" title="Dual Ring"></a>Dual Ring</h3><p>Physical Perspective</p><p>A dual ring topology is the same as a ring topology, except that there is a second, redundant ring, that connects the same devices. </p><p>Advantages: provide reliability and flexibility </p><p>Logical Perspective</p><p>A dual ring topology acts like two independent rings, of<br>which, only one at a time is used</p><h3 id="Star"><a href="#Star" class="headerlink" title="Star"></a>Star</h3><p>Physical Perspective</p><p>Advantage: it allows all other nodes to communicate with each other, conveniently. It also might be desirable for security or restricted access reasons</p><p>disadvantage: if the central node fails, the whole network becomes disconnected. Depending on the type of networkingdevice used, collisions can be a problem. </p><p>Logical Perspective</p><p>The flow of all information would go through one device.</p><h3 id="Tree-Hierarchical"><a href="#Tree-Hierarchical" class="headerlink" title="Tree(Hierarchical)"></a>Tree(Hierarchical)</h3><p>Physical Perspective</p><p>The trunk is a wire that has several layers of branches.</p><p>Logical Perspective</p><p>The flow of information is hierarchical. </p><h3 id="Mesh"><a href="#Mesh" class="headerlink" title="Mesh"></a>Mesh</h3><p>Physical Perspective </p><p>Advantage: the maximum connectivity and reliability. </p><p>Disadvantage: the amount of media for the links, and the amount of connections to the links becomes overwhelming. </p><p>Logical Perspective </p><p>The behavior of a complete, or mesh topology depends greatly on the devices used. </p><h3 id="Cellular"><a href="#Cellular" class="headerlink" title="Cellular"></a>Cellular</h3><p><img src="/img/computernetwork/1-10.png"></p><p>Physical Perspective</p><p>The cellular topology is for wireless technology </p><p>Sometimes the receiving nodes move (e.g. cell phone), and sometimes the sending nodes move (e.g. satellite)</p><p>Logical Perspective</p><p>Nodes communicate with each other directly (though sometimes extremely difficult), or communicate only with their adjacent cells, which is extremely inefficient. </p><h2 id="LAN-devices"><a href="#LAN-devices" class="headerlink" title="LAN devices"></a>LAN devices</h2><p>Host-devices connected directly to network segment, not part of any layer but the functions of the OSI model are performed in software inside host</p><h3 id="NICs-Layer-2"><a href="#NICs-Layer-2" class="headerlink" title="NICs -Layer 2"></a>NICs -Layer 2</h3><p>Carries a unique code called a MAC address.</p><p>Is used to control data communication for the host on the network</p><p>Translates parallel signal produced by computer into serial format to send over the network</p><p>Transceiver used to<br>convert signals as well as send and receive bits</p><p>Provides the host’s<br>access to the medium</p><h3 id="Media-Layer-1"><a href="#Media-Layer-1" class="headerlink" title="Media -Layer 1"></a>Media -Layer 1</h3><p>Carries a flow of information in bits</p><p>The means by which signals travel from one networked device to another</p><h3 id="Repeaters-Layer-1"><a href="#Repeaters-Layer-1" class="headerlink" title="Repeaters - Layer 1"></a>Repeaters - Layer 1</h3><p>used to extend the<br>length of the network</p><p>clean, amplify, and resend signals that are weakened by long cable</p><p>regenerate (amplify) and retime network signals at the bit level to allow them to travel a longer distance on the media</p><p>perform no filtering</p><h3 id="Hubs-Layer-1"><a href="#Hubs-Layer-1" class="headerlink" title="Hubs -Layer 1"></a>Hubs -Layer 1</h3><p>used to regenerate and retime network signals</p><p>propagate signals </p><p>cannot filter traffic</p><p>cannot determine the best path</p><p>used as network concentration points</p><p>sometimes called multiport repeater</p>]]></content>
    
    
    <categories>
      
      <category>computernetwork</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>vim配置与hexo搭建</title>
    <link href="/2023/09/09/vim%E9%85%8D%E7%BD%AE%E4%BB%A5%E5%8F%8Ahexo%E6%90%AD%E5%BB%BA/"/>
    <url>/2023/09/09/vim%E9%85%8D%E7%BD%AE%E4%BB%A5%E5%8F%8Ahexo%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<p>仅做个人记录</p><h1 id="vim配置"><a href="#vim配置" class="headerlink" title="vim配置"></a>vim配置</h1><p>此处直接使用的是wsl ubuntu22.04 自带的vim</p><h2 id="配置按键映射"><a href="#配置按键映射" class="headerlink" title="配置按键映射"></a>配置按键映射</h2><pre><code class="hljs">    inoremap jk &lt;Esc&gt;    inoremap &#39; &#39;&#39;&lt;ESC&gt;i    inoremap &quot; &quot;&quot;&lt;ESC&gt;i    inoremap () ()&lt;ESC&gt;    inoremap [ []&lt;ESC&gt;    inoremap &#123; &#123;&#125;&lt;ESC&gt;i    nnoremap o o&lt;ESC&gt;</code></pre><h2 id="安装vundle插件管理"><a href="#安装vundle插件管理" class="headerlink" title="安装vundle插件管理"></a>安装vundle插件管理</h2><p>将vundle插件clone到指定位置</p><pre><code class="hljs">    git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim</code></pre><p>在.vimrc文件中加入</p><pre><code class="hljs">    &quot;这是vundle所需要的配置文件    &quot;--------------------------    set nocompatible        filetype off    &quot; 设置Vundle管理vim插件 set the runtime path to include Vundle and initialize     set rtp+=~/.vim/bundle/Vundle.vim    call vundle#begin()    &quot; 安装的vim插件写在下面        &quot; 安装的vim插件写在上面    call vundle#end()     &quot; required    filetype plugin on    &quot; required</code></pre><p>安装插件，输入对应的地址或者名称</p><pre><code class="hljs">    Plugin &#39;Valloric/YouCompleteMe&#39; &quot;YCM&quot;    Plugin &#39;VundleVim/Vundle.vim&#39;   &quot; let Vundle manage Vundle, required    Plugin &#39;scrooloose/nerdtree&#39; &quot;nerdtree&quot;    Plugin &#39;tpope/vim-surround&#39; &quot;自动环绕&quot;    Plugin &#39;jiangmiao/auto-pairs&#39; &quot;括号补全&quot;    Plugin &#39;https://gitee.com/linuor/gruvbox.git&#39; &quot;gruvbox主题&quot;    Plugin &#39;https://gitee.com/then_then/markdown-preview.nvim.git&#39; &quot;markdown预览&quot;</code></pre><p>进入vim，命令模式执行 </p><pre><code class="hljs">    ：PluginInstall</code></pre><p>其中YCM耗时较长，且需要进一步配置（运行YCM文件目录下的 install.py文件（同样时间较长））</p><p>配置各个插件</p><pre><code class="hljs">    &quot;这是markdwon预览的配置    let g:mkdp_path_to_chrome = &#39;/mnt/c/ProgramData/Microsoft/Windows/Start Menu/Programs/Microsoft Edge.lnk&#39;    &quot; 设置 chrome 浏览器的路径（或是启动 chrome（或其他现代浏览器）的命令）    let g:mkdp_auto_start = 0    &quot; 设置为 1 可以在打开 markdown 文件的时候自动打开浏览器预览，只在打开    &quot; markdown 文件的时候打开一次    let g:mkdp_auto_open = 1    &quot; 设置为 1 在编辑 markdown 的时候检查预览窗口是否已经打开，否则自动打开预    &quot;     let g:mkdp_auto_close = 1    &quot; 在切换 buffer 的时候自动关闭预览窗口，设置为 0 则在切换 buffer 的时候不    &quot; 自动关闭预览窗口    let g:mkdp_refresh_slow = 0    &quot; 设置为 1 则只有在保存文件，或退出插入模式的时候更新预览，默认为 0，实时    &quot; 更新预览    let g:mkdp_command_for_global = 0    &quot; 设置为 1 则所有文件都可以使用 MarkdownPreview 进行预览，默认只有 markdown    let g:mkdp_echo_preview_url = 1    &quot;这是Nerdtree相关配置文件    &quot;------------------------    autocmd vimenter * NERDTree  &quot;自动开启Nerdtree    let g:NERDTreeWinSize = 35    &quot;开启nerdtree快捷键    map &lt;F3&gt; :NERDTree&lt;CR&gt;    let NERDTreeShowBookmarks=1  &quot; 开启Nerdtree时自动显示Bookmarks    &quot;打开vim时如果没有文件自动打开NERDTree    autocmd vimenter * if !argc()|NERDTree|endif    &quot;当NERDTree为剩下的唯一窗口时自动关闭    autocmd bufenter * if (winnr(&quot;$&quot;) == 1 &amp;&amp; exists(&quot;b:NERDTree&quot;) &amp;&amp; b:NERDTree.isTabTree()) | q | endif    &quot;设置树的显示图标    let g:NERDTreeDirArrowExpandable = &#39;▸&#39;      let g:NERDTreeDirArrowCollapsible = &#39;▾&#39;     let g:NERDTreeShowLineNumbers=1  &quot; 是否显示行号    &quot; 在终端启动vim时，共享NERDTree    let g:nerdtree_tabs_open_on_console_startup=1    &quot; 忽略一下文件的显示    let NERDTreeIgnore=[&#39;\.pyc&#39;,&#39;\~$&#39;,&#39;\.swp&#39;]    let g:NERDTreeGitStatusIndicatorMapCustom = &#123;                    \ &#39;Modified&#39;  :&#39;✹&#39;,                    \ &#39;Staged&#39;    :&#39;✚&#39;,                    \ &#39;Untracked&#39; :&#39;✭&#39;,                    \ &#39;Renamed&#39;   :&#39;➜&#39;,                    \ &#39;Unmerged&#39;  :&#39;═&#39;,                    \ &#39;Deleted&#39;   :&#39;✖&#39;,                    \ &#39;Dirty&#39;     :&#39;✗&#39;,                    \ &#39;Ignored&#39;   :&#39;☒&#39;,                    \ &#39;Clean&#39;     :&#39;✔︎&#39;,                    \ &#39;Unknown&#39;   :&#39;?&#39;,                    \ &#125;</code></pre><p>配置不同模式下的光标</p><pre><code class="hljs">    let &amp;t_SI = &quot;\&lt;Esc&gt;[6 q&quot;    let &amp;t_SR = &quot;\&lt;Esc&gt;[4 q&quot;    let &amp;t_EI = &quot;\&lt;Esc&gt;[2 q&quot;</code></pre><p>启用主题</p><pre><code class="hljs">    set bg=dark                     &quot;设置背景为黑色    colorscheme gruvbox             &quot;设置主题为 gruvbox    set guioptions=                 &quot;去掉两边的scrollbar    set guifont=Monaco:h17          &quot;设置字体和字的大小</code></pre><p>其他配置       </p><pre><code class="hljs">    &quot;&quot;自动开启语法高亮&quot;    syntax enable    &quot;设置字体&quot;    &quot;set guifont=dejaVu\ Sans\ MONO\ 10    set guifont=Courier_New:h10:cANSI    &quot;设置主题样式&quot;    set bg=dark                     &quot;设置背景为黑色    colorscheme gruvbox             &quot;设置主题为 gruvbox    set guioptions=                 &quot;去掉两边的scrollbar    set guifont=Monaco:h17          &quot;设置字体和字的大小    &quot;高亮显示当前行&quot;    set cursorline    hi cursorline guibg=#00ff00    hi CursorColumn guibg=#00ff00    &quot;使用空格来替换Tab&quot;    set expandtab    &quot;设置所有的Tab和缩进为4个空格&quot;    set tabstop=4    &quot;设定&lt;&lt;和&gt;&gt;命令移动时的宽度为4&quot;    set shiftwidth=4    &quot;使得按退格键时可以一次删除4个空格&quot;    set softtabstop=4    set smarttab    &quot;缩进，自动缩进（继承前一行的缩进）&quot;    &quot;set autoindent 命令打开自动缩进，是下面配置的缩写    &quot;可使用autoindent命令的简写，即“:set ai”和“:set noai”    &quot;还可以使用“:set ai sw=4”在一个命令中打开缩进并设置缩进级别    set ai    set cindent    &quot;智能缩进&quot;    set si    &quot;自动换行”    set wrap    &quot;设置软宽度&quot;    set sw=4    &quot;行内替换&quot;    set gdefault    &quot;显示标尺&quot;    set ruler    &quot;设置命令行的高度&quot;    set cmdheight=1    &quot;显示行数&quot;    set nu    &quot;不要图形按钮&quot;    set go=    &quot;设置魔术&quot;    set magic    &quot;关闭遇到错误时的声音提示&quot;    &quot;关闭错误信息响铃&quot;    set noerrorbells    &quot;关闭使用可视响铃代替呼叫&quot;    set novisualbell    &quot;高亮显示匹配的括号([&#123;和&#125;])&quot;    set showmatch    &quot;匹配括号高亮的时间（单位是十分之一秒）&quot;    set mat=2    &quot;搜索逐字符高亮&quot;    set hlsearch    set incsearch    &quot;搜索时不区分大小写&quot;    &quot;还可以使用简写（“:set ic”和“:set noic”）&quot;    set ignorecase    &quot;用浅色高亮显示当前行&quot;    autocmd InsertLeave * se nocul    autocmd InsertEnter * se cul    &quot;输入的命令显示出来，看的清楚&quot;    set showcmd    &quot;设置编码&quot;    set encoding=utf-8    set fencs=utf-8,ucs-bom,shift-jis,gb18030,gbk,gb2312,cp936    &quot;设置文件编码&quot;    set fileencodings=utf-8    &quot;设置终端编码&quot;    set termencoding=utf-8    &quot;设置语言编码&quot;    set langmenu=zh_CN.UTF-8    set helplang=cn    &quot;在处理未保存或只读文件的时候，弹出确认&quot;    set confirm    &quot;隐藏工具栏&quot;    set guioptions-=T    &quot;隐藏菜单栏&quot;    set guioptions-=m    &quot;显示状态栏（默认值为1，表示无法显示状态栏）&quot;    set laststatus=2    &quot;状态行显示的内容&quot;    set statusline=%F%m%r%h%w\ [FORMAT=%&#123;&amp;ff&#125;]\ [TYPE=%Y]\ [POS=%l,%v][%p%%]\ %&#123;strftime(\&quot;%d/%m/%y\ -\ %H:%M\&quot;)&#125;    &quot;设置背景颜色&quot;    set background=dark    &quot;共享剪切板&quot;    set clipboard+=unnamed    &quot;从不备份&quot;    set nobackup    set noswapfile    &quot;自动保存&quot;    set autowrite    &quot;关闭vi兼容模式&quot;    set nocompatible    &quot;设置历史记录步数&quot;    set history=1000    &quot;激活鼠标的使用&quot;    set mouse=a    set selection=exclusive    set selectmode=mouse,key</code></pre><h1 id="hexo搭建"><a href="#hexo搭建" class="headerlink" title="hexo搭建"></a>hexo搭建</h1><p>创建github库以username.github.io命名，设置好权限</p><p>安装nodejs和hexo和npm</p><pre><code class="hljs">    sudo npm install hexo-cli -g</code></pre><p>使用</p><p>创建blog文件夹</p><pre><code class="hljs">    hexo init</code></pre><p>生成</p><p>配置_config.yml文件</p><p>操作</p><pre><code class="hljs">    hexo clean    hexo g</code></pre><p>部署</p><pre><code class="hljs">    hexo d</code></pre><p>本地查看 </p><pre><code class="hljs">    hexo s</code></pre><p>可以将相关主题clone到themes文件加从而完成主题切换</p>]]></content>
    
    
    <categories>
      
      <category>tools</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>vim</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hello</title>
    <link href="/2023/09/09/hello/"/>
    <url>/2023/09/09/hello/</url>
    
    <content type="html"><![CDATA[<p>hello world!</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/1970/01/01/computernetwork4/"/>
    <url>/1970/01/01/computernetwork4/</url>
    
    <content type="html"><![CDATA[<h1 id="运输层的两个主要协议"><a href="#运输层的两个主要协议" class="headerlink" title="运输层的两个主要协议"></a>运输层的两个主要协议</h1><p><strong>用户数据报协议UDP（User Datagram Protocol）</strong></p><p><strong>传输控制协议TCP（Transmission Control Protocol）</strong></p><p>按照OSI的术语，两个对等运输实体在通信的时候传送的数据单位叫做 <strong>运输协议数据单元TPDU(Transport Protocol Data Unit)</strong></p><p>但是在TCP&#x2F;IP体系中，则根据所使用的协议是TCP或者UDP，分别称之为 <strong>TCP报文段（segemnt）</strong> 或者UDP用户数据报。</p><p>UDP在传送数据之前不需要建立连接。远地主机在接受到以后不需要给出任何确认</p><p>TCP提供面向连接的服务。</p><p><img src="/../computernetwork/4-1.png"></p><p>应用层所有应用进程都可以通过运输层在传送到IP层，这就是复用</p><p>反过来运输层接受到各个应用进程的数据以后必须交付指明的应用进程，这就是分用</p><p>协议端口号，简称为 <strong>端口（protocol port number）</strong></p><p>TCP&#x2F;IP运输层使用一个16bit的端口号来标志一个端口，但是端口号只具有本地意义。16bit意味着可以有65535个不同的端口号。</p><ol><li>服务器端使用的端口号{<br>  <strong>熟知端口号（well-kown port number）</strong> 或者叫做系统端口甚至为0-1023<br>  <strong>登记端口</strong> 数值为1024-49151。必须在IANA按照规定的手续登记，防止重复。<br>}</li></ol><p><img src="/../computernetwork/4-2.png"></p><ol start="2"><li>客户端使用的端口号{<br>  短暂端口：仅仅在客户进程运行的时候才动态选择数值为49152-65535<br>}</li></ol><h1 id="UDP（User-Datagram-Protocol）"><a href="#UDP（User-Datagram-Protocol）" class="headerlink" title="UDP（User Datagram Protocol）"></a>UDP（User Datagram Protocol）</h1><p>只在IP的数据报服务上增加了很少的功能，主要是复用以及分用的功能以及差错检测的功能。</p><p>特点</p><ol><li><p><strong>无连接的</strong></p></li><li><p><strong>尽最大努力交付的</strong></p></li><li><p><strong>面向报文的</strong> :发送方的UDP对应用程序交付的报文，在添加首部后就向下交付IP层,既不合并，也不拆分</p></li><li><p><strong>没有拥塞控制</strong></p></li><li><p><strong>支持一对一，一对多，和多对一的交互通信</strong></p></li><li><p><strong>UDP的首部开销小</strong></p></li></ol><h2 id="UDP的首部格式"><a href="#UDP的首部格式" class="headerlink" title="UDP的首部格式"></a>UDP的首部格式</h2><p><img src="/../computernetwork/4-3.png"></p><p>包括</p><ol><li><p><strong>源端口</strong> （需要回信的时候选用，不需要的时候可以全用0）</p></li><li><p><strong>目的端口</strong></p></li><li><p><strong>长度</strong>  UDP用户数据报的长度，min8</p></li><li><p><strong>检验和</strong> 如果接收方UDP发现收到的报文中的目的端口号不正确或者在目的主机中不存在，就丢弃该报文并且有TCMP发送端口不可达的差错报文给发送方。伪首部既不向下传递也不向上递交，只是用来计算检验和。IP数据报只检验IP数据报的首部，UDP检验是把首部和数据部分一起检验：将加入伪首部的UDP划分为16bit的组按照二进制反码的规则求和再取反码写入检验和，接收方对检验和与其他数据做相同操作，若没有错误则得到全1</p></li></ol><p><img src="/../computernetwork/4-4.png"></p><h1 id="TCP（Transmission-Control-Protocol）"><a href="#TCP（Transmission-Control-Protocol）" class="headerlink" title="TCP（Transmission Control Protocol）"></a>TCP（Transmission Control Protocol）</h1><ol><li><p><strong>TCP是面向连接的运输层协议</strong></p></li><li><p><strong>每一条TCP连接只能由两个端点(endpoint)</strong></p></li><li><p><strong>TCP提供可交付服务，无差错，不丢失，不重复，并且按序到达</strong></p></li><li><p><strong>TCP提供全双工通信：通信双方在任何时候都能发送数据。TCP的连接双端都设由发送和接受缓存。</strong></p></li><li><p><strong>面向字节流</strong></p></li></ol><p><img src="/../computernetwork/4-5.png"></p><h2 id="TCP连接"><a href="#TCP连接" class="headerlink" title="TCP连接"></a>TCP连接</h2><p>TCP连接的端口叫做 <strong>套接字（Socket）</strong> </p><h1 id="可靠传输的工作原理"><a href="#可靠传输的工作原理" class="headerlink" title="可靠传输的工作原理"></a>可靠传输的工作原理</h1><h2 id="停止等待协议"><a href="#停止等待协议" class="headerlink" title="停止等待协议"></a>停止等待协议</h2><p><strong>（1）无差错情况</strong></p><p><img src="/../computernetwork/4-11.png"></p><p>传送 to 确认，传送 to 确认</p><p><strong>（2）出现差错</strong></p><p>可能是B接受的时候发现出了差错，或者B就没有接受到数据，数据丢失。</p><p>B接受到错误的数据分组或者没有接收到数据分组，都不发送确认</p><p>A设置一个超时计时器，如果收到确认就撤销其计时器，如果超时就重传。</p><ul><li><p>A发送完一个分组以后，必须保存已经发送的分组副本，只要收到相应的确认以后才能清除分组</p></li><li><p>分组和确认分组都必须进行编号，这样才能确认哪一个发送出去的分组收到了确认，哪一个没有。</p></li><li><p>超时计时器的设置的重传时间应该比数据再分组传输的平均往返时间长一点。</p></li></ul><p><strong>（3）确认丢失和确认迟到</strong></p><p>A没有收到确认，可能是A的发送错误，A的发送丢失，也可能是A的发送正确但是B的确认在传送过程中丢失了</p><p>此时A无法分辨，于是A只能重新传送这个分组</p><p>如果是上述确认丢失的情况</p><p>B</p><ol><li><p>丢弃这个重复的分组，而不向上层交付</p></li><li><p>向A发送确认.</p></li></ol><p>如果是上述确认迟到的情况</p><p>对于A来说，也可能出现出现收到重复的确认的情况，这种情况A直接丢弃</p><p>如果A 总是收不到确认，说明通信线路太差</p><p>上述称之为 <strong>ARQ自动重传请求（Automatic Repeat reQuest）</strong> </p><p>(<em>ps:基本原理就是A一旦受到B的确认就可以认为B已经收到了报文，所有重复的确认和重复的报文都会被丢弃，知道A某一个时刻能够知晓。A只需要确定B，B不需要知道A有没有收到分组，应为发送权在A</em>)</p><h3 id="信道利用率"><a href="#信道利用率" class="headerlink" title="信道利用率"></a>信道利用率</h3><p><img src="/../computernetwork/4-6.png"></p><p>$U &#x3D; &#x2F;frac{T_D}{T_D + RTT +T_A}$</p><p>流水线传输法可以优化信道利用率如下：</p><h2 id="连续ARQ协议"><a href="#连续ARQ协议" class="headerlink" title="连续ARQ协议"></a>连续ARQ协议</h2><p>此处只是简介：</p><p><img src="/../computernetwork/4-7.png"></p><p>窗口内的分组可以连续发送，当发送方收到一个确认以后，九八发送窗口向前滑动一个分组的位置。</p><p><strong>累计确认</strong>：接收方不必对收到的分组诸葛发送确认，二十可以在收到几个分组以后，对按顺序到达的最后一个分组发送确认。即到这个分组为止的分组已经全部被确认了。</p><h1 id="TCP-报文格式"><a href="#TCP-报文格式" class="headerlink" title="TCP 报文格式"></a>TCP 报文格式</h1><p>分为首部和数据两个部分</p><p>首部的前 <strong>20个byte</strong> 是固定的后面的4n个byte是增加的选项</p><p>首部的固定部分各个字段的意义如下：</p><ol><li><p><strong>源端口和目的端口</strong>(TCP的连接时基于套接字的但是IP部分是由IP层封装实现的)</p></li><li><p><strong>序号</strong> 占4byte一，一共4294867296个。一个TCP连接中传送的字节流中的<strong>每一个字节</strong>都按照顺序编号，整个要传送的字节流的起始序号必须在建立连接的时候设置。首部中的序号字段值值得是本报文所发送数据的第一个字节的序号。这个字段也叫做报文段序号</p></li><li><p><strong>确认号：</strong> 占4个Byte，是 <strong>期望收到对方下一个报文段的第一个数据字节的序号。</strong> 由于序号字段由32bit长，所以一共可以支持2^32 * byte（4GB）的内容传输。一般可以确定当序号重复使用的时候，旧序号的数据早就通过网络到达终点里。</p></li><li><p><strong>数据偏移占有4bit</strong>，指出TCP报文段的数据起始出距离TCP报文段的起始处有多远，这个字段实际上是指出TCP报文段的首部长度。注意数据偏移的单位是32bit，即4个byte，由此可见数据偏移的最大值是60Byte，这也是TCP的首部的最大长度。</p></li><li><p><strong>保留</strong> 占6bit，保留为今后使用，但是目前应该设置为0</p></li><li><p><strong>紧急URG（URGent）</strong> 当URG &#x3D; 1的时候，表明紧急指针字段有效，告诉系统报文中有紧急数据，应该尽快传送（高优先级数据），而不需要按照原来的排队顺序传送。此时，发送方就把紧急数据插入到本报文数据的最前面，在紧急数据后面的数据仍然是普通数据。这是和首部中的紧急指针字段配合使用</p></li><li><p><strong>确认ACK（ACKnowledegment）</strong> 仅当ACK &#x3D; 1的时候字段才有效。tcp建立以后所有传送的报文都必须把ACK置1</p></li><li><p><strong>推送PSH（Push）</strong> 当两个进程交互式的通信的时候有时在一段的应用进程希望在键入一个命令以后就能立刻收到对方的相应。在此情况下TCP就可以使用推送操作，并且立即创建一个报文发送出去。接收方在收到此报文以后就尽快的推送向前交付接受应用进程，而不再等到整个缓存都填满了了再向上交互</p></li><li><p><strong>复位RST（Reset）</strong>  若此bit为1，则表示TCP连接中出现严重差错，必须释放连接再重新建立运输连接</p></li><li><p><strong>同步SYN（SYNchronization）</strong> 连接建立的时候用来同步序号，当SYN &#x3D; 1而ACK &#x3D; 0的时候表明这是一个请求连接报文对方如果同意建立连接则再响应报文中使得SYN &#x3D; 1， ACK &#x3D; 1</p></li><li><p><strong>终止FIN</strong>  用于释放一个连接，当FIN &#x3D; 1的时候，表明此报文段的发送方的数据已经发送完毕，并且要求释放运输连接。</p></li><li><p><strong>窗口</strong> 窗口值是发送本报文段的一方的接受窗口。从本报文首部中的确认号算起，接收方目前允许对方发送的数据量（以<strong>字节</strong>为单位）。</p></li><li><p><strong>检验和</strong> 占2字节，先在TCP报文段的前面加上12byte的伪首部（和UDP一样）</p></li><li><p><strong>紧急指针</strong> 仅仅在URG &#x3D;  1的时候才有意义，指出了本报文段中的紧急数据的字节数</p></li><li><p><strong>选项</strong> 剩余的可变4nbyte的选项。</p></li></ol><h1 id="TCP可靠传输的实现"><a href="#TCP可靠传输的实现" class="headerlink" title="TCP可靠传输的实现"></a>TCP可靠传输的实现</h1><h2 id="以字节为单位的滑动窗口"><a href="#以字节为单位的滑动窗口" class="headerlink" title="以字节为单位的滑动窗口"></a>以字节为单位的滑动窗口</h2><p>接受会先把自己的接受窗口数值放在接受字段中发送给对方，所以发送方的发送窗口一定不能超过B的接受窗口的数值。此外A的发送窗口的数值也取决于网络的拥堵程度。</p><p>发送窗口的前沿也有可能向后受说，这发生在对方通知窗口缩小了。但是TCP标准强烈不赞成这样做。</p><p>由此可见描述一个发送窗口需要三个指针P1P2P3</p><p>小于P1的是已经发送并且受到确认的部分大于P3的是不允许发送的部分</p><p>P3-P1是发送窗口</p><p>P2-P1是已经发送但是还没有受到确认的字节</p><p>P3-P2是允许发送但是还没有发送的字节数（又称之为可用窗口或者有效窗口）</p><p><img src="/../computernetwork/4-12.png"></p><p>注意：应用程序必须控制内阁制写入缓存的速率不能太快，否则发送缓存就会没有存放数据的空间。</p><h2 id="超时重传的选择"><a href="#超时重传的选择" class="headerlink" title="超时重传的选择"></a>超时重传的选择</h2><p>RTT的计算</p><p>$newRTT_s &#x3D; (1 - \alpha) \times ( old RTT_S ) + \alpha \times (new RTT)$</p><p>RTO计算 </p><p>$RTO &#x3D; RTT_S + 4 \times RTT_D$</p><p>$new RTT_D &#x3D; (1- \beta) \times (old RTT_D) + \beta \times |RTT_S - NEW rtt|$</p><p>在计算加权平均RTTS时候，只要报文重传了，就不采用其往返时间。这样得出的RTTS和RTO就比较准确</p><h2 id="选择确认SACK（Selective-ACK）"><a href="#选择确认SACK（Selective-ACK）" class="headerlink" title="选择确认SACK（Selective ACK）"></a>选择确认SACK（Selective ACK）</h2><p>如何之传送缺少的数据而不传送已经正确收到的数据？</p><p>显然和前后字节不连续的每一个字节块都有两个边界左边界和有边界，可以指明其范围[numl,numright).</p><p>可以在建立TCP连接的时候在首部加上SACK选项</p><h1 id="TCP的流量控制"><a href="#TCP的流量控制" class="headerlink" title="TCP的流量控制"></a>TCP的流量控制</h1><h2 id="利用滑动窗口实现流量控制。"><a href="#利用滑动窗口实现流量控制。" class="headerlink" title="利用滑动窗口实现流量控制。"></a>利用滑动窗口实现流量控制。</h2><p>然而可能出现这种情况：B发送了一一个0窗口报文后A进入等待，一段时间后B又发出了一个100窗口报文但是这个报文丢失了，于是AB都在互相等待对方的回复</p><p>因此TCP为每一个连接设置了一个持续计时器（Persistence timer）只要又乙方收到0窗口报文就自动启动，但后定时发送一个零窗口探测报文（只有1byte的数据部分）</p><h2 id="TCP的传输效率"><a href="#TCP的传输效率" class="headerlink" title="TCP的传输效率"></a>TCP的传输效率</h2><p>维护一个变量等于最大报文长度MSS，当缓存中存放的数据达到MSS字节的时候，就组装成一个TCP报文发送出去。第二种机制是发送方的的应用指明要发送的报文段。即TCP支持PUSH操作。第三种是发送方的一个计时器期限到了，这时候就把当前已经有的数据装入报文段（不超过MSS）发送出去</p><h1 id="TCP拥塞控制"><a href="#TCP拥塞控制" class="headerlink" title="TCP拥塞控制"></a>TCP拥塞控制</h1><p>算法主要有四种 <strong>慢开始（slow-start）</strong> <strong>拥塞避免（congestion avoidance）</strong> ， <strong>快重传（fast retransmit）</strong> 和 <strong>快恢复（fast recovery）</strong></p><ol><li>慢开始与拥塞避免</li></ol><p>发送方控制一个拥塞窗口的变量cwnd，发送方让自己的窗口等于拥塞窗口</p><p>如何设置？</p><p><img src="/../computernetwork/4-13.png"></p><p>见SMSS</p><p>在收到对一个新的报文段的确认以后，就可以把拥塞窗口增加最多一个SMSS数值</p><p>慢开始门限ssthresh</p><p>当cwnd &lt; ssthresh时使用慢开始算法</p><p>大于时使用拥塞避免算法</p><p>等于时两者都可</p><p>采用快重传算法可以让发送方尽早知道发生了个别报文的丢失。快重传算法首先要求接收方不要等待自己发送数据时才能进行捎带确认，而是要立即发送确认，即使是收到了失序的报文段也要立即发出对已经收到的报文段的重复确认</p><p>综合考虑发送方的窗口创先值 &#x3D; Min[rwnd,cwnd]</p><h3 id="AQM"><a href="#AQM" class="headerlink" title="AQM"></a>AQM</h3><p><strong>Active Queue Management.</strong></p><p>路由器在队列长度已经到达最大值的时候才不得不丢弃后面到达的分组太过于被动，以哦那个此在队列长度已经达到某个值得警惕的数值的时候就主动丢弃到达的分组。</p><p><strong>RED（random early detections）</strong></p><p>路由器维持两个参数，队列最小门限和最大门限，每当一个分组到达的时候RED就按照规定的算法计算当前的平均队列长度。</p><p>(1)如果平均队列长度小于最小门限，则把新到达的分组放入队列进行排队</p><p>(2)如果平均长度超过最大门限，则把型到达的分组丢弃</p><p>(3)如果平均队列长度在最小门限和最大门限之间，则按照某一丢弃概率p把新到达的分组丢弃</p><h1 id="TCP的运输连接管理"><a href="#TCP的运输连接管理" class="headerlink" title="TCP的运输连接管理"></a>TCP的运输连接管理</h1><p>三个阶段：<strong>连接建立</strong>，<strong>数据传送</strong>，<strong>连接释放</strong></p><h2 id="连接建立三次握手"><a href="#连接建立三次握手" class="headerlink" title="连接建立三次握手"></a>连接建立三次握手</h2><p><img src="/../computernetwork/4-14.png"></p><p>一开始B的TCP服务器线创建传输控制块TCB准备接受客户进程的连接请求，然后服务器进程就处于<strong>LISTEN</strong>状态，等待客户的连接请求</p><p>A的TCP客户进程也是首先创建传输控制模块<strong>TCB</strong>.然后再打算建立TCP的时候向B发送连接请求报文此时首部中的同步位SYN&#x3D;1同时选择一个初始序号seq&#x3D;x TCP规定SYN报文段不能携带数据，但是要消耗掉一个序号。这时，TCP客户程序进入SYN-SENT（同步已发送）状态</p><p>B收到连接请求报文以后如果同意建立连接，则向A发送确认，并且再确认报文中把SYN和ACK位都置为1，ack &#x3D; x + 1，同时也为自己选择一个初始序号seq &#x3D; y，这个报文也不携带数据但是也要消耗掉一个序号。此时TCP服务器进程进入到SYN-RCVD（同步收到）的状态</p><p>TCP客户进程在接收到B的确认以后还要向B给出确认，确认报文段的ACK置为1，确认号ack &#x3D; y + 1自己序号为x+1 TCP规定ACK报文端可以携带数据但是不过如果不携带数据则不消耗序号，在这种情况下下一个数据报文的序号仍然是seq &#x3D; x + 1</p><p>此时A进入已经建立连接状态（ESTABLISH）B在收到A的回送报文ACK以后也进入ESTABLISH状态</p><p>三次握手主要是防止已经失效的连接请求报文重新传送到B使得B单方面开启连接，导致B的资源被浪费。</p><h2 id="TCP连接释放"><a href="#TCP连接释放" class="headerlink" title="TCP连接释放"></a>TCP连接释放</h2><p><img src="/../computernetwork/4-15.png"></p><p>首先A发送连接释放报文，其首部的终止控制位FIN为1，序号为前面传输过的数据的最后一个字节的序号+1然后A停止发送数据并且进入<strong>FIN-WAIT-1</strong>的状态。注意：连接释放报文不携带数据，但是它也消耗一个序号。</p><p>B收到连接释放报文后发出确认ack &#x3D; u+ 1而这个报文自己的序号时v等于B前面已经传送过的数据的最后一个字节序号+1，然后B就进入<strong>CLOSE-WAIT</strong>状态。此时TCP服务器通知高层应用进程，因而从A到B的这个方向的连接就释放了，</p><p>此时处于半关闭状态即A没有数据传给B了。但是B仍然可能有数据传给A。</p><p>A收到B的确认以后就会进入FIN-WAIT-2状态。等待B发出的连接释放报文。</p><p>如果B已经没有要向A发送的数据，那么其应用进程就通知TCP释放连接。此时B发出的连接释放报文必须是的FIN&#x3D;1。假定B的序号为W，此时B还必须重复上次已经发送过的确认号ack&#x3D;u+1（应为A已经没有数据发送了）.此时B就进入了LAST-ACK（最后确认状态）</p><p>A在收到B的连接释放报文以后必须对此也发出确认。在确认报文中把ACK置为1，确认号ack &#x3D; w +1自己的而序号为u+1然后进入到TIME-WAIT时间。必须等到时间等待计时器（TIME-WAIT timer）设置的时间2MSL以后A才进入到CLOSED的状态。</p><p>时间 <strong>MSL（最长报文段寿命 Maximum Segment Lifetime）</strong> </p><p><img src="/../computernetwork/4-16.png"></p><h1 id="NAT-And-PAT"><a href="#NAT-And-PAT" class="headerlink" title="NAT And PAT"></a>NAT And PAT</h1><p>NAT is the process of swapping one address for another in the IP packet header</p><h2 id="NAT-types"><a href="#NAT-types" class="headerlink" title="NAT types"></a>NAT types</h2><p>**Static NAT:**Fixed Mapping</p><p><strong>Dynamic NAT:</strong> Mapping is done dynamically on a first come first served basis</p><p><strong>PAT</strong> Port address translation is used to allow many internal users to share a single ‘inside global’ address</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
