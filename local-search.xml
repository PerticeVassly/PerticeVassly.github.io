<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>database-summary</title>
    <link href="/2024/03/08/database-summary/"/>
    <url>/2024/03/08/database-summary/</url>
    
    <content type="html"><![CDATA[<h1 id="数据管理人工管理-vs-文件系统"><a href="#数据管理人工管理-vs-文件系统" class="headerlink" title="数据管理人工管理 vs 文件系统"></a>数据管理人工管理 vs 文件系统</h1><p>数据的管理者：用户(程序员) 数据不保存；文件系统，数据长期保存</p><p>数据面向的对象：某一个应用程序：某一应用</p><p>数据的共享程度：无共享，冗余度极大；共享性差，冗余大</p><p>数据的独立性：不独立完全依赖程序；独立性差</p><p>数据的结构化：无结构：记录有结构，整体无结构</p><p>数据的控制能力：应用程序自己控制</p><h1 id="数据库的基本概念"><a href="#数据库的基本概念" class="headerlink" title="数据库的基本概念"></a>数据库的基本概念</h1><p><strong>数据(data)</strong></p><p>是数据库中存储的基本对象。描述事物的符号记录称之为数据。数据的表现形式还不能完全表达其内容，还需要进行解释，数据关于数据的解释是不可分割的。</p><p><strong>数据库(database，DB)</strong></p><p>存放数据的仓库。数据库是长期储存在计算机内部的，有组织，可共享的大量数据集合。数据库中的数据按照一定的数据模型组织，描述和储存具有较小的冗余度，较高的数据独立性，和易于扩展性，并且可以为各个用户所共享</p><p><strong>数据库管理系统(DataBase Management System,DBMS)</strong></p><p>数据库管理系统是位于用户和操作系统之间的一层数据管理软件。数据库管理系统和操作系统一样是计算机的基础软件。</p><p>主要包括1. 数据定义功能，对于数据对象的组成和结构进行定义2。 数据组织，存储和管理3. 数据操纵功能4. 数据操作功能4.数据库的事物管理和运行管理。6其他功能</p><p><strong>数据库系统(DataBaseSystem，DBS)</strong></p><p>是由数据库，数据库管理系统，应用程序和数据库管理员组成的存储管理处理维护数据的系统。</p><p><img src="/../img/database/1-1.png"></p><p>数据库的特点：</p><p>整体结构化</p><p>数据的共享性高，冗余度低而且易于扩展</p><p>数据的独立性高</p><p>数据由数据管理系统同一管理和控制</p><h1 id="数据模型"><a href="#数据模型" class="headerlink" title="数据模型"></a>数据模型</h1><p>数据模型（data model）是一种模型，它是对于现实世界数据特征的抽象。数据模型是用来描述数据，组织数据和对数据进行操作的。</p><p>数据模型可以分为两类：概念模型；逻辑模型和物理模型</p><p><strong>概念模型</strong> ：信息模型，按照用户的观点来对数据和信息建模，用于数据库设计</p><p><strong>逻辑模型</strong> ：层次，网状，关系，面向对象，和对象关系，半结构化</p><p><strong>物理模型</strong> ：是对数据的最底层的抽象，描述的是在系统内部的表示方式和存取方法。</p><p>数据模型通常具有数据结构，数据操作，和数据完整性约束条件三个部分组成</p><h2 id="概念模型"><a href="#概念模型" class="headerlink" title="概念模型"></a>概念模型</h2><p><strong>用途</strong></p><p>是信息世界的建模</p><p>是现实世界到机器世界的中间层次</p><p>是数据库设计的有力工具</p><p>数据库设计人员和用户之间进行交流的语言</p><p><strong>基本要求：</strong></p><p>较强的语义表达能力</p><p>简单清晰易于用于理解</p><p>eg：如何写病历，处方？</p><p><strong>实体(Entity)</strong></p><p>客观存在并且可以相互区别的事物叫做实体</p><p>可以是具体的人，事，物或者是抽象的概念</p><p><strong>实体型(Entity Type)</strong></p><p>用实体名以及其属性名集合来抽象和刻画同类实体称之为实体型</p><p><strong>实体集(Entity Set)</strong></p><p>同一类型实体的集合称之为实体集</p><p><strong>属性(Attribute)</strong></p><p>实体所具有某一个特性称之为属性</p><p>一个实体由若干个属性来刻画</p><p><strong>码(Key)</strong></p><p>唯一标识实体的属性集称之为码</p><p><strong>联系(Relationship)</strong></p><p>现实世界中事物内部以及事物之间的联系在信息世界中反映为实体(型)内部的联系和实体之间的联系：分为1对1，1对多，多对多。</p><p><strong>实体联系方法(Entity-Relationship Approach)</strong></p><p>使用E-R图来描述现实世界的概念模型</p><p><img src="/../img/database/1-3.png"></p><h2 id="逻辑模型"><a href="#逻辑模型" class="headerlink" title="逻辑模型"></a>逻辑模型</h2><h3 id="常见逻辑模型"><a href="#常见逻辑模型" class="headerlink" title="常见逻辑模型"></a>常见逻辑模型</h3><p>格式化模型: 层次模型，网状模型</p><p><strong>关系模型</strong></p><p>对象模型：面向对象数据模型；对象关系数据模型</p><h3 id="关系型数据库的数据结构"><a href="#关系型数据库的数据结构" class="headerlink" title="关系型数据库的数据结构"></a>关系型数据库的数据结构</h3><p><strong>关系：</strong> 一个关系对应一张表</p><p><strong>元组：</strong> 表中的一行是一个元组</p><p><strong>属性：</strong> 一列为一个属性，给一定属性起一个名称即属性名</p><p><strong>主码：</strong> 表中的某一个属性组，唯一确定一个元组</p><p><strong>域：</strong> 一组具有相同数据类型的值的集合。</p><p><strong>分量：</strong> 元组中的一个属性值</p><p>关系必须是规范化的，满足一定的规范条件：最基本的规范条件：关系的每一个分量必须是一个不可分的数据项，不允许表中有表</p><p>数据操作是集合操作，操作对象和结果都是关系</p><p>存取路径对于用户屏蔽</p><p>关系的完整约束条件</p><ul><li><p>实体完整性</p></li><li><p>参照完整性</p></li><li><p>用户定义的完整性</p></li></ul><h1 id="NoSQL"><a href="#NoSQL" class="headerlink" title="NoSQL"></a>NoSQL</h1><p>基于Key-Value存储模型</p><p>基于文档模型</p><p>列族模型</p><p>基于图模型</p><h1 id="数据库系统的结构"><a href="#数据库系统的结构" class="headerlink" title="数据库系统的结构"></a>数据库系统的结构</h1><p>从数据库应用开发人员角度：数据库系统通常采用三级模式结构，是数据库系统内部的系统结构。</p><p>从数据库最终用户角度看，数据库系统的结构分为：</p><ul><li><p>单用户结构</p></li><li><p>主从式结构</p></li><li><p>分布式结构</p></li><li><p>客户-服务器</p></li><li><p>浏览器-应用服务器 &#x2F; 数据库服务器多层结构等</p></li></ul><p>模式（schema）是数据库中全体数据的逻辑结构和特征的描述，它仅仅设计型的描述，不涉及具体的值。模式是相对稳定的</p><p>模式的一个具体值称之为模式的一个实例（instance）反映数据库的某一时刻的状态；同一个模式可以由很多实例；梳理随数据库的数据更新而变动</p><h2 id="数据库系统的三级模式结构"><a href="#数据库系统的三级模式结构" class="headerlink" title="数据库系统的三级模式结构"></a>数据库系统的三级模式结构</h2><p><img src="/../img/database/1-2.png"></p><h3 id="外模式-External-Schema"><a href="#外模式-External-Schema" class="headerlink" title="外模式(External Schema)"></a>外模式(External Schema)</h3><p>也称子模式或者用户模式</p><p>数据库用户使用的局部数据的逻辑结构和特征的描述</p><p>数据库用户的数据视图，是与某应用有关的数据的逻辑表示</p><h3 id="内模式-存储模式"><a href="#内模式-存储模式" class="headerlink" title="内模式(存储模式)"></a>内模式(存储模式)</h3><p>是数据物理结构和存储方式的描述</p><p>是数据在数据库内部的表示方式</p><p>一个数据库只有一个内模式</p><h3 id="二级映像在数据库管理系统内部实现这三个抽象层次的联系和转换"><a href="#二级映像在数据库管理系统内部实现这三个抽象层次的联系和转换" class="headerlink" title="二级映像在数据库管理系统内部实现这三个抽象层次的联系和转换"></a>二级映像在数据库管理系统内部实现这三个抽象层次的联系和转换</h3><p><strong>外面模式&#x2F;模式的映像：</strong></p><p>模式：描述数据的全局逻辑结构</p><p>外模式：描述的是数据的局部逻辑结构</p><p>当模式改变的时候，数据库管理员对于外模式&#x2F;模式映像做出改变使得外模式保持不变</p><p>应用程序依据数据的外模式编写，保证了数据和程序的逻辑独立性，简称数据的逻辑独立性</p><p><strong>模式&#x2F;内模式的映像：</strong></p><p>数据全局逻辑结构和存储结构之间对应关系，此映像是唯一的，该映像定义在模式描述中，保证了数据的物理独立性。</p><h1 id="数据库系统的组成"><a href="#数据库系统的组成" class="headerlink" title="数据库系统的组成"></a>数据库系统的组成</h1><p>软件硬件平台</p><p>人员：数据库管理员，系统分析员，数据库设计人员，应用程序员，最终用户</p><h2 id="数据库管理员"><a href="#数据库管理员" class="headerlink" title="数据库管理员"></a>数据库管理员</h2><p>决定数据库中的信息内容和结构</p><p>决定数据库的存储结构和存取策略</p><p>定义数据的安全性要求和完整性约束条件</p><p>监控数据库的使用和运行</p><p>数据库的改进和重组</p><h2 id="系统分析员"><a href="#系统分析员" class="headerlink" title="系统分析员"></a>系统分析员</h2><h2 id="数据库设计人员"><a href="#数据库设计人员" class="headerlink" title="数据库设计人员"></a>数据库设计人员</h2><h2 id="应用程序员"><a href="#应用程序员" class="headerlink" title="应用程序员"></a>应用程序员</h2><h2 id="最终用户"><a href="#最终用户" class="headerlink" title="最终用户"></a>最终用户</h2><p>偶然用户</p><p>简单用户</p><p>复杂用户</p>]]></content>
    
    
    <categories>
      
      <category>database</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>compiler-lexicalanalysis</title>
    <link href="/2024/03/08/compiler-lexicalanalysis/"/>
    <url>/2024/03/08/compiler-lexicalanalysis/</url>
    
    <content type="html"><![CDATA[<h1 id="词法分析器的作用"><a href="#词法分析器的作用" class="headerlink" title="词法分析器的作用"></a>词法分析器的作用</h1><p>读入源程序的输入字符，将其组成词素，生成并且输出一个词法单元序列，每个词法单元对应一个词素</p><p>识别出词法单元以外还会完成一些不需要要生成词法单元的简单处理，删除注释，将多个连续的空白字符压缩为一个字符</p><p><img src="/../img/compiler/2-1.png"></p><h1 id="词法分析的相关概念"><a href="#词法分析的相关概念" class="headerlink" title="词法分析的相关概念"></a>词法分析的相关概念</h1><p>词素(lexeme)</p><p>源程序中的字符序列，和某类词法单元的木哦是匹配被词法分析器识别为该词法的那元的实例</p><p>词法单元(token)</p><p>&lt;Token-name&gt;  &lt;attribute-value&gt;</p><p>单元名是表示某种词法单位抽象符号。词法分析器通过单元名可以确定词法单元序列的结构</p><h1 id="如何表述词素"><a href="#如何表述词素" class="headerlink" title="如何表述词素"></a>如何表述词素</h1><p>pattern</p><p>词法单元对应词素的形式，可以用正则表示式表示</p><h2 id="相关概念"><a href="#相关概念" class="headerlink" title="相关概念"></a>相关概念</h2><p>字母表：一个有限的符号集合</p><p>串：字母表中的符号组成的一个有穷序列</p><p>语言：给定字母表上的任意可数的串的集合</p><p>串有关的属于</p><p>前缀：从串的尾部删除0个或者多个符号后得到的串</p><p>后缀：从串的开始删除0个或者多个符号后得到的串</p><p>真前缀真后缀（定义类似，但是不等于原串）</p><p>子序列：从原串中删除0个或者多个符号后得到的串</p><p>串的运算</p><p>连接(concatenation): x和y连接时把y附加到x的后面形成串记作xy</p><p>指数运算(幂运算) </p><p>$s^0 &#x3D; \epsilon, s^1&#x3D;s, s^i &#x3D; s^{i-1}s$</p><p>语言上的运算</p><p>$L \cup M &#x3D; {s | s 属于 L或者s属于M}$</p><p>$LM &#x3D; {st|s属于L且t属于M}$</p><p>L的Kleene闭包 </p><p>$L^{*} &#x3D; \cup_{i&#x3D;0}^\infty L^i$</p><p>L的正闭包</p><p>$L^+ &#x3D; \cup_{i&#x3D;1}^\infty L^i$</p><p>以上LM都是字母表</p><p>正则表达式的定义</p><p>基本部分</p><p>$<br>\epsilon是一个正则表达式，L(\epsilon) &#x3D; {\epsilon}<br>如果a是\sum上的一个符号，那么a是正则表达式，L(a) &#x3D; {a}<br>$</p><p>归纳步骤</p><p>$选择：(r) | (s), L((r)|(s)) &#x3D; L(r) \cup L(s)$</p><p>$连接：(r)(s), L((r)(s)) &#x3D; L(r) L(s)$</p><p>$闭包：(r)^{*}, L((r)^{*}) &#x3D; L((r))^{*}$</p><p>$括号：(r),L((r)) &#x3D;L(r)$</p><p>如果没有符号运算的优先级为 * &gt; 连接 &gt; |</p><h2 id="正则表达式的性质"><a href="#正则表达式的性质" class="headerlink" title="正则表达式的性质"></a>正则表达式的性质</h2><p>等价性</p><p>如果两个正则表达式r和s表示相同的语言则r&#x3D;s</p><p>$r|s &#x3D; s|r$</p><p>$r|(s|t) &#x3D; (r|s)|t$</p><p>$r(st) &#x3D; (rs)t$</p><p>$r(s|t) &#x3D; rs|rt (s|t)r &#x3D;sr |tr$</p><p>$\epsilon r &#x3D; r\epsilon &#x3D; r$</p><p>$r^{*} &#x3D; (r|epsilon)^{*}$</p><p>$r^{* *} &#x3D; r^{*}$</p><h2 id="正则定义？？"><a href="#正则定义？？" class="headerlink" title="正则定义？？"></a>正则定义？？</h2><p>对于正则表达式命名使其表示简洁</p><p>$<br>d_1 -&gt; r_1  \<br>d_2 -&gt; r_2 \<br>d_3 -&gt; r_3 \<br>…\<br>d_n -&gt; r_n \<br>$</p><p>各个$d_i$不在字母表$\sum$中且名字都不同</p><p>每个$r_i$ $\sum \cup {d_1,…,d_{i-1}}上的正则表达式</p><h2 id="正则表达式的扩展运算符"><a href="#正则表达式的扩展运算符" class="headerlink" title="正则表达式的扩展运算符"></a>正则表达式的扩展运算符</h2><p>+ 一个或者多个</p><p>？ 零个或者一个</p><p>[abc] 表示或</p><h2 id="词法单元的识别"><a href="#词法单元的识别" class="headerlink" title="词法单元的识别"></a>词法单元的识别</h2><p>词法分析器要求能够检查输入的字符串，在前缀中找出和某个模式匹配的词素</p><h2 id="状态转化图"><a href="#状态转化图" class="headerlink" title="状态转化图"></a>状态转化图</h2><p>状态转换图是词法分析器的重要组件之一</p><p>可以将正则表达式转换成状态转换图</p><p>状态转换图(transition diagram)</p><p>状态(state)：表示在是被词素的过程中可能出现的情况</p><ul><li><p>状态看作是已经处理部分的总结</p></li><li><p>某些状态为接受状态或者最终状态，表明已经找到词素</p></li></ul><p>加上*的接受状态标识最后读入的符号不再词素中</p><p>开始状态，用start边标识</p><p>边(edge):从一个状态指向另外一个状态：边的标号是一个或者多个符号</p><h1 id="有穷自动机"><a href="#有穷自动机" class="headerlink" title="有穷自动机"></a>有穷自动机</h1><p>自动机是识别器，对于每一个输入串回答yes or no</p><p>分为两类：</p><p>不确定的有穷自动机(NFA)：一个符号标记离开同一状态的多条边。可以有边的标号是$\epsilon$</p><p>确定的有穷状态自动机(DFA) 对于每个状态和字母表的每个字符，有且仅有一条离开该状态以该边为标号的边。没有标号为$\epsilon$的边</p><h2 id="NFA"><a href="#NFA" class="headerlink" title="NFA"></a>NFA</h2><p>一个有穷的状态集合$S$</p><p>一个输入符号集合$\sum $(input alphabet)</p><p>转换函数(transition function)对于每个状态和$\sum \cup { \epsilon}$中的符号给出后继状态</p><p>一个状态$S_0$被指定为开始状态&#x2F;初始状态</p><p>$S$的一个子集$F$被指定为接受状态</p><p><img src="/../img/compiler/2-2.png"></p><p><img src="/../img/compiler/2-3.png"></p><p>一个NFA接受输入字符串x，当且精当对应的转换图中存在一条从开始状态到某个接受状态的路径，使得该路径中各个边上的标号组成符号x</p><h2 id="自动机与语言"><a href="#自动机与语言" class="headerlink" title="自动机与语言"></a>自动机与语言</h2><p>由一个NFA A定义(接受) 的语言是从开始状态到某个接受状态的所有路径上的符号串集合，称为L(A)</p><h2 id="NFA转换成DFA-子集构造法"><a href="#NFA转换成DFA-子集构造法" class="headerlink" title="NFA转换成DFA-子集构造法"></a>NFA转换成DFA-子集构造法</h2><p>$D$的开始状态是$\epsilon -closure(s_0)$ $D$的接受状态时所有至少包含了$N$的一个接收状态的状态集合</p><p><img src="/../img/compiler/2-4.png"></p><p><img src="/../img/compiler/2-5.png"></p><p><img src="/../img/compiler/2-6.png"></p><h2 id="如何将正则表达式转化为NFA"><a href="#如何将正则表达式转化为NFA" class="headerlink" title="如何将正则表达式转化为NFA"></a>如何将正则表达式转化为NFA</h2><p>基本情况+归纳得到</p><p><img src="/../img/compiler/2-7.png"></p><p><img src="/../img/compiler/2-8.png"></p><p><img src="/../img/compiler/2-9.png"></p><p><img src="/../img/compiler/2-10.png"></p><h2 id="DFA的化简"><a href="#DFA的化简" class="headerlink" title="DFA的化简"></a>DFA的化简</h2><p>将一个DFA的状态机划分为多各组，（组之间的状态不可区分）然后将每个组中的状态合并成状态最少的DFA的一个状态</p><p>可区分</p><p>如果分别中s和t除法，沿着标号为x的路径到达的两个状态只有一个时接受状态，则成为x区分状态s和t</p><p>如果存在能够区分s和t的串，那么他们就是可区分的</p><ol><li><p>设置初始划分 $\prod &#x3D; {S - F,F}$</p></li><li><p>迭代，不断划分 <br>for($\prod$中的每一个元素$G$){<br> 细分$G$,使得$G$中s,t任然在同一组 iff<br> 对于任意a,s,t都到达$\prod$中的同一组<br> $\prod_{new}$ &#x3D; 将$\prod$ 中的$G$替换为细分得到的小组<br>}</p></li><li><p>如果$\prod_{new} &#x3D;&#x3D; \prod$ 令$\prod_{final} &#x3D;&#x3D; \prod$ 转4否则$\prod &#x3D;&#x3D; \prod_{new}$转2</p></li><li><p>在$\prod_{final}$的每一个组中选择一个状态作为代表，作为最小DFA的状态</p></li></ol><h2 id="基于状态转换图单位词法分析器"><a href="#基于状态转换图单位词法分析器" class="headerlink" title="基于状态转换图单位词法分析器"></a>基于状态转换图单位词法分析器</h2><p>从转换图构造词法分析器的方法</p><p>变量state记录当前状态</p><p>switch根据当前状态转移</p><p>一个状态对应于一段代码：根据读入确定下一个状态，撞不到对应的边调用fail()进行错误恢复</p><p>进入某个接受状态的时候返回对应的词法单元</p><h2 id="多个模式集成到词法分析器"><a href="#多个模式集成到词法分析器" class="headerlink" title="多个模式集成到词法分析器"></a>多个模式集成到词法分析器</h2><p>词法分析器需要匹配多个模式，顺序尝试，引发错误回退处理下一个状态转化图</p><p>并行运行各个状态转换图</p><p>所有状态转换图合并为一个图（或）</p><h3 id="基于NFA的模式匹配"><a href="#基于NFA的模式匹配" class="headerlink" title="基于NFA的模式匹配"></a>基于NFA的模式匹配</h3><p>词法分析器模拟NFA的运行直到到达一个灭有后续状态的输入点</p><p>沿着状态机顺序回找直到找个一个包含一个或者多个接受状态的集合位置，如果集合中有多个接受状态，选择程序中位置最靠前的模式相关联的接受状态并且执行</p>]]></content>
    
    
    <categories>
      
      <category>compiler</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>compiler-summary</title>
    <link href="/2024/03/08/compiler-summary/"/>
    <url>/2024/03/08/compiler-summary/</url>
    
    <content type="html"><![CDATA[<h1 id="什么是编译器"><a href="#什么是编译器" class="headerlink" title="什么是编译器"></a>什么是编译器</h1><p>一个编译器就是一个程序，读入以某一种语言编写的程序，并且把该程序翻译为一个等价的用另外一种语言编写的程序</p><h1 id="编译器的结构"><a href="#编译器的结构" class="headerlink" title="编译器的结构"></a>编译器的结构</h1><p>分析部分(Analysis)</p><p>源程序 - 语法结构 - 中间表示</p><p>搜集源程序中的相关信息放入符号表</p><p>分析，定位程序中可能存在的错误信息</p><p>又称之为编译器的前端，是与机器无关的部分</p><p>综合部分(Synthesis)</p><p>根据符号表和中间表示狗仔目标程序</p><p>又称为编译器的后端(back end)是与机器相关的部分</p><p><img src="/../img/compiler/1-2.png"></p><h2 id="词法分析-lexical-analysis-scanning"><a href="#词法分析-lexical-analysis-scanning" class="headerlink" title="词法分析(lexical analysis scanning)"></a>词法分析(lexical analysis scanning)</h2><p>读入源程序的字符流，输出有意义的词素(lexeme)</p><p>基于词素产生词法单元&lt;token-name,attribute-value&gt;</p><p>token-name由语法分析步骤使用</p><p>attribute-value指向相应的符号表条目，由语义分析&#x2F;代码生成步骤使用</p><h2 id="语法分析-syntax-analysis"><a href="#语法分析-syntax-analysis" class="headerlink" title="语法分析(syntax analysis)"></a>语法分析(syntax analysis)</h2><p>根据词法单元的第一个分量来创造树形图中间表示形式。通常是语法树</p><p>指出了词法单元流的语法结构</p><h2 id="语义分析"><a href="#语义分析" class="headerlink" title="语义分析"></a>语义分析</h2><p>使用语法树和符号表中的信息，检查源程序是否满足语言定义的语义约束</p><p>收集类型信息用于代码生成</p><p>类型检查和类型转换</p><h2 id="中间代码生成"><a href="#中间代码生成" class="headerlink" title="中间代码生成"></a>中间代码生成</h2><p>生成类似于机器语言的中间表示</p><h2 id="代码优化"><a href="#代码优化" class="headerlink" title="代码优化"></a>代码优化</h2><p>改进中间代码</p><h2 id="代码生成"><a href="#代码生成" class="headerlink" title="代码生成"></a>代码生成</h2><p>把中间表示形式映射到目标语言</p>]]></content>
    
    
    <categories>
      
      <category>compiler</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>seac2-programlaunch</title>
    <link href="/2024/03/08/seac2-programlanch/"/>
    <url>/2024/03/08/seac2-programlanch/</url>
    
    <content type="html"><![CDATA[<h1 id="项目与项目管理"><a href="#项目与项目管理" class="headerlink" title="项目与项目管理"></a>项目与项目管理</h1><h2 id="什么是项目"><a href="#什么是项目" class="headerlink" title="什么是项目"></a>什么是项目</h2><p><strong>项目是具有下列特征的一些列活动和任务：</strong></p><p>具有一个明确的目标</p><p>有限的开始和结束日期</p><p>有成本限制</p><p>消耗人力和非人力资源</p><p>多工种合作</p><h2 id="项目管理的目标"><a href="#项目管理的目标" class="headerlink" title="项目管理的目标"></a>项目管理的目标</h2><p>在规定时间内</p><p>在一定成本呢内</p><p>在要求的质量水平上</p><p>高效使用资源</p><p>获得客户的认可</p><h2 id="过程组与活动"><a href="#过程组与活动" class="headerlink" title="过程组与活动"></a>过程组与活动</h2><p>过程组：项目启动，项目计划，项目执行，项目跟踪与控制和项目收尾</p><p>活动：计划制定，团队管理，风险控制，质量保障，度量，过程管理，进度追踪与控制，风险管理，配置管理</p><h1 id="团队组织与管理"><a href="#团队组织与管理" class="headerlink" title="团队组织与管理"></a>团队组织与管理</h1><h2 id="团队的特征"><a href="#团队的特征" class="headerlink" title="团队的特征"></a>团队的特征</h2><p>团队成员又共同的目标</p><p>团队成员要共同承担责任</p><p>团队成员要技能互补</p><p>团队内部要有一个明确的结构</p><h1 id="软件质量保障"><a href="#软件质量保障" class="headerlink" title="软件质量保障"></a>软件质量保障</h1><p>软件工程师要对软件产品的质量负责</p><p>对于软件质量的要求可能是显式的，也可能是隐式的</p><p>人们通常会选用系统的某些质量要素进行量化处理，建立质量特征，这些特征被称之为质量属性</p><p>为了能够根据质量属性描述和评价系统的整体质量，人们从很多质量属性的定义中选择了一些能相互配合相互联系的特征集，被称之为质量模型</p><h2 id="评审"><a href="#评审" class="headerlink" title="评审"></a>评审</h2><p><img src="/../img/seac2/1-4.png"></p><ol><li><p>在规划阶段（Planning），制定审查计划，决定审查会议的次数，安排每次审查会议的时间、地点、参与⼈员、审查内容等等。</p></li><li><p>在总体部署阶段（Overview），向所有参与审查会议的⼈员描述待审查材料的内容、审查的⽬标以及⼀些假设，并分发⽂档。</p></li><li><p>在准备阶段（Preparation），审查⼈员各⾃独⽴执⾏检查任务。在检查的过程当中，他们可能会被要求使⽤检查清单、场景等检查⽅法。检查中发现的问题会被记录下来，以准备开会讨论或者提交给收集⼈员。</p></li><li><p>在审查会议阶段（Inspection Meeting），通过会议讨论，识别、确认、分类发现的错误。</p></li><li><p>在返⼯阶段（Rework），修改发现的缺陷。</p></li><li><p>在跟踪阶段（Follow-up），要确认所有发现的问题都得到了解决，所有的错误都得到了修正。</p></li></ol><h2 id="质量度量"><a href="#质量度量" class="headerlink" title="质量度量"></a>质量度量</h2><p>测度(Measure)就是为了描述软件产品而提供的定量指标</p><ul><li>代码行数</li></ul><p>进行测度的活动称之为测量(Measurement)</p><p>度量(Metric)是软件产品在特定属性上的里浪花测度程度</p><ul><li>基于所有对象的代码行数测度可以建立平均代码行数，最大代码行数，。。。。</li></ul><h1 id="软件配置管理"><a href="#软件配置管理" class="headerlink" title="软件配置管理"></a>软件配置管理</h1><h2 id="软件配置管理的动机"><a href="#软件配置管理的动机" class="headerlink" title="软件配置管理的动机"></a>软件配置管理的动机</h2><p>在软件开发活动中，除了最终产品之外，还会产⽣很多中间制品，例如需求规格说明、需求分析模型、软件体系结构设计模型、详细设计模型等。这些制品是不同阶段、不同⻆⾊、不同软件开发活动进⾏协同的基础。</p><p>在复杂软件系统开发中，产⽣的制品数量众多，以⾄于开发者需要维护⼀个清单才能清楚项⽬所处的状态，理解已经完成的⼯作和将要进⾏的⼯作。</p><p>某个制品发⽣变化带来的最⼤挑战是如何确保其使⽤者能够得到最新的制品，避免开发协同出现问题。</p><h2 id="什么是配置管理"><a href="#什么是配置管理" class="headerlink" title="什么是配置管理"></a>什么是配置管理</h2><p>配置管理：用技术和管理的指导和监督方法，来标识和说明配置项的功能和物理特征，控制对于这些特征的变更，记录和报告变更处理以及其实现状态，并且验证和规格需求的一致性</p><p>配置项：置于软件配置管理之下的软件配置的各种有关项⽬，包括各类管理⽂档、评审记录与⽂档、软件⽂档、源码及其可执⾏码、运⾏所需的系统软件和⽀持软件以及有关数据等</p><h2 id="配置管理活动"><a href="#配置管理活动" class="headerlink" title="配置管理活动"></a>配置管理活动</h2><p>标识配置项</p><p>版本管理</p><p>变更控制</p><p>配置审计</p><p>状态报告</p><p>软件发布管理</p><h2 id="版本控制的问题"><a href="#版本控制的问题" class="headerlink" title="版本控制的问题"></a>版本控制的问题</h2><p>lock-modify-unlock solution</p><p>copy-modify-merge solution</p><p><img src="/../img/seac2/2-1.png"></p><p><img src="/../img/seac2/2-2.png"></p><h2 id="分支管理的常见策略"><a href="#分支管理的常见策略" class="headerlink" title="分支管理的常见策略"></a>分支管理的常见策略</h2><p>主分支（Master）</p><p>开发分支（Develop）</p><p>临时性分支</p><ul><li><p>功能（Feature）</p></li><li><p>预发布（Release）</p></li><li><p>修补bug（Fixbug）</p></li></ul><h2 id="git的分区"><a href="#git的分区" class="headerlink" title="git的分区"></a>git的分区</h2><p><img src="/../img/seac2/2-3.png"></p><p>一些常用的指令</p><pre><code class="hljs">    git diff    git diff head    git diff --cacheed</code></pre><h1 id="管理实践"><a href="#管理实践" class="headerlink" title="管理实践"></a>管理实践</h1><p>经济为本</p><p>分工写作</p><p>目标驱动</p><p>常来常往</p><p>有张有驰</p><p>不断总结</p><h1 id="项目实践"><a href="#项目实践" class="headerlink" title="项目实践"></a>项目实践</h1>]]></content>
    
    
    <categories>
      
      <category>seac2</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>seac2-demandfoundation</title>
    <link href="/2024/03/08/seac2-demandfoudation/"/>
    <url>/2024/03/08/seac2-demandfoudation/</url>
    
    <content type="html"><![CDATA[<h1 id="需求工程"><a href="#需求工程" class="headerlink" title="需求工程"></a>需求工程</h1><p>所有需求处理活动的总和。它收集信息，分析问题，整合观点，记录需求并且验证其正确性，最终描述出软件被应用其与环境互动形成的期望效应。</p><p>三个主要任务：</p><p>需求工程必须说明软件系统将被应用的应用环境及其目标，说明用来达成这些目标的软件功能，也即要说明软件需要“做什么”和“为什么”需要做</p><p>需求工程必须将目标和功能反映到软件系统中，映射为可行的软件行为，并且对软件行为进行准确的规格说明</p><p>现实世界是不断变化的世界，需求工程还需要妥善处理目标和功能随着实践演化而变动的情况</p><p><img src="/../img/seac2/3-1.png"></p><h2 id="需求开发"><a href="#需求开发" class="headerlink" title="需求开发"></a>需求开发</h2><p><img src="/../img/seac2/3-2.png"></p><h3 id="需求获取"><a href="#需求获取" class="headerlink" title="需求获取"></a>需求获取</h3><p>从人，文档或者环境中获取需求的过程</p><p>要利用各种方法和技术来“发现”需求</p><p>目标分析</p><p>(1) 根据问题确定目标</p><p>(2) 通过分析利害关系人确定目标</p><p><strong>需求获取的方式</strong></p><p>面谈</p><p>问卷</p><p>文档分析</p><p>头脑风暴</p><p>专题讨论</p><p>原型</p><p>民族志</p><p>竞品分析</p><h3 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h3><p>通过建模整合各种信息使得人们更好的理解问题</p><p>为问题定义出一个需求集合，这个集合能够为问题界定一个有效的解决方案</p><p>检查需求当中存在错误遗漏不一致等等等各种缺陷并且加以修正</p><p>一，边界分析</p><p>定义项目的范围，系统边界的定义要保证系统能和周围的环境形成有效的互动</p><p>系统用例图通常被用来定义系统的边界</p><p>二，需求建模</p><p>建模是为了展现和解释信息而进行的抽象描述活动</p><p>常用技术包括类图，顺序图，状态图等等建模技术</p><h3 id="规格说明"><a href="#规格说明" class="headerlink" title="规格说明"></a>规格说明</h3><p>系统用户之间交流需求信息</p><p>要及简洁精确一致和易于理解</p><p>需求工程师负责</p><p>定制文档模板</p><p>编写文档</p><h3 id="需求验证"><a href="#需求验证" class="headerlink" title="需求验证"></a>需求验证</h3><p>（1）文档内每条需求都正确，准确反映了用户的意图</p><p>（2）文档记录的需求集在整体上具有完整性和一致性</p><p>（3）文档的组织方式和需求的书写方式具有可读性和可修改性</p><h2 id="需求管理"><a href="#需求管理" class="headerlink" title="需求管理"></a>需求管理</h2><p>保证需求作用的持续稳定和有效发挥</p><p>进行变更控制</p><p>纳入和实现合理的需求变更请求，拒绝不合理的变更请求，控制变更的成本和影响范围</p><h1 id="需求基础"><a href="#需求基础" class="headerlink" title="需求基础"></a>需求基础</h1><p>IEEE</p><p>（1）用户为了解决问题或者达到某些目标所需要的条件或能力</p><p>（2）系统或者系统部件为了满足合同标准规范或者其他正式文档所规定的要秋而需要具备的条件和能力</p><p>（3）对于（1）（2）中的一个条件或者一种能力的文档化表述</p><h2 id="问题域"><a href="#问题域" class="headerlink" title="问题域"></a>问题域</h2><p>现实世界运行规律的一种反映</p><p>需求的产生地也是需求的解决地</p><p>最终的软件产品要在现实中部署，部分影响问题域但是不能任意改变现实</p><p>软件开发必须尊重问题域不能应为技术原因妄自修改现实世界的实际情况</p><h2 id="规格说明-1"><a href="#规格说明-1" class="headerlink" title="规格说明"></a>规格说明</h2><p>软件产品的⽅案描述，它以软件产品的运⾏机制为主要内容。</p><p>它不是需求但实现需求，不是问题域但需要与问题域互动。</p><p>规格说明要以关注对外交互的⽅式描述软件解决⽅案，它既需要从软件产品的⻆度⽽不是⽤户的⻆度进⾏描述，⼜不能太多地涉及软件产品的内部构造机制。</p><h2 id="业务需求"><a href="#业务需求" class="headerlink" title="业务需求"></a>业务需求</h2><p>系统建立的战略出发点，表现为高层次的目标(Objective)描述组织为什么要开发系统</p><p>为了满足用户的业务需求，需求工程师需要描述系统高层次的解决方案，定义系统应该具备的特性</p><p>参与各方必须要对高层次的解决方案达成一致，以建立一个共同的前景</p><p>特性说明系统为了用户提供的各种功能，限定了系统范围</p><h2 id="用户需求"><a href="#用户需求" class="headerlink" title="用户需求"></a>用户需求</h2><p>执行实际工作的用户对于系统所能完成的具体任务的期望，描述了系统能够帮助用户做些什么</p><p>对于所有用户的需求都应该有充分的知识域作为背景支持</p><p>特性：模糊，不清晰，多特性混杂，多逻辑混杂</p><h1 id="需求分类"><a href="#需求分类" class="headerlink" title="需求分类"></a>需求分类</h1><h1 id="课堂练习"><a href="#课堂练习" class="headerlink" title="课堂练习"></a>课堂练习</h1><p>业务需求</p><p>-向用户展示2014-2015赛季最大心脏的投手</p><p>用户需求</p><p>-系统要能记录比赛数据，包括比赛比分，比赛类型（决赛），进球数据</p><p>系统需求</p><p>-用户输入某一个球员的名字或者编号的时候，系统可以输出其各项比赛数据</p>]]></content>
    
    
    <categories>
      
      <category>seac2</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>os-summary</title>
    <link href="/2024/03/04/os-0/"/>
    <url>/2024/03/04/os-0/</url>
    
    <content type="html"><![CDATA[<h1 id="计算机系统"><a href="#计算机系统" class="headerlink" title="计算机系统"></a>计算机系统</h1><h2 id="计算机系统概览"><a href="#计算机系统概览" class="headerlink" title="计算机系统概览"></a>计算机系统概览</h2><h3 id="电子数字计算机"><a href="#电子数字计算机" class="headerlink" title="电子数字计算机"></a>电子数字计算机</h3><p>是一种能够自行按照已经设定的程序进行数据处理的电子设备</p><h3 id="冯诺依曼结构"><a href="#冯诺依曼结构" class="headerlink" title="冯诺依曼结构"></a>冯诺依曼结构</h3><p>。。。</p><h3 id="计算机系统的组成"><a href="#计算机系统的组成" class="headerlink" title="计算机系统的组成"></a>计算机系统的组成</h3><p>计算机系统：包括<strong>硬件子系统</strong>和<strong>软件子系统</strong></p><p>硬件：借助电磁光机械等等原理构成的各种物理部件的有机组合，是系统工作的实体</p><p>软件：各种程序和文件，用于指挥计算机系统按照指定的要求进行协同工作，包括系统软件，支撑软件和应用软件。关键系统软件是：操作系统和语言处理程序</p><h3 id="计算机系统的用户视图"><a href="#计算机系统的用户视图" class="headerlink" title="计算机系统的用户视图"></a>计算机系统的用户视图</h3><p><img src="/../img/os/1-1.png"></p><h2 id="计算机硬件系统"><a href="#计算机硬件系统" class="headerlink" title="计算机硬件系统"></a>计算机硬件系统</h2><h3 id="计算机硬件系统的组成"><a href="#计算机硬件系统的组成" class="headerlink" title="计算机硬件系统的组成"></a>计算机硬件系统的组成</h3><p>中央处理器：运算单元，控制单元</p><p>主存储器</p><p>外围设备：输入输出设备，存储设备，网络通信设备。</p><p>总线</p><h3 id="存储程序计算机体系结构上的主要特点"><a href="#存储程序计算机体系结构上的主要特点" class="headerlink" title="存储程序计算机体系结构上的主要特点"></a>存储程序计算机体系结构上的主要特点</h3><p>以运算单元为中心，控制流由指令流产生</p><p>采用存储程序原理，面向主存组织数据流</p><p>主存按照地址访问，线性编址的空间</p><p>指令指令由操作码和地址码组成</p><p>数据以二进制编码</p><h3 id="总线"><a href="#总线" class="headerlink" title="总线"></a>总线</h3><p>时传输各类通信信号的线路</p><p>按照所传输的信息的组成分为控制线，数据线，地址线。</p><p>总线的类型：内部总线：用于cpu芯片内部连接各个元件。系统总线：用于连接cpu存储器和各种io模块等等部件。通信总线：用于计算机之间的通信</p><p><img src="/../img/os/1-2.png"></p><h3 id="中央处理器"><a href="#中央处理器" class="headerlink" title="中央处理器"></a>中央处理器</h3><p>包括：</p><p>运算逻辑部件</p><p>寄存器部件</p><p>控制部件</p><h3 id="IO控制方式"><a href="#IO控制方式" class="headerlink" title="IO控制方式"></a>IO控制方式</h3><p>轮询：</p><p>中断：</p><p>DMA：</p><h2 id="计算机软件系统"><a href="#计算机软件系统" class="headerlink" title="计算机软件系统"></a>计算机软件系统</h2><h3 id="计算机软件系统的组成"><a href="#计算机软件系统的组成" class="headerlink" title="计算机软件系统的组成"></a>计算机软件系统的组成</h3><p>系统软件：操作系统，实用程序，语言处理程序，数据库管理系统</p><p>支撑软件：接口软件，工具软件，环境数据库</p><p>应用软件</p><h2 id="计算机操作技术的发展"><a href="#计算机操作技术的发展" class="headerlink" title="计算机操作技术的发展"></a>计算机操作技术的发展</h2><p>。。。</p><h2 id="计算机操作系统"><a href="#计算机操作系统" class="headerlink" title="计算机操作系统"></a>计算机操作系统</h2><p>OS是计算机系统最基础的系统软件，管理软硬件资源、控制程序执行，改善人机界面，合理组织计算机工作流程，为用户使用计算机提供良好运行环境</p><p>操作系统是方便用户、管理和控制计算机软硬件资源的系统程序集合，在整个计算机系统中具有承上启下的地位</p><p>从用户角度看，OS管理计算机系统的各种资源，扩充硬件的功能，控制程序的执行</p><p>从人机交互看，OS是用户与机器的接口，提供良好的人机界面，方便用户使用计算机</p><p>从系统结构看，OS是一个大型软件系统，其功能复杂，体系庞大，采用层次式、模块化的程序结构</p><h3 id="操作系统的组成"><a href="#操作系统的组成" class="headerlink" title="操作系统的组成"></a>操作系统的组成</h3><p>进程调度子系统</p><p>进程通信子系统</p><p>内存管理子系统</p><p>设备管理子系统</p><p>文件管理子系统</p><p>网络通信子系统</p><p>作业控制子系统</p><h3 id="操作系统的类型"><a href="#操作系统的类型" class="headerlink" title="操作系统的类型"></a>操作系统的类型</h3><p><strong>从操作的方式来看：</strong></p><p>多道批处理系统，脱机控制方式</p><p>分时操作系统,交互式控制方式</p><p>实时操作系统</p><p><strong>操作系统的应用领域分类：</strong></p><p>服务器操作系统</p><p>并行操作系统</p><p>网络操作系统</p><p>分布式操作系统</p><p>个人机操作系统</p><p>手机操作系统</p><p>嵌入式操作系统</p><p>传感器操作系统</p><h1 id="深入观察操作系统"><a href="#深入观察操作系统" class="headerlink" title="深入观察操作系统"></a>深入观察操作系统</h1><h2 id="资源管理的视角"><a href="#资源管理的视角" class="headerlink" title="资源管理的视角"></a>资源管理的视角</h2><h3 id="屏蔽资源使用的底层细节"><a href="#屏蔽资源使用的底层细节" class="headerlink" title="屏蔽资源使用的底层细节"></a>屏蔽资源使用的底层细节</h3><p>驱动程序：最底层的，直接控制和监视各个硬件（文件）资源的部分</p><h3 id="资源的共享方式"><a href="#资源的共享方式" class="headerlink" title="资源的共享方式"></a>资源的共享方式</h3><p>独占使用</p><p>并发使用</p><h3 id="资源分类策略"><a href="#资源分类策略" class="headerlink" title="资源分类策略"></a>资源分类策略</h3><p>静态分配方式：进程运行前一次拿到全部资源</p><p>动态分配方式：</p><p>资源抢占方式：被抢夺资源的进程需要回滚执行</p><h2 id="控制程序执行的视角"><a href="#控制程序执行的视角" class="headerlink" title="控制程序执行的视角"></a>控制程序执行的视角</h2><h3 id="多道程序设计的特点"><a href="#多道程序设计的特点" class="headerlink" title="多道程序设计的特点"></a>多道程序设计的特点</h3><p>cpu与外部设备充分并行</p><p>外部设备之间充分并行</p><p>发挥cpu的使用效率</p><p>提高单位时间的算题量</p><p>但是单道程序的运算时间会增加</p><h3 id="多道程序系统实现"><a href="#多道程序系统实现" class="headerlink" title="多道程序系统实现"></a>多道程序系统实现</h3><p>为进入内存执行的程序建立管理实体：进程</p><p>os应该能够管理与控制进程程序的执行</p><p>os协调管理各类资源在进程间的使用：</p><p>处理器的管理和调度</p><p>主存储器的管理和调度</p><p>其他资源的管理和调度</p><h2 id="操作控制计算机的视角"><a href="#操作控制计算机的视角" class="headerlink" title="操作控制计算机的视角"></a>操作控制计算机的视角</h2><h3 id="计算机系统操作方式"><a href="#计算机系统操作方式" class="headerlink" title="计算机系统操作方式"></a>计算机系统操作方式</h3><p>OS规定了合理操作计算机的工作流程</p><p>OS的操作接口——系统程序</p><p>OS提供给用户的功能级接口，为用户提供的解决操作计算机和计算共性问题的所有服务的集合</p><p>OS的两类作业级接口</p><p>脱机作业控制方式：作业控制语言</p><p>联机作业控制方式：操作控制命令</p><h3 id="脱机作业控制方式"><a href="#脱机作业控制方式" class="headerlink" title="脱机作业控制方式"></a>脱机作业控制方式</h3><p>os：提供作业说明语言</p><p>用户：编写作业说明书，确定作业加工控制步骤并与程序数据一并提交</p><p>操作员：通过控制台输入作业</p><p>OS：通过作业控制程序自动控制作业的执行</p><h3 id="联机作业："><a href="#联机作业：" class="headerlink" title="联机作业："></a>联机作业：</h3><p>计算机：提供终端（键盘&#x2F;显示器）</p><p>用户：登录系统</p><p>OS：提供命令解释程序</p><p>用户：联机输入操作控制命令，直接控制作业步的执行</p><h3 id="命令解释程序"><a href="#命令解释程序" class="headerlink" title="命令解释程序"></a>命令解释程序</h3><p>命令解释程序：接受和执行一条用户提出的对作业的加工处理命令</p><p>当一个新的批作业被启动，或新的交互型用户登录进系统时，系统就自动地执行命令解释程序，负责读入控制卡或命令行，作出相应解释，并予以执行</p><p>会话语言：可编程的命令解释程序</p><p>图形化的命令控制方式</p><p>多通道交互的命令控制方式</p><p>OS启动命令解释程序，输出命令提示符，等待键盘中断、鼠标点击、多通道识别</p><p>每当用户输入一条命令(暂存在命令缓冲区)并按回车换行时，申请中断</p><p>CPU响应后，将控制权交给命令解释程序，接着读入命令缓冲区内容，分析命令、接受参数，执行处理代码</p><h3 id="前台命令和后台命令"><a href="#前台命令和后台命令" class="headerlink" title="前台命令和后台命令"></a>前台命令和后台命令</h3><p>前台命令执行结束后，再次输出命令提示符，等待下一条命令</p><p>后台命令处理启动后，即可接收下条命令</p><h2 id="人机交互的视角"><a href="#人机交互的视角" class="headerlink" title="人机交互的视角"></a>人机交互的视角</h2><p>。。。</p><h2 id="程序接口的视角"><a href="#程序接口的视角" class="headerlink" title="程序接口的视角"></a>程序接口的视角</h2><p>操作系统的程序接口：操作系统为程序运行扩充的编程接口</p><p>系统调用：操作系统实现的完成某种特定功能的过程；为所有运行程序提供访问操作系统的接口</p><h3 id="系统调用的实现机制"><a href="#系统调用的实现机制" class="headerlink" title="系统调用的实现机制"></a>系统调用的实现机制</h3><p>陷入处理机制：计算机系统中控制和实现系统调用的机制</p><p>陷入指令：也称访管指令，或异常中断指令，计算机系统为实现系统调用而引起处理器中断的指令</p><p>每个系统调用都事先规定了编号，并在约定寄存器中规定了传递给内部处理程序的参数</p><p><img src="/../img/os/1-3.png"></p><h2 id="系统结构的视角"><a href="#系统结构的视角" class="headerlink" title="系统结构的视角"></a>系统结构的视角</h2><p><img src="/../img/os/1-4.png"></p><p><img src="/../img/os/1-5.png"></p>]]></content>
    
    
    <categories>
      
      <category>os</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>seac2-foundation</title>
    <link href="/2024/03/02/seac2-summary/"/>
    <url>/2024/03/02/seac2-summary/</url>
    
    <content type="html"><![CDATA[<h2 id="软件的特性"><a href="#软件的特性" class="headerlink" title="软件的特性"></a>软件的特性</h2><p>软件与现实世界关系更加密切对于需求的规格化更加困难。</p><p>软件比精简容桂修改的多，并且不需要昂贵的生产线复制产品</p><p>软件没有损耗</p><p>软件不可见</p><h2 id="What-is-a-software-summary"><a href="#What-is-a-software-summary" class="headerlink" title="What is a software - summary"></a>What is a software - summary</h2><p>software is independent of hardware</p><p>software is a tool</p><p>software &#x3D; programs + documents + data + knowledge</p><p>software developement is much more complicated than programing</p><p>application software originate from the reality and reversely improve the reality</p><h2 id="What-is-a-software-engineering"><a href="#What-is-a-software-engineering" class="headerlink" title="What is a software engineering?"></a>What is a software engineering?</h2><p>(1) The application of a systematic, disciplined, quantifiable approach to the development, operation, and maintenance of software; that is the application of engineering to software.</p><p>(2) The study of approaches as in (1)</p><h2 id="Engineering"><a href="#Engineering" class="headerlink" title="Engineering"></a>Engineering</h2><p>The creative application of scientific principles to design or develop structures, machines, apparatus, or manufacturing processes, or works utilizing them singly or in combination; or to construct or operate the same with full cognizance of their design; or to forecast their behavior under specific operating conditions; all as respects an intended function, economics of operation or safety to life and property.</p><h2 id="Engineer"><a href="#Engineer" class="headerlink" title="Engineer"></a>Engineer</h2><p>⼯程师通过⼀系列的讨论决策，仔细评估项⽬的可选活动，并在每个决策点选择⼀种在当前环境中适合当前任务的⽅法进⾏⼯作。可以通过对成本和收益进⾏折衷分析调整相应策略。</p><p>⼯程师需要对某些对象进⾏度量，有时需要定量的⼯作；他们要校准和确认度量⽅法，并根据经验和实验数据进⾏估算。</p><p>软件⼯程师强调项⽬设计过程的纪律性，这是团队⾼效⼯作的条件。</p><p>⼯程师可胜任研究、开发、设计、⽣产、测试、构造、操作、管理，以及销售、咨询和培训等多种⻆⾊。</p><p>⼯程师们需要在某些过程中使⽤⼯具，选择和使⽤合适的⼯具是⼯程的关键要素。</p><p>⼯程师们通过专业协会发展和确认原理、标准和最佳实践⽅法，并提⾼个⼈能⼒。</p><p>⼯程师们能够重⽤设计和设计制品。</p><p><img src="/../img/seac2/1-1.png"></p><h2 id="prospectsi"><a href="#prospectsi" class="headerlink" title="prospectsi"></a>prospectsi</h2><p>具有解决实际问题的动机：</p><p>⼯程学解决实际问题，⽽这些问题来源于⼯程领域之外的⼈——消费者。</p><p>应⽤科学知识指导⼯程活动：</p><p>⼯程学不依赖于个⼈的技能，⽽是强调以科学知识为指导，按照特定⽅法与技术，进⾏规律性的设计、分析等活动，实现⼯程活动的可学习性和可重复性。</p><p>以成本效益⽐有效为基本条件：</p><p>⼯程学不单单只是解决问题，它要有效利⽤所有资源，⾄少成本要低于效益，即成本效益⽐有效。</p><p>构建机器或事物：</p><p>⼯程学强调构建实物⼯具，例如机器、事物等，并利⽤实物⼯具来解决问题。</p><p>以服务⼈类为最终⽬的：</p><p>⼯程学考虑的不是单个客户的需要，⽽是要运⽤技术和经验实现全社会的进步。</p><h2 id="软件开发活动"><a href="#软件开发活动" class="headerlink" title="软件开发活动"></a>软件开发活动</h2><p><img src="/../img/seac2/1-2.png"></p><h2 id="角色分工"><a href="#角色分工" class="headerlink" title="角色分工"></a>角色分工</h2><p><strong>程序员：</strong></p><p>承担软件构造任务。程序员与软件设计师通常是同⼀批⼈，也是根据其所分配到的任务开展⼯作。</p><p><strong>⼈机交互设计师：</strong></p><p>承担⼈机交互设计任务。⼈机交互设计师与软件设计师可以是同⼀批⼈，也可以是不同⼈员。在有多个⼩组的软件⼯程团队中，可以有⼀个单独的⼈机交互设计师⼩组，也可以将⼈机交互设计师分配到各个⼩组。</p><p><strong>软件测试⼈员：</strong></p><p>承担软件测试任务。软件测试⼈员通常需要独⽴于其他的开发⼈员⻆⾊。⼀个团队可能有⼀个或多个测试⼩组。⼀个⼩组可能有⼀个或多个软件测试⼈员。</p><p><strong>项⽬管理⼈员：</strong></p><p>负责计划、组织、领导、协调和控制软件开发的各项⼯作。相⽐于传统意义上的管理者，他们不完全是监控者和控制者，更多得是协调者。通常⼀个<br>团队只有⼀个项⽬管理⼈员。</p><p><strong>软件配置管理⼈员：</strong></p><p>管理软件开发中产⽣的各种制品，具体⼯作是对重要制品进⾏标识、变更控制、状态报告等。通常⼀个团队只有⼀个软件配置管理⼈员。</p><p><strong>质量保障⼈员：</strong></p><p>在⽣产过程中监督和控制软件产品质量的⼈员。通常⼀个团队有⼀个质量保障⼩组，由⼀个或多个⼈员组成。</p><p><strong>培训和⽀持⼈员：</strong></p><p>负责软件移交与维护任务。他们可以是其他开发⼈员的⼀部分，也可以是独⽴的⼈员。</p><p><strong>⽂档编写⼈员：</strong></p><p>专⻔负责写作软件开发各种⽂档的⼈员。他们的存在是为了充分利⽤部分宝贵的⼈⼒资源（例如需求⼯程师和软件体系结构师），让这些⼈⼒资源从繁杂的⽂档化⼯作中解放出来。</p>]]></content>
    
    
    <categories>
      
      <category>seac2</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Computercomposition5_InputOutput</title>
    <link href="/2024/01/09/computercomposition5/"/>
    <url>/2024/01/09/computercomposition5/</url>
    
    <content type="html"><![CDATA[<h1 id="外围设备"><a href="#外围设备" class="headerlink" title="外围设备"></a>外围设备</h1><p>输入输出操作通过链接到输入输出模块的各种外部设备完成,这些外部设备提供了在外部环境和计算机系统之间的数据交换,通常被称之为 <strong>外围设备(peripheral device)</strong> ,简称为 <strong>外设(peripheral)</strong></p><p><strong>不可以</strong> 将外部设备直接连接到系统总线上</p><p>因为:</p><p>外设种类繁多，操作方法多种多样</p><ul><li><p>外设的数据传送速度一般比存储器或处理器的慢得多</p></li><li><p>某些外设的数据传送速度比存储器或处理器要快</p></li><li><p>外设使用的数据格式和字长度通常与处理器不同</p></li></ul><h1 id="IO模块"><a href="#IO模块" class="headerlink" title="IO模块"></a>IO模块</h1><p>通过 <strong>系统总线或者中央交换器</strong> 和存储器连接</p><p>通过 <strong>专用数据线</strong> 与一个或者多个外设连接</p><p>起到了 <strong>桥梁</strong> 作用</p><p><img src="/../img/computercomposition/4-19.png"></p><ul><li><p>输入输出模块的接口以控制，状态和数据型号的形式出现</p></li><li><p>与设备相关的控制逻辑控制控制外设的操作，以响应来自输入输出模块的命令</p></li><li><p>缓冲器用于缓冲输入输出模块和外设之间传送的数据</p></li><li><ul><li>缓冲器的大小一般为8bit或者16bit</li></ul></li></ul><h1 id="IO模块的功能"><a href="#IO模块的功能" class="headerlink" title="IO模块的功能"></a>IO模块的功能</h1><p>(1) 处理器通信</p><p><strong>命令译码</strong>：输入&#x2F;输出模块接受来自处理器的命令，这些命令一般作为信号发送到控制总线</p><p><strong>状态报告</strong>：由于外设速度很慢，所以直到输入输出模块的状态很重要</p><p><strong>数据</strong>：数据是在处理器和输入&#x2F;输出模块之间由数据总线来交换的</p><p><strong>地址识别</strong>：输入输出模块必须能是被它控制的每一个外设的唯一地址</p><p>(2) 设备通信</p><p>通信内容包含 <strong>命令</strong> ，<strong>状态信息</strong> 和 <strong>数据</strong></p><p>(3) 数据缓冲</p><ul><li><p>外设的数据传送速度一般比存储器或者处理器慢的多</p></li><li><p>某些外设的数据传送速度比存储器或者处理器要快得多</p></li></ul><p>(3) 控制和定时</p><ul><li><p>处理器会非预期的和一个或者几个外设进行通信</p></li><li><p>一些内部资源，如主存或者系统总线，是被共享的</p></li><li><p>例如：控制从外设到处理器的数据传送包括以下几个步骤</p><ul><li><p>处理器查询输入&#x2F;输出模块以检查所连接的设备的状态</p></li><li><p>输入输出模块返回设备状态</p></li><li><p>如何设别允准并且准备就绪，那么处理器通过向输入&#x2F;输出发出一条命令，请求数据传送</p></li><li><p>经过输入&#x2F;输出模块传送数据到处理器</p></li></ul></li></ul><p>(4) 检错</p><pre><code class="hljs">* 检查并且把差错信息报告给处理器* 差错类型    * 设备报告的机械和电路故障    * 传输过程中数据位的变化</code></pre><h1 id="IO模块的结构"><a href="#IO模块的结构" class="headerlink" title="IO模块的结构"></a>IO模块的结构</h1><p><img src="/../img/computercomposition/5-1.png"></p><h1 id="外部接口"><a href="#外部接口" class="headerlink" title="外部接口"></a>外部接口</h1><p>接口类型</p><ul><li><p>并行接口：多根线链接输入输出模块和外部设别，同时传送多位数据</p></li><li><p>串行接口：只有一根线用于传输数据，每次只传输1bit数据</p></li></ul><p>由于并行金额口每次要求同行传送，当传输速度和总西安长度增加的时候，总线的时钟频率会受到 <strong>限制</strong></p><h2 id="FireWire-USB"><a href="#FireWire-USB" class="headerlink" title="FireWire USB"></a>FireWire USB</h2><p>FireWire IEEE1394串行总线</p><p>USB 通用串行总线（Universal Serial Bus）</p><ul><li><p>控制传输：令牌包，数据包，握手包</p></li><li><p>批量传输 令牌报，数据包，握手包</p></li><li><p>同步传输：令牌包，数据包</p></li><li><p>中断传输：令牌包，数据包，握手包</p></li></ul><h1 id="IO操作技术"><a href="#IO操作技术" class="headerlink" title="IO操作技术"></a>IO操作技术</h1><p><strong>编程式IO：</strong>  处理器通过执行程序来直接控制IO操作，当处理器发送一条指令到IO模块的时候，他必须等待，直到IO操作完成</p><p><strong>中断驱动式I&#x2F;O：</strong> 处理器发送一条IO命令后，继续执行其他指令；并且当IO模块完成其工作的时候，才会去中断处理器的工作</p><p><strong>直接存储器读取（Direct Memory Acess DMA）:</strong> IO和主存直接交换数据而不需要处理器的干涉</p><h2 id="编程式IO"><a href="#编程式IO" class="headerlink" title="编程式IO"></a>编程式IO</h2><p>当处理器在执行过程中遇到一条与IO操作有关的指令的时候，他通过发送指令到适当的IO模块执行这条指令</p><p>IO模块将执行所有要求的动作，然后再IO状态寄存器中设置一些适当的位</p><p>IO不会中断处理器，因为处理器需要 <strong>周期地检查IO模块地状态，直到操作完成</strong></p><p><strong>CPU 全程100%投入</strong></p><h3 id="编程式IO：IO命令"><a href="#编程式IO：IO命令" class="headerlink" title="编程式IO：IO命令"></a>编程式IO：IO命令</h3><p><img src="/../img/computercomposition/5-2.png"></p><p>为了执行IO操作，处理器发送一个指定具体IO模块和外设地地址，并且发送了一条IO命令</p><p>类型：</p><p><strong>控制命令：</strong> 激活外设并且告诉它要做什么</p><p><strong>测试命令：</strong> 测试IO模块以及外设相关地各种状态条件</p><p><strong>读命令：</strong> 使得IO模块从外设获得一个数据，并且把它存入内部缓冲区</p><p><strong>写命令：</strong> 使得IO模块从数据总线获得一个数据，并且把它传入外设</p><h3 id="编程式IO：IO指令"><a href="#编程式IO：IO指令" class="headerlink" title="编程式IO：IO指令"></a>编程式IO：IO指令</h3><p>IO指令很容易映射为IO命令，并且两者之间是简单地一一对应关系</p><ul><li>指令的形式取决于外设寻址地方式</li></ul><p>编址方式:</p><ul><li><p><strong>存储器映射IO</strong> : 存储器IO设备有统一的地址空间</p><ul><li><p>能够使用大的指令系统，可以进行有效地编程</p></li><li><p>IO设备占用地址空间</p></li></ul></li><li><p>分离式IO让总线既有存储器的 <strong>读线和写线</strong> ，同时也有 <strong>输入和输出命令</strong></p></li></ul><h2 id="中断驱动式IO"><a href="#中断驱动式IO" class="headerlink" title="中断驱动式IO"></a>中断驱动式IO</h2><p>当处理器发送一个IO命令道模块，然后去处理其他有用的工作</p><p>当IO模块准备和处理器交换数据的时候，它中断处理器以请求服务</p><p>处理器执行数据传送，最后恢复它原先地处理工作</p><p><strong>从IO模块的角度来看：</strong></p><p>IO模块接受来自处理器地读命令</p><p>IO模块从相关地外设中读入数据</p><p>一旦数据进入IO模块地数据寄存器后，该模块通过控制总线给处理器发送中断信号</p><p>IO模块等待直到处理器请求该数据时候为止</p><p>当处理器其有数据请求地时候，IO模块把数据传送道数据总线上，并且准备另外一个IO操作</p><p><strong>从处理器的角度来看</strong></p><ul><li><p>处理器发送一个读命令</p></li><li><p>处理器离开取做其他的事情，并且在<strong>每个指令周期结束的时候检查中断</strong></p></li><li><p>当来自IO模块的中断出现的时候，处理器保存当前程序的现场</p></li><li><p>处理器从IO模块读取数据字并且保存到主存中</p></li><li><p>处理器恢复刚才正在运行的程序的现场，并且继续运行原来的程序</p></li></ul><h3 id="中断驱动IO：中断允许和中断禁止"><a href="#中断驱动IO：中断允许和中断禁止" class="headerlink" title="中断驱动IO：中断允许和中断禁止"></a>中断驱动IO：中断允许和中断禁止</h3><p><img src="/../img/computercomposition/5-3.png"></p><h3 id="中断驱动式IO：响应优先级以及处理优先级"><a href="#中断驱动式IO：响应优先级以及处理优先级" class="headerlink" title="中断驱动式IO：响应优先级以及处理优先级"></a>中断驱动式IO：响应优先级以及处理优先级</h3><p>响应优先级和处理优先级</p><p>例子：假设中断系统中又4个中断源，则其响应优先级为L1 &gt; L2 &gt; L3&gt;L4<br>处理优先级为L1 &gt; L2 &gt; L3&gt;L4,如果主要程序执行的时候同时发生L1L3L4中断，并且在L3中断的时候发生L2中断</p><p>则</p><p><img src="/../img/computercomposition/5-4.png"></p><h3 id="中断驱动式IO：设备识别"><a href="#中断驱动式IO：设备识别" class="headerlink" title="中断驱动式IO：设备识别"></a>中断驱动式IO：设备识别</h3><p><strong>多条中断线</strong> ：处理器仅仅挑选具有最高优先级地中断线</p><ul><li>即使有多条中断线可用，每条线上也需要采用其他三种技术的哪一种</li></ul><p><strong>软件轮询</strong> ：模块的轮询次序就决定了模块的优先级</p><ul><li>轮询每一个IO模块来确定是哪个模块发生的中断</li></ul><p><strong>菊花链</strong> ：链接模块的次序就决定了模块的优先级</p><ul><li>所有IO模块共享一条中断请求线，中断应答线采用菊花链穿过这些中断模块</li></ul><p><strong>独立请求</strong>：中断控制器决定</p><ul><li>特定的中断控制器用于阶码和分析优先级</li></ul><h2 id="直接存储器存取（DMA）"><a href="#直接存储器存取（DMA）" class="headerlink" title="直接存储器存取（DMA）"></a>直接存储器存取（DMA）</h2><p>两种技术的不足</p><ul><li><p>IO传输速度受到处理器测试和服务设备速度的限制</p></li><li><p>处理器负责管理IO传送，对于每一次IO传送，处理器必须执行很多指令</p></li></ul><p>直接存储器存取</p><ul><li><p>无需经过处理器即可直接访问内存的模块</p></li><li><p>处理器通过发送以下信息向DMA模块发出命令：读&#x2F;写，IO设备地址，内存中的起始位置，字数</p></li><li><p>处理器继续继续进行其他工作</p></li><li><p>DMA模块将全部数据块，每次一个字，直接将数据传输到存储器或者从存储器读出，无需经过处理器</p></li><li><p>当传输完成的时候，DMA模块向处理器发送一个中断信号</p></li></ul><p>内存访问的时候DMA优先于CPU</p><h3 id="DMA的几种访问内存的方法"><a href="#DMA的几种访问内存的方法" class="headerlink" title="DMA的几种访问内存的方法"></a>DMA的几种访问内存的方法</h3><p><img src="/../img/computercomposition/5-5.png"></p><p><img src="/../img/computercomposition/5-6.png"></p><p><img src="/../img/computercomposition/5-7.png"></p><h3 id="DMA配置机制："><a href="#DMA配置机制：" class="headerlink" title="DMA配置机制："></a>DMA配置机制：</h3><p><strong>单总线分离DMA</strong></p><p>所有模块共享相同的系统总线</p><p>DMA使用编程式IO，通过DMA模块在储存器和IO模块之间交换数据</p><p>便宜但是低效</p><p><strong>单总线集合的DMA-I&#x2F;O</strong></p><p>DMA逻辑实际上可能是IO模块的一个部分，也可能是控制一个或者多个IO模块</p><p>减少了总线周期数</p><p><strong>IO总线</strong></p><p>使用IO总线将IO模块连接到DMA模块</p><p>多个IO模块共享DMA模块，而且易于扩展</p><h3 id="中断源头识别"><a href="#中断源头识别" class="headerlink" title="中断源头识别"></a>中断源头识别</h3><p>CPU轮询：所有设备共用一条中断请求线，简单但效率低</p><p>原因寄存器：MIPS采用此方法，处理器执行过程中硬件自动设置</p><p>中断向量：x86采用此方法，查询内存专用区域的中断向量表（中断服<br>务程序的入口）</p>]]></content>
    
    
    <categories>
      
      <category>computercomposition</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Demand11_Exam</title>
    <link href="/2024/01/08/demand11/"/>
    <url>/2024/01/08/demand11/</url>
    
    <content type="html"><![CDATA[<p><img src="/../img/demand/21-1.png"></p><p><img src="/../img/demand/21-2.png"></p>]]></content>
    
    
    <categories>
      
      <category>demand</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Demand10_DemandVerificationandAdministration</title>
    <link href="/2024/01/08/demand10/"/>
    <url>/2024/01/08/demand10/</url>
    
    <content type="html"><![CDATA[<h2 id="需求验证方法"><a href="#需求验证方法" class="headerlink" title="需求验证方法"></a>需求验证方法</h2><p><strong>（1）评审</strong></p><p>由作者之外的其他人来检查产品问题的方法</p><p>是主要的静态分析手段</p><p>原则上，每一条需求都应该进行评审</p><p>检查方法以及类型</p><p><img src="/../img/demand/20-10.png"></p><p><img src="/../img/demand/20-11.png"></p><p><strong>（2）原型与模拟</strong></p><p><img src="/../img/demand/20-12.png"></p><p>（3）开发测试用例</p><p>以需求为线索，开发测试用例套件；</p><p>使用测试技术确定输入&#x2F;输出数据，开发测试用例</p><p><strong>（4）用户手册编制</strong></p><p>验证功能需求</p><ul><li>对软件系统功能和实现的描述</li></ul><p>验证项目范围</p><ul><li>对系统没有实现的功能的描述</li></ul><p>验证异常流程需求</p><ul><li>问题和故障的解决</li></ul><p>验证环境与约束需求</p><ul><li>系统的安装和启动</li></ul><p><strong>（4）利用跟踪关系</strong></p><p>业务需求 to 用户需求 to 系统需求</p><p>如果业务需求和用户需求没有得到后项需求（用户需求和系统需求）的充分支持，那么软件需求规格说明文档就存在不完备的缺陷。</p><p>系统需求 to 用户需求 to 业务需求</p><p>如果不能依据跟踪关系找到一条系统需求的前项用户需求和前项业务需求，那么该需求就属于非必要的需求。</p><p><strong>（5）自动化分析</strong></p><h2 id="问题的修正"><a href="#问题的修正" class="headerlink" title="问题的修正"></a>问题的修正</h2><p>需求澄清（Requirements Clarification）</p><ul><li><p>理解偏差：重新进行分析工作</p></li><li><p>分析遗漏：重新分析和文档化这部分信息</p></li><li><p>表达不当：重新以合适的方式表达</p></li></ul><p>缺失需求</p><ul><li>重新执行需求获取等一系列工作</li></ul><p>需求冲突</p><ul><li>协商解决</li></ul><p>不切实际的期望</p><ul><li>项目调整与需求协商</li></ul><h1 id="需求管理"><a href="#需求管理" class="headerlink" title="需求管理"></a>需求管理</h1><h2 id="任务与活动"><a href="#任务与活动" class="headerlink" title="任务与活动"></a>任务与活动</h2><p><img src="/../img/demand/20-13.png"></p><p><strong>（1）需求基线</strong></p><p>已经通过正式评审和批准的规格说明或产品，它可以作为进一步开发的基础，并且只有通过正式的变更控制过程才能修改它</p><p>是被明确和固定下来的需求集合，是项目团队需要在某一特定产品版本中实现的特征和需求集合</p><p><img src="/../img/demand/20-15.png"></p><p><img src="/../img/demand/20-16.png"></p><p><img src="/../img/demand/20-17.png"></p><p><strong>（2）需求跟踪</strong></p><p>避免在开发过程或者演化过程中与需求基线不一致或者偏离的风险</p><p>前向跟踪是指被定义到软件需求规格说明文档之前的需求</p><p>演化过程</p><ul><li>向前跟踪到需求：说明涉众的需要和目标产生了哪些软件需求</li><li>从需求向后回溯：说明软件需求来源于哪些涉众的需要和目标</li></ul><p>后向跟踪是指被定义到软件需求规格说明文档之后的需求</p><p>演化过程</p><ul><li><p>从需求向前跟踪：说明软件需求是如何被后续的开发物件支持和实现的</p></li><li><p>回溯到需求的跟踪：说明各种系统开发的物件是因为什么原因（软件需求）而被开发出来的</p></li></ul><h2 id="需求管理的实现方法"><a href="#需求管理的实现方法" class="headerlink" title="需求管理的实现方法"></a>需求管理的实现方法</h2><p>矩阵、关系实体模型交叉引用</p><h1 id="需求变更"><a href="#需求变更" class="headerlink" title="需求变更"></a>需求变更</h1><h2 id="需求变更的类型"><a href="#需求变更的类型" class="headerlink" title="需求变更的类型"></a>需求变更的类型</h2><p><strong>（1）变更控制过程</strong></p><p>以可控、一致的方式进行需求基线中需求的变更处理，包括对变化的评估、协调、批准或拒绝、实现和验证</p><p> <strong>（2）变更控制委员会</strong> </p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>1.认识到变更的必要性，并为之制定计划</p><p>2.维护需求基线，审计变更记录</p><p>3.管理范围蔓延</p><p>4.灵活应对变更请求</p><p>5.使用辅助工具</p>]]></content>
    
    
    <categories>
      
      <category>demand</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Demand9_DemandSpecification</title>
    <link href="/2024/01/08/demand9/"/>
    <url>/2024/01/08/demand9/</url>
    
    <content type="html"><![CDATA[<h1 id="需求规格说明"><a href="#需求规格说明" class="headerlink" title="需求规格说明"></a>需求规格说明</h1><p>pre:</p><p><strong>需求获取</strong></p><p>目标是得到用户需求——收集需求信息</p><p><strong>需求分析</strong></p><p>目标是更深刻的理解用户需求——界定能够让用户<br>满意的解决方案准则</p><p><strong>需求规格说明</strong></p><p>目标是定义用户需求——准确描述需求及其解决方<br>案</p><h2 id="需求规格说明的作用"><a href="#需求规格说明的作用" class="headerlink" title="需求规格说明的作用"></a>需求规格说明的作用</h2><p>更好的传递软件系统的需求信息和解决方案给<br>所有的开发者</p><h2 id="如何写好需求说明文档——模板的选择与剪裁"><a href="#如何写好需求说明文档——模板的选择与剪裁" class="headerlink" title="如何写好需求说明文档——模板的选择与剪裁"></a>如何写好需求说明文档——模板的选择与剪裁</h2><p>优秀的文档</p><ul><li><p>结构组织</p></li><li><ul><li>复用：模版</li></ul></li><li><ul><li>选择与裁剪</li></ul></li><li><p>文字写作</p></li><li><ul><li>字词、句法</li></ul></li><li><ul><li>写作技巧</li></ul></li></ul><p><img src="/../img/demand/20-3.png"></p><h3 id="具体的示例"><a href="#具体的示例" class="headerlink" title="具体的示例"></a>具体的示例</h3><p><img src="/../img/demand/20-4.png"></p><p><img src="/../img/demand/20-5.png"></p><p><img src="/../img/demand/20-6.png"></p><p><img src="/../img/demand/20-7.png"></p><p><img src="/../img/demand/20-8.png"></p><p>…</p><h3 id="文档写作技巧——原则"><a href="#文档写作技巧——原则" class="headerlink" title="文档写作技巧——原则"></a>文档写作技巧——原则</h3><p>文档化的目标是交流</p><ul><li><p>简洁、易读 &amp; 严格、准确</p></li><li><p>不要机械的照搬某些标准和规</p></li></ul><h3 id="文档写作技巧——组织结构"><a href="#文档写作技巧——组织结构" class="headerlink" title="文档写作技巧——组织结构"></a>文档写作技巧——组织结构</h3><p>所有内容位置得当</p><p>引用或者强化但是不重复</p><h3 id="文档写作技巧——表达方式"><a href="#文档写作技巧——表达方式" class="headerlink" title="文档写作技巧——表达方式"></a>文档写作技巧——表达方式</h3><p>形式依赖内容</p><p>使用系统的表达方式</p><h3 id="文档写作技巧——细节描述"><a href="#文档写作技巧——细节描述" class="headerlink" title="文档写作技巧——细节描述"></a>文档写作技巧——细节描述</h3><p>定义术语表或者数据字典</p><p>避免干扰文本</p><p>避免歧义词汇</p><h3 id="优秀需求规格说明文档的特性"><a href="#优秀需求规格说明文档的特性" class="headerlink" title="优秀需求规格说明文档的特性"></a>优秀需求规格说明文档的特性</h3><p><strong>完备性</strong></p><p>（1）标准 </p><p>描述了用户的所有有意义的需求，包括功能、性能、约束、质量属性和对外接口。</p><p>定义了软件对所有情况的所有实际输入（无论有效输入还是无效输入）的响应。</p><p>为文档中的所有插图、图、表和术语、度量单位的定义提供了完整的引用和标记。</p><p>（2）前景和范围</p><p>（3）TBD问题</p><p><strong>一致性</strong></p><p>（1）标准</p><p>细节的需求不能同高层次的需求相冲突，例如系统需求不能和业务需求、用户需求互相矛盾</p><p>同一层次的不同需求之间也不能互相冲突</p><p>（2）评审</p><p>（3）自动化检查</p><p><strong>根据重要性和稳定性分级</strong></p><p>（1） 建立需求的优先级</p><p><strong>可修改</strong></p><p>（1）标准</p><p>它的结构和风格使得人们可以对其中任一需求进行容易地、完整地、一致地修改，同时还不会影响文档现有的结构和风格</p><p>（2）文档的可修改性要求：</p><p>有着条理分明并且易于使用的组织方式，包括目录、索引和显式的交叉引用.</p><p>没有重复冗余。</p><p>独立表达每个需求，而不是和其他需求混在一起。</p><p><strong>可跟踪</strong></p><p>（1）前向跟踪（Pre-traceability）</p><ul><li>能找到需求的来源，例如和更早期文档的显式关联。</li></ul><p>（2）后向跟踪（Post-traceability）</p><p>能找到需求所对应的设计单元、实现源代码和测试用例等，它要求每个需求都要有唯一的标识或者可供引用的名称</p>]]></content>
    
    
    <categories>
      
      <category>demand</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Demand8_DemandAnalysis</title>
    <link href="/2024/01/08/demand8/"/>
    <url>/2024/01/08/demand8/</url>
    
    <content type="html"><![CDATA[<h1 id="需求分析的根本任务"><a href="#需求分析的根本任务" class="headerlink" title="需求分析的根本任务"></a>需求分析的根本任务</h1><p>保证需求完整性与一致性将目标、功能与约束映射为系统行为，建立系统模型并分析，识别并修复不一致缺陷，发现并弥补遗漏的需求</p><p><img src="/../img/demand/20-1.png"></p><p>主要分为</p><p><strong>（1）建立分析模型</strong></p><p>将复杂的系统分解成为简单的部分以及它们之间的联系，确定本质特征</p><p>和用户达成对信息内容的共同理解</p><p>分析的活动主要包括识别、定义和结构化，它的目的是获取某个可以转换为知识的事物的信息</p><p><strong>（2）创建解决方案</strong></p><p>将一个问题分解成独立的、更简单和易于管理的子问题来帮助寻找解决方案</p><p>创建解决方案的过程是创造性的</p><p>帮助开发者建立问题的定义，并确定被定义的事物之间的逻辑关系</p><h2 id="建立分析模型"><a href="#建立分析模型" class="headerlink" title="建立分析模型"></a>建立分析模型</h2><p><strong>软件分析模型</strong></p><p>介于计算模型和业务模型二者之间的模型形式</p><p>使用了计算模型的组元形式</p><p>在组元的表现上采用了业务模型的表现方式</p><p><strong>半形式化的</strong></p><p>不像计算模型那么严谨（ER图、代码等）</p><p>比业务模型更严格（场景用例模型）</p><p><img src="/../img/demand/20-2.png"></p><h2 id="需求分析的方法"><a href="#需求分析的方法" class="headerlink" title="需求分析的方法"></a>需求分析的方法</h2><p>结构化方法</p><p>面向对象方法</p><h2 id="需求分析的活动"><a href="#需求分析的活动" class="headerlink" title="需求分析的活动"></a>需求分析的活动</h2><p><strong>（1）需求细化</strong></p><p>明确用户需求的隐含因素（从而方式开发者各自假设所造成的不一致）</p><ul><li><p>将从问题域和业务的角度表述的用户需求等价的转化为从软件和技术的角度表述的系统需求</p></li><li><p>非功能需求也需要从高层次的表述方式转化为一系列更加详细和具体的需求表述</p></li></ul><p>需求细化也会发现新的细节需求</p><ul><li><p>需求已经得了充分的理解，并且开发者已经可以着手为其进行方案设计时停止细化过程</p></li><li><p>细化后的需求应该被一一的标识和记录下来</p></li></ul><p>具体的记录方法：</p><p>标识符（ID），每一条需求都应该能够通过ID唯一的标识自己。</p><p>源头（Source），要能够回溯到需求的源头，例如特定的涉众。</p><p>理由（Rational），需求被提出的目的。</p><p>优先级（Priority），详细情况见下一节。</p><p>成本（Cost），预估的实现成本。</p><p>风险（Risk），实现该需求的过程中可能带来的风险。</p><p>可变性（Volatility），将来发生变化的可能性。</p><p><strong>(2)确定需求的优先级别</strong></p><p>累计投票</p><p>区域划分：</p><ul><li><p>重要性。需求的不可或缺程度。</p></li><li><p>紧急性。需求的时间紧迫程度。</p></li><li><p>惩罚性。忽略需求会导致的惩罚程度。</p></li><li><p>成本。实现需求的代价。</p></li><li><p>风险。需求实现中可能产生的风险程度</p></li></ul><p>优先级的数据量化</p><p>$优先级&#x3D; \Large \frac{价值}{成本% \times 成本权值+  风险% \times 风险权值}$</p><p><strong>(3)需求协商</strong></p>]]></content>
    
    
    <categories>
      
      <category>demand</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Demand7_DemandAcquisition</title>
    <link href="/2024/01/08/demand7/"/>
    <url>/2024/01/08/demand7/</url>
    
    <content type="html"><![CDATA[<h1 id="需求获取的非平凡性"><a href="#需求获取的非平凡性" class="headerlink" title="需求获取的非平凡性"></a>需求获取的非平凡性</h1><ul><li><p>普通用户和开发人员的背景不同，立场不同</p></li><li><p>普通用户缺乏概括性，综合性的表述能力了</p></li><li><ul><li>开发人员与用户接触之前就先行确定获取的内容主题（上半场）然后设计具体的应用环境和场景条件，由用户根据细节业务的执行来描述问题，表达期望（下半场）</li></ul></li><li><p>用户存在认知困境</p></li><li><p>用户越俎代庖</p></li><li><p>缺乏用户参与</p></li></ul><h1 id="为什么要确定项目的前景和范围"><a href="#为什么要确定项目的前景和范围" class="headerlink" title="为什么要确定项目的前景和范围"></a>为什么要确定项目的前景和范围</h1><p>方法：</p><p>定义项目背景</p><p>所有的涉众都从共同认同的项目前景出发，理解和描述问题域以及需求</p><p>定义项目范围</p><p>范围内的事物和实践是描述的目标</p><p><img src="/../img/demand/14-1.png"></p><h1 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h1><h2 id="获取并且明确问题"><a href="#获取并且明确问题" class="headerlink" title="获取并且明确问题"></a>获取并且明确问题</h2><p><strong>（1）收集问题并且针对问题达成共识</strong></p><ul><li><p>收集背景资料或者涉众沟通来实现</p></li><li><p>收集背景资料时候要收集业务描述以及其统计数据关注业务困难与问题，与受众的沟通主要通过面谈</p></li></ul><p><strong>（2）收集背景资料，并且判断问题的明确性</strong></p><ul><li>易于理解&amp;证明指明解决的方向</li></ul><p><strong>（3）分析不明确的问题，发现问题背后的问题</strong></p><ul><li><p>直接咨询涉众是第一选择</p></li><li><p>利用收集的资料和业务数据是第二选择</p></li></ul><p><img src="/../img/demand/14-2.png"></p><h1 id="目标分析、"><a href="#目标分析、" class="headerlink" title="目标分析、"></a>目标分析、</h1><h2 id="目标的类别"><a href="#目标的类别" class="headerlink" title="目标的类别"></a>目标的类别</h2><p>功能目标（Functional Goal）</p><ul><li>描述预期的系统行为</li><li>满足型目标（Satisfaction Goal）和信息型目标（Information Goal）</li></ul><p>非功能目标（Non-functional Goal）</p><ul><li><p>常见的是质量目标（Quality goals）和约束目标（Constraint goals）</p></li><li><ul><li>安全目标（Safety Goal）、性能目标（Performance Goal）、可用性目标（Usability Goal）等等</li></ul></li></ul><p>软目标（Soft Goal）和硬目标（Hard Goal）</p><ul><li>能否利用技术手段确认是否满足</li></ul><p>实现目标（Achieve Goal，对应终止目标Cease Goal）、维护目标（Maintain Goal，对应避免目标Avoid Goal）和 优化目标（Optimize Goal）</p><h2 id="目标规格的基本模式"><a href="#目标规格的基本模式" class="headerlink" title="目标规格的基本模式"></a>目标规格的基本模式</h2><p>实现（Achieve）：P ⇒ ◊ Q &#x2F;&#x2F;如果将来某一时刻Q为真（被满足），则目标实现</p><p>终止（Cease）： P ⇒ ◊ ¬ Q &#x2F;&#x2F;如果将来某一时刻Q为假（被终止），则目标实现</p><p>保持（Maintain）： P ⇒ □Q &#x2F;&#x2F;将来任一时刻Q都为真，则目标实现</p><p>避免（Avoid）： P ⇒ □¬ Q &#x2F;&#x2F;将来任一时刻Q都为假，则目标实现</p><p>优化（Optimize）：最大化Maximize (目标功能) 或 最小化Minimize (目标功能</p><h2 id="目标分析过程"><a href="#目标分析过程" class="headerlink" title="目标分析过程"></a>目标分析过程</h2><p><img src="/../img/demand/14-3.png"></p><h2 id="目标模型的关系与分析过程"><a href="#目标模型的关系与分析过程" class="headerlink" title="目标模型的关系与分析过程"></a>目标模型的关系与分析过程</h2><p>精化关系</p><p>阻碍关系</p><p>支持与冲突关系</p><h3 id="目标精化"><a href="#目标精化" class="headerlink" title="目标精化"></a>目标精化</h3><p><strong>一个高层次目标G可以化为低层次目标G1，G2。。如果的完成有助于目标G的完成，那么G与各个子目标之间就是AND精化关系，如果字母表的完成能够直接保证G的完成，那么G与子目标之间就是完备AND精化关系</strong></p><p><strong>如果任一子目标Gi都是G的替代方案，那么G与{G1,G2,…,Gn}之间就是OR 精化关系。此时，任意两子目标Gi与Gj之间是互相替代的。</strong></p><h3 id="目标的精化——目标模型的重要任务之一（Goal-oriented-gt-agent-oriented）"><a href="#目标的精化——目标模型的重要任务之一（Goal-oriented-gt-agent-oriented）" class="headerlink" title="目标的精化——目标模型的重要任务之一（Goal-oriented-&gt;agent-oriented）"></a>目标的精化——目标模型的重要任务之一（Goal-oriented-&gt;agent-oriented）</h3><p>目标的达成需要主体（agent）的参与</p><p>越是抽象，粗粒度，范围广的目标，参与的主体越多</p><p>当一个不断被精化的目标达到：</p><ul><li><p>只包含由待开发软件系统的部分明确功能——任务（要求）</p></li><li><p>主体只有系统环境中的一个对象（例如用户）——角色</p></li><li><p>同一个被充分精化的目标上的角色和任务之间可以建立用例图联系</p></li></ul><p>AND 实心 OR 空心</p><h4 id="目标阻碍"><a href="#目标阻碍" class="headerlink" title="目标阻碍"></a>目标阻碍</h4><p>如果子目标O的达成会使得高层次目标G失败那么O和G之间就是阻碍关系</p><p>阻碍目标也可以继续AND精化，OR精化</p><p>阻碍目标最主要的作用：范阳的目标更加容易精化</p><p>阻碍关系本身是一种特殊的精化——反向精化</p><h3 id="目标的支持与冲突——目标模型的重要任务之二"><a href="#目标的支持与冲突——目标模型的重要任务之二" class="headerlink" title="目标的支持与冲突——目标模型的重要任务之二"></a>目标的支持与冲突——目标模型的重要任务之二</h3><p>多个目标之间的关系：Support &amp; Conflict</p><ul><li><p>Support链接表示一个目标对于其他目标的支持作用</p></li><li><ul><li>支持关系剋被处理为OR精化关系</li></ul></li><li><p>Conflict链接表示实现一个目标对于其他的目标具有阻碍作用</p></li></ul><h3 id="发现方法"><a href="#发现方法" class="headerlink" title="发现方法"></a>发现方法</h3><p><strong>发现AND精化关系：</strong></p><ul><li><p>同一个目标由不同的场景：每个Gi代表一个典型场景，任意的Gi与Gj代表不同的场景</p></li><li><p>完成目标有连续的过程：每个Gi代表G完成过程中的一个状态，Gi，Gi+1代表两个连续的状态</p></li><li><p>完成目标需要有多个方面紧密配合：GiGj紧密联系或者相互支持</p></li><li><p>目标有不同质量环境以及表现：每个Gi代表不同质量要求下的G的完成</p></li></ul><p><strong>发现OR精化关系</strong></p><ul><li>多种可以相互替代的“候选办法”</li></ul><h3 id="目标精化-1"><a href="#目标精化-1" class="headerlink" title="目标精化"></a>目标精化</h3><p>考虑阻碍目标实现的情况</p><p>考虑已有目标之间的支持与冲突关系</p><p>对于高层目标问how，对于底层目标问why，建立层次结构。</p><h3 id="目标精化的结束条件与约束"><a href="#目标精化的结束条件与约束" class="headerlink" title="目标精化的结束条件与约束"></a>目标精化的结束条件与约束</h3><p>子目标展开到单一事物的时候终止</p><ul><li><p>主体与系统的一次协作活动</p></li><li><ul><li>或者一系列活动，要么全部成功，要门全部失败</li></ul></li><li><ul><li>确认这些单一事物能够增加业务价值</li></ul></li></ul><p>单个事物可以被进一步展开为场景（任务-》单个任务的描述）</p><p>注意识别目标隐含的</p><ul><li><p>假设依赖与约束</p></li><li><ul><li>市场规则，特定场景限定</li></ul></li><li><ul><li>市场与环境假设，业务过程假设</li></ul></li><li><ul><li>资源依赖</li></ul></li><li><p>质量属性</p></li></ul><h3 id="目标实现"><a href="#目标实现" class="headerlink" title="目标实现"></a>目标实现</h3><p>将最底层的目标分配给主体（人+系统）</p><p>设计实现最底层目标的操作</p><h1 id="业务过程分析"><a href="#业务过程分析" class="headerlink" title="业务过程分析"></a>业务过程分析</h1><h2 id="活动图"><a href="#活动图" class="headerlink" title="活动图"></a>活动图</h2><p>(1)确定活动图的上下文环境</p><p>(2)分析业务流程中的主要处理步骤</p><p>(3)分析业务流程中的主要数据流</p><p>(4)识别参与者，进行职责分配，将业务流程的处理步骤划分到不同的用到，并且将处理步骤和数据流的传递组织起来，建立活动图</p><p>(5)添加活动图的详细信息，完善活动图描述</p><p>案列分析</p><p>行为识别</p><p>对象流</p><p>协同点</p><p>细化点</p><h2 id="基于用例-x2F-场景模型展开用户需求获取"><a href="#基于用例-x2F-场景模型展开用户需求获取" class="headerlink" title="基于用例&#x2F;场景模型展开用户需求获取"></a>基于用例&#x2F;场景模型展开用户需求获取</h2><p><strong>需求获取的前半段：确定项目前景与范围</strong></p><p><strong>续期获取的后半段：以场景&#x2F;用例模型展开获取</strong></p><p>三大要素：确定范围，模型与流程，获取方法</p><p>注意：</p><p>(1)要保持项目范围，不能有需求遗漏</p><p>(2)多轮次获取</p><p>(3)根据内容合理安排获取方法</p><p>(4)及时组织已经获取的需求，为后续获得提供指导</p><h3 id="多轮次获取要点"><a href="#多轮次获取要点" class="headerlink" title="多轮次获取要点"></a>多轮次获取要点</h3><p>前景与范围阶段</p><p>准备：背景资料的获取与分析</p><p>第一轮：问题分析（深入）</p><p>第二轮：高层解决方案的制定</p><p>用户需求获取阶段：</p><p>准备：明确主题和内容，准备材料</p><p>第一轮：明确任务与任务中的主要问题</p><p>第二轮：明确任务细节，澄清任务困难（技巧困难）</p><p>第三轮：明确解决方案</p><h3 id="获取方法安排"><a href="#获取方法安排" class="headerlink" title="获取方法安排"></a>获取方法安排</h3><p>常规方法：<strong>面谈</strong></p><ul><li><p>与用户创造地交流，充分发挥用户的潜在想法**</p></li><li><ul><li>集体面谈：快速方法</li></ul></li><li><ul><li>调查表：用户分散</li></ul></li><li><ul><li>头脑风暴：“发明需求”</li></ul></li></ul><p>不确定性：<strong>原型</strong></p><ul><li>帮助消除用户或者是工程师想法中地不确定性</li></ul><p>情景性：<strong>观察</strong></p><p>需求工程师晴子观察并且发掘情景性的需求 </p><h3 id="用户需求的组织"><a href="#用户需求的组织" class="headerlink" title="用户需求的组织"></a>用户需求的组织</h3><p>需求获取内容的处理？</p><ul><li><p>获取笔录：权宜之计</p></li><li><ul><li>用户需求+问题域特性&amp;混杂，不清晰</li></ul></li></ul><p>模型驱动方法（场景&#x2F;用例模型）</p><ul><li><p>整理和归纳需求获取行为得到的信息（框架）</p></li><li><p>指导和组织需求获取行为的开展</p></li><li><p>为详细信息和分析提供背景基础和上下文知识</p></li><li><p>用例与场景</p></li><li><ul><li>场景为单位</li></ul></li><li><ul><li>问题域特性 或者 用户需求+问题域特性</li></ul></li><li><ul><li>组织清晰</li></ul></li></ul><h4 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h4><p>人与外部世界随着实践变化的交互与结果</p><h4 id="用例"><a href="#用例" class="headerlink" title="用例"></a>用例</h4><ul><li>相关场景集合的叙述性的文本描述（讲故事）</li></ul><p>UML将用例定义为“在系统或者子系统或者类和外界对象的交互当中所执行的行为序列的描述，包括各种不同的序列和错误的序列，他们能够联合提供一种有价值的服务</p><p><img src="/../img/demand/14-4.png"></p><h1 id="什么是涉众"><a href="#什么是涉众" class="headerlink" title="什么是涉众"></a>什么是涉众</h1><p>两种类型</p><p>人脑外知识：问题域内的科学规律</p><p>人脑内知识：困难，有很多问题</p><ul><li><p>如何寻找有效的人</p></li><li><p>如何和他们进行交流</p></li><li><p>通过与人交流补充对于客观的问题域的认知，了解软件用户诉求的主观目标</p></li></ul><p><strong>涉众是所有能够影响软件系统的实现，或者会被实现后软件系统所影响的，关键的人和团体（stakeholder）</strong></p><p>涉众分析围绕一个组织的各个部门内的员工所负责的业务展开</p><p>此类涉众分析的难度随着组织机构的复杂性和不确定性的增长而增加</p><p><img src="/../img/demand/15-1.png"></p><h2 id="涉众识别的基本原则"><a href="#涉众识别的基本原则" class="headerlink" title="涉众识别的基本原则"></a>涉众识别的基本原则</h2><p>涉众类别需要细分，发现所有的类别</p><ul><li>每一类涉众的所有成员都能够一直，稳定的从相同的立场，相同的视角来看待相同的软件系统</li></ul><p>发现比较关键的涉众：</p><ul><li>如果互动以及其关注点属于项目的目标与范围，那么涉众就属于关键涉众</li></ul><p>涉众群体不是固定不变的，需要持续维护</p><h2 id="识别涉众的方法"><a href="#识别涉众的方法" class="headerlink" title="识别涉众的方法"></a>识别涉众的方法</h2><p><strong>简单方法：线膨胀后收缩（Expand -&gt;Shrink）</strong></p><ul><li>尽可能列出涉众后尝试合并，易用但是可能有遗漏</li></ul><p><strong>经典方法：涉众网络</strong></p><ul><li><p>从最容易发现的涉众（客户，管理者，投资人）出发</p></li><li><p>与初始涉众一起“膨胀-收缩”，集体确定关键涉众列表，再请列表中的型代表加入讨论，指导列表稳定</p></li></ul><p><strong>经验方法：检查列表（Checklist）</strong></p><h3 id="利用主体依赖模型（ADM）分析涉众互动-识别关键涉众类别"><a href="#利用主体依赖模型（ADM）分析涉众互动-识别关键涉众类别" class="headerlink" title="利用主体依赖模型（ADM）分析涉众互动,识别关键涉众类别"></a>利用主体依赖模型（ADM）分析涉众互动,识别关键涉众类别</h3><p>目标依赖</p><p>软目标依赖</p><p>任务依赖</p><p>资源依赖</p><h2 id="涉众描述"><a href="#涉众描述" class="headerlink" title="涉众描述"></a>涉众描述</h2><p>1，根据软件系统的功能前景寻找涉众</p><p>2，从涉众对象那里获得需求</p><p>3，分析涉众的输赢条件，试试共赢策略</p><p>4，涉众对于系统的影响力：了解涉众实现，监控和评估软件系统的能力，分析涉众的力量和影响范围；了解涉众实现，监控和评估软件系统的意愿，即分析涉众的关注点和兴趣取向</p><p>5，了解涉众的个人和工作特征，以便在涉众固定的情况下对软件系统的功能进行合理的恶整理</p><h3 id="涉众的简单描述"><a href="#涉众的简单描述" class="headerlink" title="涉众的简单描述"></a>涉众的简单描述</h3><p>个人特征</p><p>工作特征</p><p>地理和社会特征</p><h3 id="涉众深度信息描述"><a href="#涉众深度信息描述" class="headerlink" title="涉众深度信息描述"></a>涉众深度信息描述</h3><p>对项目关注点和新区所在，态度是反对还是赞同</p><p>对项目的期望，成为项目赢家的条件</p><p>对可能受到的项目的影响，影响的具体内容以及影响程度</p><p>可以对项目影响，力量的施加点以及其强度</p><h2 id="涉众评估"><a href="#涉众评估" class="headerlink" title="涉众评估"></a>涉众评估</h2><p><img src="/../img/demand/15-8.png"></p><h3 id="优先级评估-Power-Interest"><a href="#优先级评估-Power-Interest" class="headerlink" title="优先级评估(Power-Interest)"></a>优先级评估(Power-Interest)</h3><p>涉众并不是完全平等的有些涉众比其他涉众更加重要</p><p>优先考虑涉众的基本特征，尤其是（涉众所完成的）任务特征 </p><h3 id="风险评估-Power-Attitude"><a href="#风险评估-Power-Attitude" class="headerlink" title="风险评估(Power-Attitude)"></a>风险评估(Power-Attitude)</h3><h3 id="共赢分析"><a href="#共赢分析" class="headerlink" title="共赢分析"></a>共赢分析</h3><p>Stakeholder&#x2F;Issue</p><p><img src="/../img/demand/15-7.png"></p><p>列出系统所有涉众类别，明确他们的兴趣和对系统的期望</p><p>从涉众门的兴趣和期望中发现背后涉及的共同问题</p><p>建立涉众类别的问题的关联，如果某个涉众类别对于一个Issue存在兴趣那么该涉众类别就和这个Issue存在关联关系</p><p>对于每一个Stakeholder-Issue关系，标明该关系上面所被给予的期望</p><p><strong>如果某个关系所给予的期望与项目的业务需求无法保持一致，那么其关联的涉众在该Issue上与项目整体目标存在冲突</strong></p><p><strong>如果Stakeholder&#x2F;Issue关系图中某个Issue所关联的不同关系标识有互相冲突的期望，那么就意味着它所关联的涉众在该Issue上存在需求冲突</strong></p><p>分析各冲突方成为项目赢家的条件 </p><p>适当的调整, 化解冲突 </p><p>分析项目在该Issue上的目标、约束和可选方案，并提供给冲突方进行权衡，促进他们之间协商解决 </p><h1 id="涉众代表选择"><a href="#涉众代表选择" class="headerlink" title="涉众代表选择"></a>涉众代表选择</h1><p>（1）代表采样</p><p>完整采样：每种涉众类别都有自己的代表</p><p>态度积极：愿意提供帮助</p><p>数量适中：</p><p>比例恰当</p><p>（2）用户替代源，因为业务关系和用户频繁接触的人，能够代替他们发表看法</p><h1 id="明确参与策略"><a href="#明确参与策略" class="headerlink" title="明确参与策略"></a>明确参与策略</h1><p>建立和用户的直接联系</p><p>用户参与软件系统开发的整个过程</p><h1 id="面谈"><a href="#面谈" class="headerlink" title="面谈"></a>面谈</h1><p><img src="/../img/demand/15-2.png"></p><h2 id="面谈的过程"><a href="#面谈的过程" class="headerlink" title="面谈的过程"></a>面谈的过程</h2><h3 id="准备面谈"><a href="#准备面谈" class="headerlink" title="准备面谈"></a>准备面谈</h3><p>（1）阅读背景资料</p><p>（2）确定面谈主题和目标</p><p>（3）选择被会见者</p><p>（4）通知被会见者：电话或者邮件等等正式的途径</p><p>（5）确定问题和类型</p><p><strong>面谈准备的关键:问题类型</strong></p><p>面谈的问题基本可以分为开放式问题和封闭式问题</p><p><strong>注意事项：</strong></p><p>前期：以开放式问题为主;决策层与专家为主;遵循问题到目标到解决方案路线;分析基本的涉众特点</p><p>后期：封闭式问题为主;抓住主题与线索;问题针对性;实现准备面谈记录才俩</p><h4 id="其他重要的问题类型"><a href="#其他重要的问题类型" class="headerlink" title="其他重要的问题类型"></a>其他重要的问题类型</h4><p>探究式问题</p><p>诱导性问题</p><p>双筒问题</p><p>元问题</p><h4 id="一些程序性提示"><a href="#一些程序性提示" class="headerlink" title="一些程序性提示"></a>一些程序性提示</h4><p>总结和反馈;重复和概述;建立场景和细节描述;抗辩</p><p><strong>面谈背后的要点：取得共情和目标的平衡</strong></p><h3 id="主持面谈"><a href="#主持面谈" class="headerlink" title="主持面谈"></a>主持面谈</h3><p><strong>开始</strong></p><p>建立一个理想的氛围和环境来促进会见者和被会见者之间的交流和沟通 </p><p><strong>主体</strong></p><p>通过提问和倾听来完成和被会见者的信息交流，按照计划控制面谈的进行，并在必要时进行适当的调整 </p><p><strong>结束</strong> </p><p>表示感谢并回答被会见者提出的问题。保持与被会见者的亲善和信任关系 </p><h3 id="面谈之后-处理面谈结果"><a href="#面谈之后-处理面谈结果" class="headerlink" title="面谈之后(处理面谈结果)"></a>面谈之后(处理面谈结果)</h3><p>复查面谈记录</p><p>总结面谈的信息</p><p>完成面谈报告</p><h1 id="面谈的类型"><a href="#面谈的类型" class="headerlink" title="面谈的类型"></a>面谈的类型</h1><p><strong>结构化面谈</strong>：安全按照事先的问题和结构来控制面谈</p><p><strong>半结构化面谈</strong>：实现需要根据面谈的内容准备面谈的问题和面谈结构，但是在面谈的过程中，会见者可以根据实际情况采取一些灵活的策略</p><p><strong>非结构化面谈</strong>：事先没有预定会议安排 甚至没有太多事前准备的情况下就直接见到被会见者 会见者和被会见者的谈话的主题可能非常广泛而且每个主题都不会特别深入 考验对于领域的理解，面谈技巧，整理笔录等等诸多能力</p><h2 id="面谈的优缺点"><a href="#面谈的优缺点" class="headerlink" title="面谈的优缺点"></a>面谈的优缺点</h2><p><strong>优点：</strong></p><p>开展条件比较简单，经济成本比较低</p><p>能够获得事实，问题，被会见者观点态度信仰等等各种信息在内的广泛内容</p><p>可以和涉众建立友好的关系</p><p>提高被会见者的项目参与热情</p><p><strong>缺点</strong></p><p>时间成本低</p><p>会谈可能难以实现</p><p>比较考研参与者的记忆交流能力和工程师的人际交流能力</p><p>模糊化表达甚至是错误表达不可避免</p><p>会见者要充分了解被会见者的认知结构</p><h2 id="相关方法"><a href="#相关方法" class="headerlink" title="相关方法"></a>相关方法</h2><p><strong>群体面谈</strong></p><p>群体面谈的方法是将所有的涉众方集中起来，选择一个合适的地点，集中一段时间，召开一个多方共同参与的会议，一起进行需求的讨论、分析和获取。</p><p><strong>调查问卷</strong></p><p>面谈方法以口头语言为主要的交流媒介，而调查问卷以文档为主要的交流媒介 </p><p><strong>头脑风暴</strong></p><p>它的目的不是发现需求，而是“发明”需求，或者说是发现“潜在”需求</p><p>它鼓励参与者在无约束的环境下进行某些问题的自由思考和自由讨论，以产生新的想法 </p><h1 id="原型"><a href="#原型" class="headerlink" title="原型"></a>原型</h1><p><strong>原型是一个系统，它内化了（capture）一个更迟系统（later system）的本质特征。原型系统通常被构造为不完整的系统，以在将来进行改进、补充或者替代。</strong>*</p><p><strong>如果在最终的物件（final artifact）产生之前，一个中间物件（mediate artifact）被用来在一定广度和深度范围内表现这个最终物件，那么这个中间物件就被认为是最终物件在该广度和深度上的原型。</strong> </p><p><strong>包括书面描绘、场景叙述、情节串联图板、幻灯演示、动画模拟、屏幕快照和程序代码等在内的各种被用来探索和论证软件系统功能的物件都是软件的原型</strong> </p><h2 id="为什么要使用原型"><a href="#为什么要使用原型" class="headerlink" title="为什么要使用原型"></a>为什么要使用原型</h2><p>软件工程中存在着大量的不确定性，原型、迭代和方法验证时人们解决不确定性的主要手段：需求的不确定性；设计的不确定性；构造的不确定性；测试的不确定性；管理的不确定性</p><h2 id="几种原型类型的介绍"><a href="#几种原型类型的介绍" class="headerlink" title="几种原型类型的介绍"></a>几种原型类型的介绍</h2><p><strong>探索式（exploratory）</strong> </p><p>以缺陷需求开始继而不断调整和修正需求的原型开发方式称为探索式，要尽可能的调整各种设计选项</p><p>演示原型（presentation prototype），严格意义上的原型（prototype proper） </p><p><strong>实验式（experimental）</strong> </p><p>以清晰的用户需求和模糊的实现方法、实现效果、可行性开始，明确需求的可行性和技术实现方案 </p><p>定义一个对原型的评估方法，确定评估的属性 </p><p>试验原型（breadboard prototype）</p><p><strong>演化式（evolutionary）</strong> </p><p>以清晰的原型化需求和项目积累下来的原型资产为开始</p><p>原型化的需求，也有项目积累下来的原型资产 </p><p>引示系统原型（pilot system prototype）</p><p><img src="/../img/demand/15-3.png"></p><h2 id="为什么要利用原型"><a href="#为什么要利用原型" class="headerlink" title="为什么要利用原型"></a>为什么要利用原型</h2><p>帮助需求工程师及早解决需求的不去而定</p><h2 id="原型方法以及过程"><a href="#原型方法以及过程" class="headerlink" title="原型方法以及过程"></a>原型方法以及过程</h2><p><img src="/../img/demand/15-4.png"></p><p><strong>（1）确定原型需求</strong></p><p>界定不确定性</p><ul><li><p>可能发生的需求变更</p></li><li><p>存在冲突的地方</p></li><li><p>信息不确定的地方</p></li></ul><p>明确不确定的维度：外观，角色，实现</p><ul><li><p>外观：用户对于原型物件的具体感觉体验，用户在使用原型物件的时候会看到什么听到什么，想到什么</p></li><li><p>角色时原型物件在用户工作中的价值</p></li><li><p>实现是原型物件完成功能的细节技术和方法</p></li></ul><p><strong>（2）原型开发</strong></p><p>将探索不确定功能的需求和原型构建得易于修改</p><p>让探索可行性原型收集充分的数据</p><p>控制开发成本</p><p><strong>（3）原型评估</strong></p><p>需要获取的评估者反馈</p><p>可以创建一些脚本指导评估者的体验活动</p><p>务必让合适的人从恰当的角度评估原型</p><p>观察评估人员使用的原型的过程</p><p><strong>（4）原型修正</strong></p><p>用户反馈与原计划相结合</p><p>易于修改</p><h2 id="抛弃式原型和演化式原型的使用要点"><a href="#抛弃式原型和演化式原型的使用要点" class="headerlink" title="抛弃式原型和演化式原型的使用要点"></a>抛弃式原型和演化式原型的使用要点</h2><p>探索式和实验式方法产生的原型产品又称之为抛弃式原型</p><ul><li><p>花费最小的代价，争取最快的速度 </p></li><li><p>可能会使用简易的开发工具和不成熟的构造技术 </p></li><li><p>可能会忽略或简化处理原型目的不相关的功能特征 </p></li><li><p>要坚决的抛弃</p></li></ul><p>演化式原型方法产生的原型产品被称之为演化式原型</p><ul><li><p>质量要从一开始就能达到最终系统的要求 </p></li><li><p>要易于进行扩展和频繁改进，因此开发者必须重视演化式原型的设计 </p></li><li><p>仅应该被用于处理清晰的需求、规格说明和技术方案</p></li></ul><h2 id="控制原型开发成本"><a href="#控制原型开发成本" class="headerlink" title="控制原型开发成本"></a>控制原型开发成本</h2><p><strong>(1) 控制抛弃式原型成本</strong></p><p>因为基于不确定的需求基础，所以抛弃式原型难免反复修改，导致代码质量较低，应该坚决抛弃</p><p>抛弃式原型的贡献不在于它的代码，而是它所包含的内容，它说明了正确的需求和正确的技术方案，如果认识不到这一点，他们就只能得到低质量的代码，而丢失真正宝贵的内容</p><p>控制抛弃式原型的成本</p><p><strong>（2）控制水平式原型成本</strong></p><p>水平原型方法（horizontal prototyping）:它仅仅实现选定功能所有层次中的某些特定层次 建立的原型产品称为水平原型（horizontal prototype） 要把注意力集中在概括性需求和工作流问题上 </p><p>垂直原型方法（vertical prototyping）:它会触及到选定功能实现的所有层次建立的原型产品称为垂直原型（vertical prototype） 要保证真实实现它的各种功能 </p><p>用尽可能低的成本开发水平原型</p><p><strong>(3) 用尽量简单的介质降低成本</strong></p><h2 id="原型的表现——故事板原型"><a href="#原型的表现——故事板原型" class="headerlink" title="原型的表现——故事板原型"></a>原型的表现——故事板原型</h2><p>将原来分散的功能与步骤组织成故事，让普通人能够更好地体验与评估，原型和用例&#x2F;场景通常结合使用[Mannio2001]：为需要探索和澄清的用例&#x2F;场景建立故事板原型，或者依据故事板原型的评估结果建立清晰、明确的用例&#x2F;场景描述</p><h3 id="故事板原型的构建"><a href="#故事板原型的构建" class="headerlink" title="故事板原型的构建"></a>故事板原型的构建</h3><p>明确故事板原型要素</p><ul><li><p>角色（Who）；</p></li><li><p>内容（What）；</p></li><li><p>方法（How）。</p></li></ul><p>建不同类型的故事板原型</p><ul><li><p>被动（Passive）故事板原型 - 连环画</p></li><li><p>主动（Active）故事板原型 – 漫画</p></li><li><p>交互（Interactive）故事板原型 – 网页</p></li></ul><h2 id="原型方法的风险"><a href="#原型方法的风险" class="headerlink" title="原型方法的风险"></a>原型方法的风险</h2><p>原型开发工作投入太多的工作，使得开发团队消耗了过多的时间和过大的成本 </p><p>涉众看到了一个正在运行的原型，得出产品几乎已经完成的结论，从而提出快速交付产品的不当要求 </p><p>不要将原型的功能开发的太好，以免用户提出“交付”的要求</p><p>用户可能会被原型所表现出来的非功能特性遮蔽了眼睛，从而忽略了他们更应该重视的功能特性 </p><p>在澄清需求不确定性的同时也可能会掩盖一些用户的假设，这些假设将会无从发现 </p><h1 id="观察"><a href="#观察" class="headerlink" title="观察"></a>观察</h1><h2 id="观察情景的适用性"><a href="#观察情景的适用性" class="headerlink" title="观察情景的适用性"></a>观察情景的适用性</h2><p>应用于用户无法完成主动的信息告知的情况下</p><ul><li><p>采样观察（Sampling Observation）</p></li><li><p>民族志（Ethnography）</p></li><li><p>话语分析（Discourse Analysis）</p></li><li><p>协议分析（Protocol Analysis）</p></li><li><p>任务分析（Task Analysis）</p></li></ul><p>某些事件只有和它们发生时的具体环境联系起来，才能得到理解 </p><ul><li><p>突现（Emergent）：集体促成 ，互动中突现 </p></li><li><p>局部（Local） ：特定的上下文环境 </p></li><li><p>暂时（Contingent） ：演进过程中的一刻</p></li><li><p>涉身（Embodied） ：参与者的认知和能力受限 </p></li><li><p>开放（Open） ：业务不确定并开放，以后完善</p></li><li><p>模糊（Vague） ：基于潜在知识，尚未明确表达</p></li></ul><h2 id="观察方法的应用"><a href="#观察方法的应用" class="headerlink" title="观察方法的应用"></a>观察方法的应用</h2><p>（1）采样观察</p><p><img src="/../img/demand/15-5.png"></p><p>（2）民族志</p><p><strong>优点</strong></p><ul><li><p>能够得到信息的深度理解 </p></li><li><p>能够让真实世界的社会性因素可见化 </p></li><li><p>打破人们已有的一些错误假设和错误观念</p></li></ul><p><strong>缺点</strong></p><ul><li><p>需要耗费很多的时间 </p></li><li><p>调研结果很难传递到开发过程</p></li></ul><p><strong>关注三个方面的内容：</strong></p><ul><li><p>工作的分布式协同（Distributed Coordination）</p></li><li><ul><li>要特别注意那些利用物件实现的协同和创建这些物件的文书工作</li></ul></li><li><p>工作的计划和程序（Plans and Procedures）</p></li><li><ul><li>关注它们在组织活动中的应用方式</li></ul></li><li><ul><li>发现实际工作和文档化程序之间存在的偏离</li></ul></li><li><p>工作的意识（Awareness of Work）</p></li><li><ul><li>活动是如何对协同中的其他人可见或者可理解的？</li></ul></li></ul><p><strong>规则</strong></p><p>应该定期的记录发现 </p><p>尽快的记录可能会在观察过程中发生的面谈 </p><p>定期的复查和更新自己的想法 </p><p>确定管理海量数据的应对策略 </p>]]></content>
    
    
    <categories>
      
      <category>demand</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Demand6_DemandIntroduction</title>
    <link href="/2024/01/08/demand6/"/>
    <url>/2024/01/08/demand6/</url>
    
    <content type="html"><![CDATA[<h1 id="需求的基本概念"><a href="#需求的基本概念" class="headerlink" title="需求的基本概念"></a>需求的基本概念</h1><h2 id="什么是需求"><a href="#什么是需求" class="headerlink" title="什么是需求"></a>什么是需求</h2><p>（1）用户为了解决问题或达到某些目标所需要的条件或能力；</p><p>（2）系统或系统部件为了满足合同、标准、规范或其它正式文档所规定的要求而需要具备的条件或能力；</p><p>（3）对（1）或（2）中的一个条件或一种能力的一种文档化表述。</p><h1 id="需求工作的基本过程"><a href="#需求工作的基本过程" class="headerlink" title="需求工作的基本过程"></a>需求工作的基本过程</h1><p><img src="/../img/demand/6-1.png"></p><h2 id="需求获取的基本活动"><a href="#需求获取的基本活动" class="headerlink" title="需求获取的基本活动"></a>需求获取的基本活动</h2><p>需求获取：系统原始需要</p><ul><li>研究应用环境，分析系统涉众，了解已有问题，建立系统目标，获取业务细节，生成用户需求</li></ul><p>需求分析：保证需求完整性与一致性（贯穿整个过程）</p><ul><li>将目标、功能与约束映射为系统行为，建立系统模型并分析（信息的细化与隐藏联系、假设的显式化），识别并修复不一致缺陷，发现并弥补遗漏的需求</li></ul><p>需求规约：将分析过的需求与系统行为明确并文档化</p><ul><li>自然语言+模型语言（UML）</li></ul><p>需求验证：保证需求分档的正确性、一致性、完整性</p><ul><li>最终产物为所有涉众一致同意的需求规约，是后续开发的基础</li></ul><p>需求管理：持续（时间、开发活动）管理需求基线</p><ul><li>跟踪后续阶段中的需求实现与变更，确保正确的理解与实现</li></ul><h1 id="需求的基本类型"><a href="#需求的基本类型" class="headerlink" title="需求的基本类型"></a>需求的基本类型</h1><h2 id="需求的层次性"><a href="#需求的层次性" class="headerlink" title="需求的层次性"></a>需求的层次性</h2><p><img src="/../img/demand/6-2.png"></p><p>制品：问题 to 目标 to 用户需求 to 系统级需求</p><ul><li><p>支撑：画布系统特性问题域知识（&amp;目标）分析模型</p></li><li><p>目标是商业目标</p></li><li><p>任务是用户任务</p></li><li><p>系统行为是用户与系统的交互软件解决方案</p></li></ul><h2 id="需求的分类"><a href="#需求的分类" class="headerlink" title="需求的分类"></a>需求的分类</h2><h3 id="业务需求"><a href="#业务需求" class="headerlink" title="业务需求"></a>业务需求</h3><p>系统建立的战略出发点，表现为高层次的目标（Objective），描述了组织为什么要开发系统</p><p>为了满足用户的业务需求，需求工程师需要描述系统高层次的解决方案（逐一细化），定义系统<br>应该具备的特性（System Feature，SF）</p><ul><li><p>参与各方必须要对高层次的解决方案达成一致，以建立一个共同的前景（Vision）</p></li><li><p>特性说明了系统为用户提供的各项功能，它限定了系统的范围（Scope）</p></li><li><p>项目的前景和范围明确了软件（某版本）的开发范畴</p></li><li><p>BR向SF的转化过程可以利用商业模式画布（问题域<br>知识）</p></li></ul><h3 id="用户需求"><a href="#用户需求" class="headerlink" title="用户需求"></a>用户需求</h3><p>执行实际工作的用户对系统所能完成的具体任务的期望，描述了系统能够帮助用户做些什么</p><ul><li>直接用户</li><li>间接用户：通用、公共服务软件等用户无法确定的系统</li></ul><p>基本表达方式：<strong>用户可以使用系统完成</strong>任务</p><ul><li><p>用户任务应是有价值的活动（客户洞察） ，并具有较强的目标性（细化的讲故事与场景）</p></li><li><p>对所有的用户需求，都应该有充分的问题域知识作为背景支持</p></li></ul><p>特性</p><ul><li><p>模糊、不清晰：允许使用形容词和副词</p></li><li><p>多特性混杂：允许混合功能和非功能性需求</p></li><li><p>多逻辑混杂：一条用户需求所代表的任务需多次系统交互才能完成</p></li><li><ul><li>需求开发阶段可视作从用户需要解决的问题到用户与系统的一系列交互的转化，此过程中用户的输入与获得的反馈不断精化，但系统本身仍被视作一个整体，留待后续设计阶段确定模块划分与结构</li></ul></li></ul><h3 id="系统级需求"><a href="#系统级需求" class="headerlink" title="系统级需求"></a>系统级需求</h3><p>用户对系统行为的期望，一系列的系统行为联系在一起可以帮助用户完成任务，满足业务需求</p><p>系统需求可以直接映射为系统行为（对应需求规格说明），定义了系统中需要实现的功能，描述了开发人员需要实现什么</p><p>将用户需求转化为系统需求的过程是一个复杂的过程</p><ul><li><p>首先需要分析问题领域及其特性，从中发现问题域和计算机系统的共享知识，建立系统的知识模型；</p></li><li><p>然后将用户需求部署到系统模型当中，即定义系列的系统行为，让它们联合起来实现用户需求，每一个系统行为即为一<br>个系统需求。</p></li><li><p>该过程就是需求工程当中最为重要的需求分析活动，又称建模与分析活动。</p></li></ul><h1 id="需求的常见类型"><a href="#需求的常见类型" class="headerlink" title="需求的常见类型"></a>需求的常见类型</h1><p>功能需求（Functional Requirement）：</p><ul><li>和系统主要工作相关的需求，即在不考虑物理约束的情况下，用户希望系统所能够执行的活动，这些活动可以帮助用户完成任务。功能需求主要表现为系统和环境之间的行为交互。</li></ul><p>性能需求（Performance Requirement）：</p><ul><li>系统整体或系统组成部分应该拥有的性能特征，例如CPU使用率、内存使用率等。</li></ul><p>质量属性（Quality Attribute）：</p><ul><li><p>系统完成工作的质量，即系统需要在一个“好的程度”上实现功能<br>需求，例如可靠性程度、可维护性程度等。</p></li><li><p>对外接口（External Interface）：</p></li><li><p>系统和环境中其他系统之间需要建立的接口，包括硬件接口、软件<br>接口、数据库接口等等。</p></li></ul><p>约束</p><ul><li>进行系统构造时需要遵守的约束，例如编程语言、硬件设施等</li></ul><p>其他</p><ul><li>数据需求等</li></ul><h2 id="功能需求"><a href="#功能需求" class="headerlink" title="功能需求"></a>功能需求</h2><p>是软件产生价值的基础</p><p>内容最多、最为复杂</p><ul><li>在所有需求中占比可达90%甚至更高。</li></ul><p>最需要按照BR（SF）、UR、SR三个层次进行展开</p><p>价值主张 – 关键业务 – 功能需求，一般可以用可视化、故事和场景进行描述</p><h2 id="性能需求"><a href="#性能需求" class="headerlink" title="性能需求"></a>性能需求</h2><p>速度（Speed），系统的响应时间。</p><ul><li>PR1：所有的用户查询都必须在10秒内完成。</li></ul><p>容量（Capacity），系统所能存储的数据量。</p><ul><li>PR2：系统应该能够存储至少10万条销售记录。</li></ul><p>吞吐量（Throughput），系统在连续的时间内完成的事务数量，例如。</p><ul><li>PR3：解释器每分钟应该至少解析5000条没有错误的语句。</li></ul><p>负载（Load），系统可以承载的并发工作量。</p><ul><li>PR4：系统应该允许200个用户同时进行正常的工作。</li></ul><p>实时性（Time-Critical），严格的实时要求。</p><ul><li>PR5：监测到病人异常后，监控器必须在0.5秒内发出警报。</li></ul><h2 id="质量属性"><a href="#质量属性" class="headerlink" title="质量属性"></a>质量属性</h2><p>系统为了满足规定的及隐含的所有要求而需要具备的要素称为质量（包含性能需求）</p><p>质量属性是为了度量质量要素而选用的特征</p><p>质量模型就是能够为质量需求的描述和评价提供工作基础的特征集及特征之间的联系</p><h3 id="质量属性的具体内容"><a href="#质量属性的具体内容" class="headerlink" title="质量属性的具体内容"></a>质量属性的具体内容</h3><p>可靠性（Reliability）：在规格时间间隔内和规定条件下，系统或部件执行所要求能力的能力</p><p>可用性（Availability）：软件系统在投入使用时可操作和可访问的程度或能实现其指定系统功能的概率</p><p>安全性（Security）：软件阻止对其程序和数据进行未授权访问的能力，未授权的访问可能是有意，也可能是无意</p><p>可维护性（Maintainability）：软件系统或部件能修改以排除故障、改进性能或其他属性或适应变更了的环境的容易程度，包括可修改性（Modifiability）和可扩展性（Extensibility）</p><p>易用性（Usability）：与用户使用软件所花费的努力及其对使用的评价相关的特性</p><h2 id="对外接口"><a href="#对外接口" class="headerlink" title="对外接口"></a>对外接口</h2><p>解系统和其他系统之间的软硬件接口</p><p>用户界面</p><p>通信接口</p><h2 id="约束"><a href="#约束" class="headerlink" title="约束"></a>约束</h2><p>总体上限制了开发人员设计和构建系统时的选择范围</p><ul><li><p>系统开发及运行的环境 包括目标机器、操作系统、网络环境、编程语言、数据库管理系统等。</p></li><li><p>问题域内的相关标准（商业模式评估） 包括法律法规、行业协定、企业规章等。</p></li><li><p>商业规则（商业模式设计） 用户在任务执行中的一些潜在规则也会限制开发人员设计和构建系统的选择范围</p></li></ul><h2 id="其他需求"><a href="#其他需求" class="headerlink" title="其他需求"></a>其他需求</h2><p>安装需求（例如OR1）、培训需求（OR2）、数据需求等</p><p>如果在功能需求中没有描述数据内容（例如SR3），就需要补充描述数据信息（例如DR1~DR2）</p>]]></content>
    
    
    <categories>
      
      <category>demand</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Demand5_BusinessModelDesign</title>
    <link href="/2024/01/07/demand5/"/>
    <url>/2024/01/07/demand5/</url>
    
    <content type="html"><![CDATA[<h1 id="商业模式设计总体介绍"><a href="#商业模式设计总体介绍" class="headerlink" title="商业模式设计总体介绍"></a>商业模式设计总体介绍</h1><p>工具，方法，思维</p><ul><li><p>作为一个设计师</p></li><li><p>设计师需要：专业的辅助工具以及方法，以及工作态度（thinking，思维）</p></li></ul><p>商务人士的每日工作：设计组织架构，战略，商业模式，流程以及项目</p><p>必须考虑复杂的因素：竞争对手，技术，法律环境，将设计工具与商业技巧（领域知识）相结合</p><p>需要想象“不存在的东西”，却往往要再非常严苛的条件下进行</p><ul><li><p>本书介绍的六种商业模式设计方法</p></li><li><p>客户洞察（customer insights），构思（ideation），视觉化思考（visual thinking），模型构建（prototyping），讲故事（storytelling）和场景（scenarios）</p></li></ul><h1 id="客户洞察"><a href="#客户洞察" class="headerlink" title="客户洞察"></a>客户洞察</h1><h2 id="根据客户洞察打造商业模式"><a href="#根据客户洞察打造商业模式" class="headerlink" title="根据客户洞察打造商业模式"></a>根据客户洞察打造商业模式</h2><p>客户视角是商业模式的知道性原则，客户的观点决定了我们选择怎样的价值主张，渠道，客户关系和收益来源。</p><ul><li><p>透彻的观察，发现情感的源泉，发现了内在内容，意义和本质</p></li><li><p>事实上，企业再市场上重金投入的产品，服务和商业模式往往会忽略客户的观点。</p></li><li><p>成功的创新需要深入理解客户的环境，日常工作，担忧和渴望</p></li></ul><p>客户洞察的难点</p><ul><li><p>透彻理解客户（“问题背后的问题”），需要人类学，社会学理论（笼统的人），以及与实地调研（具体的人）结合；</p></li><li><p>清楚了解企业当前关注哪个客户（的需要），忽略哪些客户（的需要），需要有所取舍</p></li></ul><p>辅助工具：移情图（Empathy Map）</p><ul><li><p>构建用户画像的易用原理（“素描”），可以导出，教学主张，渠道，客户关系，收入来源（画布价值端）</p></li><li><p>使用方式：罗列所有客户群体，挑选三个最有希望，选择一个作为分析对象</p></li><li><ul><li>分析前准备（为客户群体命名，标记含收入，婚姻状况等等再内的人口统计学特征）</li></ul></li></ul><h3 id="移情图"><a href="#移情图" class="headerlink" title="移情图"></a>移情图</h3><p>看：描述该客户在她所处的环境中所看到的东西</p><p>听：描述环境如何影响到这个客户</p><p>想&amp;感受：尝试勾勒你的客户思维的过程</p><p>说&amp;做：详细客户可能的言辞，或者公共场合的行为</p><p>痛点：已经遭受的挫折，正遇到的阻碍，怕承担的风险</p><p>收益：预期成就，成功衡量标准，实现目标所采用的策略。</p><h2 id="客户洞察补充：变需要为需求（人为核心）"><a href="#客户洞察补充：变需要为需求（人为核心）" class="headerlink" title="客户洞察补充：变需要为需求（人为核心）"></a>客户洞察补充：变需要为需求（人为核心）</h2><p>洞察力是设计思维的关键来源之一</p><ul><li>重视人的行为，而不是judge</li></ul><p>从设计到设计思维的演化，本质上由创造产品烟花到分析人与产品的关系，进而烟花到人与人的关系</p><ul><li>人与人之间的关系 &amp; 人人互联的成本趋势 -&gt; 互联网+</li></ul><p>设计思维的任务：观察结果转为洞察，洞察再转为改善人们生活和服务。</p><ul><li><p>观察：关注人们没有去做和说的，重视边缘地带的表现（一个工具是否可以让小学生顺利使用）</p></li><li><p>观察向洞察的转化需要：专业领域只是（笼统的人），深入到具体场景中去观察人的具体行为（具体的人）</p></li></ul><h2 id="客户洞察的核心：换位思考"><a href="#客户洞察的核心：换位思考" class="headerlink" title="客户洞察的核心：换位思考"></a>客户洞察的核心：换位思考</h2><p>换位思考：一种心理习惯，促使我们体会到每个人的感受，而不是将他们当作小白鼠或者实验偏差</p><ul><li><p>第一层：功能-与观察的用户呼唤身份</p></li><li><p>第二层：认知-体会用户的感受与“潜在需求”</p></li><li><p>第三层：情感-寻找能触动和推动目标人群的想法</p></li><li><p>拓展针对个人的换位思考</p></li></ul><p>帮助人们发掘未能意识到潜在需求，是设计思考者面临的挑战</p><ul><li><p>将用户引入设计： against user -&gt; for user -&gt; with user</p></li><li><p>在解决用户痛点之外，进一步引导用户实现（额外的）自我价值</p></li></ul><h2 id="失败的客户洞察会导致什么"><a href="#失败的客户洞察会导致什么" class="headerlink" title="失败的客户洞察会导致什么"></a>失败的客户洞察会导致什么</h2><p>产品服务设计无法打动人</p><ul><li><p>竞品思路的简单模仿</p></li><li><p>空话套话成堆</p></li><li><p>费力费力的设计悬空</p></li></ul><p>强行吸引流量</p><ul><li><p>追热点 无法给出独特的见解</p></li><li><p>内容诉诸恐惧，愤怒，好奇，争执 疲倦</p></li><li><p>总结： 不持久，低价值，被反噬</p></li></ul><h1 id="构思"><a href="#构思" class="headerlink" title="构思"></a>构思</h1><h2 id="构思新的商业模式"><a href="#构思新的商业模式" class="headerlink" title="构思新的商业模式"></a>构思新的商业模式</h2><p>一个能够产生大量商业模式创新，并且成功识别出其中最佳创意的流程被称之为构思（ideation）</p><ul><li><p>大多数行业只有一种主流商业模式的现状已经改变，同一个市场中会有多种商业模式竞争，行业之间的界限变得模糊甚至消失</p></li><li><p>创造新的商业模式的时候需要忽略现状并且停止对于操作性问题的担忧</p></li><li><p>商业模式创新不是抄袭经典或者对标友商，而是创造新的机制来满足那些没有被满足的，新的或者隐藏在背后的客户需求</p></li></ul><p>构思的两个步骤：生成大量创意 to 对创意进行整合并且挑选</p><p>提出新创意的两个出发点</p><ul><li><p>从画布中寻找创新的焦点</p></li><li><p>不断提出“如果…会怎么样的问题：</p></li></ul><h2 id="商业模式创新的焦点："><a href="#商业模式创新的焦点：" class="headerlink" title="商业模式创新的焦点："></a>商业模式创新的焦点：</h2><p><strong>资源驱动</strong>：创新来源于组织现有的基础设施或者合作伙伴的资源</p><p><strong>供给驱动</strong>：创造全新的价值主张，并且影响到其他模块</p><p><strong>客户驱动</strong>：基于客户需求，可获得性或者是便利性的提升，并且影响其他模块。</p><p><strong>财务驱动</strong>：由新收益来源，定价机制或者被缩减的成本驱动创新</p><p><strong>多点驱动</strong>：多交点驱动的创新，并且对其他模块产生深远影响</p><h2 id="挑战传统思维"><a href="#挑战传统思维" class="headerlink" title="挑战传统思维"></a>挑战传统思维</h2><p>利用“如果。。。会怎么样”的问题来挑战传统思维</p><p>使用此类问题打破在设计过程中遇到的现有的商业模式的束缚，并且使用更多新奇的，难以执行的主张闯入我们的思维</p><p>此类问题只是思考的起点，需要继续构建基于假设的商业模式。如果某些问题找不到大难，则可能是思维太过于激进。或者未能找到一个合适的商业模式来承载</p><h2 id="构思的流程和团队建设"><a href="#构思的流程和团队建设" class="headerlink" title="构思的流程和团队建设"></a>构思的流程和团队建设</h2><p>1.团队组建：</p><p>除了创意天才还需要多样化的创新团队</p><p>成员多样化</p><p>要引导积极倾听</p><p>2.钻研</p><p>创新所需要的知识：总体研究，客户与潜在客户，新技术调研，现有商业模式评估</p><p>3.开拓</p><p>从九大模块任意一个点作为创新七点：数量是关键重在创意避免过早评论价值</p><p>4.甄选标准</p><p>在业务背景下包括：预期实施时间，潜在收入，可能的客户阻力，对竞争优势的影响</p><p>5.构建原型（模型）</p><p>却列标准后从创意中整理一个最优短名单，由此构建3-5个创新的商业模式，再利用画布进行勾勒和讨论</p><h2 id="brainstorm（构思的重要手段）"><a href="#brainstorm（构思的重要手段）" class="headerlink" title="brainstorm（构思的重要手段）"></a>brainstorm（构思的重要手段）</h2><p>保持聚焦</p><p>执行规则</p><p>视觉化思考</p><p>准备</p><h2 id="构思补充：明晰思维过程"><a href="#构思补充：明晰思维过程" class="headerlink" title="构思补充：明晰思维过程"></a>构思补充：明晰思维过程</h2><p>构思的三个空间：</p><p>项目情绪图与乐观精神</p><p>发散思维和汇聚思维</p><p>分析和综合</p><p>头脑风暴</p><h1 id="可视化"><a href="#可视化" class="headerlink" title="可视化"></a>可视化</h1><h2 id="视觉化思考的价值"><a href="#视觉化思考的价值" class="headerlink" title="视觉化思考的价值"></a>视觉化思考的价值</h2><p>商业模式的讨论需要视觉化思考：抽象的东西具体化，复杂的概念简单化</p><ul><li><p>商业模式是一个由许多模块以及模块之间的复杂关系组成的复杂概念，其内部元素相互影响，但只有作为一个整体系统时才有意义</p></li><li><p>视觉化能够一目了然的刻画商业模式的主旨，并且具象化其中的隐含假设</p></li><li><p>视觉化能够使得商业模式变的明确，为团队讨论提供一些概念性的锚点，使得讨论从抽象思维落实到具体形象的东西</p></li><li><p>视觉化能够找出已有模式中的逻辑缺陷，又能在设计全新模式的时候更加容易添加</p></li></ul><p>视觉化思考使用的两项技术和四个流程</p><ul><li><p>如何使用便利贴 + 如何将草图和商业模式画布结合？</p></li><li><p>四个流程：理解，对话，探索，沟通</p></li></ul><h2 id="视觉化的实现：便利贴和绘画"><a href="#视觉化的实现：便利贴和绘画" class="headerlink" title="视觉化的实现：便利贴和绘画"></a>视觉化的实现：便利贴和绘画</h2><ul><li><p>便利贴的重要性：随意的添加，删除和移动（在画布上的位置）</p></li><li><ul><li>三个指导方针：粗的马克笔+只写一项元素+只用少量的为你做抓住关键点</li></ul></li><li><ul><li>便利贴的绘制，添加，删除，和移动能有效组织人们参加讨论，反映了商业模式的动态变化过程，与结果同样重要</li></ul></li><li><ul><li>CRC卡片（正面对象状态+行为与写作者，背面简短描述），story card*（正面故事藐视，背面故事实现的理由）</li></ul></li><li><p>绘画的强大表现力：人对于图像的返回和比文字强烈的多</p></li><li><ul><li>最简陋的素描也能让事物变得具体和易于理解：如情绪，比例等等</li></ul></li><li><ul><li>帮助向别人解释和沟通你的商业模式，容易激发起建设性的讨与创意</li></ul></li><li><ul><li>可用于勾勒一个典型客户与他所处的环境，也可用于勾勒出客户群体的需求和任务</li></ul></li></ul><h2 id="视觉化的作用"><a href="#视觉化的作用" class="headerlink" title="视觉化的作用"></a>视觉化的作用</h2><p>理解商业模式的本质：</p><ul><li><p>视觉化的语言（画布是一张概念图，其功能类似于具有语法规则的视觉化语言，提供视觉和为文字的指引，帮助画出模式中的所需的所有信息）</p></li><li><p>抓住全貌（画布的草图能够为观众提供足够的信息理解全貌）</p></li><li><p>看到关键:一定要理解元素&#x2F;模块之间的关联关系</p></li></ul><p>提升对话效率</p><ul><li><p>共同的参照点:将头脑中不言而喻的主观假设具象化，并且将大量内容固化成可回溯的参照点（人类的短时间记忆只能保留有有限数量的想法）</p></li><li><p>统一的语言：利用图形和画布帮助不同的参与者聚焦，特别是来自不同领域的人</p></li><li><p>一致的理解：帮助不同部门的人将其深入理解的部分表达出来，再一起形成整体的洞察和一致的理解</p></li></ul><p>探索创意：</p><ul><li><p>激发创意（模糊的想法，随着灵感发挥，有机地整合成一副图画）</p></li><li><p>演习：视觉化的模型帮助思考也部分元素的改变引发的系统性冲击</p></li><li><p>隐藏要素：添加，填充充分的细节</p></li></ul><p>提升沟通</p><ul><li><p>统一公司内部的理解(用图画再组织内形成公式，朝着一个战略方向前进)</p></li><li><p>内部推销（好的图画使得组织的现状，需要做的事情，怎么做，未来会怎么样等方面变得易于沟通，从而赢得组织内部的理解和支撑）</p></li><li><p>外部推销（提升向投资人或者潜在合作伙伴推销成功的概率）</p></li></ul><h2 id="讲述视觉化的故事"><a href="#讲述视觉化的故事" class="headerlink" title="讲述视觉化的故事"></a>讲述视觉化的故事</h2><p>解释商业模式的一种有力的模式：利用画布草图逐一介绍一个完整的视觉化</p><p>如何讲述：</p><ul><li><p>绘制商业模式</p></li><li><ul><li>用简单的文字填充各种商业模式模块</li></ul></li><li><ul><li>一个模块只用一张便利贴</li></ul></li><li><p>用图形描绘每个商业模式元素</p></li><li><ul><li>每次取下一张便利贴，再用图形去取代文字想要表达的内容</li></ul></li><li><ul><li>图形保持简单</li></ul></li></ul><p>讲述故事</p><ul><li><ul><li>根据便利贴的顺序与贴图的内容注意讲述你的商业模式</li></ul></li></ul><h1 id="模型构建"><a href="#模型构建" class="headerlink" title="模型构建"></a>模型构建</h1><h2 id="模型构建的价值"><a href="#模型构建的价值" class="headerlink" title="模型构建的价值"></a>模型构建的价值</h2><p>与视觉化思考一样，模型构建可以使抽象的概念具体化，帮助探索新的创意</p><ul><li><p>在产品、架构和交互设计上得到广泛应用，但在商业管理领域不太常用</p></li><li><p>这里的“模型”：用于讨论、探究或概念验证的工具，目标是探索未来潜在的商业模式（不等于软工领域的模型或原型），可以是草图、画布或财务报表</p></li></ul><p>模型构建有助于实际商业模式的探索</p><ul><li><p>建模-（疑问点明确化、视觉化）-添加、删除或修改元素-观察结果</p></li><li><p>在不同规模（抽象层面）的模型上进行互动</p></li><li><p>有助于获得突破性的商业模式，同时能够有效控制细节与视觉化思考一样，模型构建可以使得抽象的概念具体化</p></li></ul><h2 id="设计态度与控制规模"><a href="#设计态度与控制规模" class="headerlink" title="设计态度与控制规模"></a>设计态度与控制规模</h2><ul><li><p>设计态度：专注探索，全面考虑，快速放弃，选出值得优化的想法，接受不确定性</p></li><li><p>控制规模：通过绘制很多（粗略的和细致的）模型来代表各种战略选择，再通过对每个模型添加和移除元素的方式来探索新想法</p></li><li><ul><li>随手素描：勾勒和推销一个粗略的主意</li></ul></li><li><ul><li>精心绘制的画布：探索实现该创意所需的因素</li></ul></li><li><ul><li>商业实例：检查该创意的可存活度</li></ul></li><li><ul><li>实地验证：调查客户的可接受度和可行性</li></ul></li></ul><h2 id="模型构建补充"><a href="#模型构建补充" class="headerlink" title="模型构建补充"></a>模型构建补充</h2><p>必须给创造性团队时间、空间和预算去犯错</p><ul><li>在模型构建（原型）阶段尽可能地去试错</li></ul><p>模型，不求精细，胜在快速</p><ul><li><p>早期的模型应该是快速的、粗糙的、便宜的（苹果鼠标：走珠+黄油盘）</p></li><li><p>适可而止：模型的目的是赋予想法具体的外形，了解该想法的长处和弱点，从而为更详细、更精密的下一代模型寻找方向（最终转向具体设计）</p></li></ul><p>现场制作模型</p><ul><li><p>用户模拟空间（喜达屋酒店雅乐轩品牌下的虚拟酒店）</p></li><li><p>灰度上线、A&#x2F;B与内测；依赖复杂社会互动的服务更需要使用现场模型</p></li></ul><h1 id="讲故事"><a href="#讲故事" class="headerlink" title="讲故事"></a>讲故事</h1><h2 id="讲故事的价值和目的"><a href="#讲故事的价值和目的" class="headerlink" title="讲故事的价值和目的"></a>讲故事的价值和目的</h2><p>故事是一个理想的热身工具，为深度讨论商业模式与其内在逻辑做好准备</p><ul><li>将故事与画布结合，利用叙事性克服听众对不熟悉模式的抵触，放下对陌生事物的怀疑</li></ul><p>为什么要讲故事</p><ul><li><p>介绍新想法：尝试融入组织战略</p></li><li><p>向投资人推销：争取外部资源（是什么，为谁服务，如何获得收益）</p></li><li><p>吸引员工（成员）：抓住组员的注意力和好奇心，为下一步探讨准备</p></li><li><p>让未来触手可及：激发创意、辩证变革</p></li></ul><h2 id="故事的两个不同视角"><a href="#故事的两个不同视角" class="headerlink" title="故事的两个不同视角"></a>故事的两个不同视角</h2><p>公司视角</p><p>客户视角</p><h1 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h1><h2 id="场景指导下的商业模式设计"><a href="#场景指导下的商业模式设计" class="headerlink" title="场景指导下的商业模式设计"></a>场景指导下的商业模式设计</h2><p>将模型构建中明确方向具体化，从而给出有见地的设计</p><p>两种场景</p><ul><li><p>不同的客户结构：结合客户洞察描绘出独特、具体的图景</p></li><li><ul><li><ul><li>由场景决定选择哪款产品而放弃其它产品（价值主张的排他性）</li></ul></li></ul></li><li><ul><li><ul><li><ul><li>微信、QQ、Soul、贴吧、陌陌&amp;探探、比心基于场景的“生态位”？</li></ul></li></ul></li></ul></li><li><ul><li>未来可能的竞争环境：想象未来可能的具体细节，品味特定条件下商业模式如何演进</li></ul></li></ul><h2 id="讲故事与场景互为补充：将人放在想法的中心"><a href="#讲故事与场景互为补充：将人放在想法的中心" class="headerlink" title="讲故事与场景互为补充：将人放在想法的中心"></a>讲故事与场景互为补充：将人放在想法的中心</h2><p>场景说明：讲故事+场景</p><p>角色扮演：发掘生活内在脚本</p><p>构造场景为顾客打造体验，制作用户体验蓝图</p><h2 id="补充讨论：信息技术如何改变世界"><a href="#补充讨论：信息技术如何改变世界" class="headerlink" title="补充讨论：信息技术如何改变世界"></a>补充讨论：信息技术如何改变世界</h2><p>人类社会的整体视角 – 人人互联的“小小世界”</p><ul><li><p>“六度分离”现象的背后 – 任何一种人人互动都会形成网络&#x2F;群体，群体的局部行为会导致全局性的结果</p></li><li><p>移动互联网 – 低成本互联下的“更小世界”</p></li><li><p>单个网民视角 – 通过场景连接到不同群体（所在的现实&#x2F;虚拟空间）</p></li></ul><p>场景的连接</p><ul><li><p>场景原定义：影视用语，指特定时间、空间内发生的行动，或指由人物关系构成的具体画面，是通过人物行动来表现剧情的一系列特定过程</p></li><li><p>基于场景的（构建产品）思维方式：将互联网视为连接不同个体制造场景（空间）的工具，以及完成连接的高效率方法 – 代表：朋友圈&#x2F;小红书</p></li><li><p>从而达成：形成（产品）体验、促成（客户）消费、创造个体生存意义</p></li></ul><p>互联网场景定义 – 与互联网行为相关的，通过支付完成闭环的应用形态，包含以下两类典型场景（可兼具）：</p><ul><li><p>超级入口：触发用户沉浸式体验或长时间停留的应用形态（游戏、社交、购物等）</p></li><li><p>支付场景：应用移动支付完成交易的场景</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>demand</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Demand4_BusinessModelStrategy</title>
    <link href="/2024/01/07/demand4/"/>
    <url>/2024/01/07/demand4/</url>
    
    <content type="html"><![CDATA[<h1 id="商业模式环境"><a href="#商业模式环境" class="headerlink" title="商业模式环境"></a>商业模式环境</h1><p>商业模式的演进（创新）注定是复杂的、不确定的，甚至颠覆性的</p><p><strong>市场影响力、行业影响力、关键趋势和宏观经济影响</strong>这四个方面的分析为商业模式创新提供了设计空间</p><ul><li><p>使用模型构建来展开设计（竞品！）</p></li><li><p>通过场景进行对未来的探索（聚焦！）</p></li></ul><p><img src="/../img/demand/4-2.png"></p><h2 id="市场影响力"><a href="#市场影响力" class="headerlink" title="市场影响力"></a>市场影响力</h2><p>市场问题 – 从客户和供给的角度识别出驱动和改变你的市场的关键问题</p><p>市场分类 – 识别主要的市场群体，描述他们的兴趣点，尝试发现新的群体</p><p>需求和诉求 – 列举市场需求并分析这些需求被满足的程度</p><p>切换成本 – 客户转投竞争对手（比如你自己），需要改变哪些方面</p><p>收入影响力 – 识别与收入吸引力和定价能力相关的因素</p><h2 id="行业影响力"><a href="#行业影响力" class="headerlink" title="行业影响力"></a>行业影响力</h2><p>主流竞争对手 – 识别它们以及它们的相对优势</p><p>挑战者（相对于传统电商） - 新出现的玩家以及它们商业模式的不同</p><p>替代产品和服务 - （包括其它市场和行业在内的）替代产品与服务</p><p>供应商与价值链上的其他厂商 – 当前价值链上的关键玩家与新兴玩家</p><p>利益相关者 – 哪些人会影响你的组织和商业模式</p><h2 id="关键趋势"><a href="#关键趋势" class="headerlink" title="关键趋势"></a>关键趋势</h2><p>技术趋势 – 威胁和推动发展当前商业模式的技术趋势</p><p>行业管理趋势 – 影响（你的）商业模式的管理规定和管理趋势</p><p>社会和文化趋势 – 可能影响（你的）商业模式的社会趋势</p><p>社会经济趋势 – 总结和你的商业模式有关的主要社会经济趋势</p><h2 id="宏观经济影响"><a href="#宏观经济影响" class="headerlink" title="宏观经济影响"></a>宏观经济影响</h2><p>全球市场情况 – 从宏观经济角度总结当前整体情况</p><p>资本市场 – 与你的资本需求相关的当前资本市场情况</p><p>大宗商品和其他资源 – 关注你的商业模式所需的资源价格与趋势</p><p>经济基础设施 – 你的业务市场的经济基础设施</p><h1 id="总体评估"><a href="#总体评估" class="headerlink" title="总体评估"></a>总体评估</h1><p>…</p><h1 id="对每个模块进行SWOT评估"><a href="#对每个模块进行SWOT评估" class="headerlink" title="对每个模块进行SWOT评估"></a>对每个模块进行SWOT评估</h1><p><img src="/../img/demand/4-3.png"></p><p><img src="/../img/demand/4-4.png"></p><p><img src="/../img/demand/4-5.png"></p><p><img src="/../img/demand/4-7.png"></p><p><img src="/../img/demand/4-8.png"></p><p><img src="/../img/demand/4-9.png"></p><p><img src="/../img/demand/4-10.png"></p><h1 id="蓝海战略与商业模式管理"><a href="#蓝海战略与商业模式管理" class="headerlink" title="蓝海战略与商业模式管理"></a>蓝海战略与商业模式管理</h1><h2 id="蓝海战略简介"><a href="#蓝海战略简介" class="headerlink" title="蓝海战略简介"></a>蓝海战略简介</h2><p>蓝海战略：通过根本性的差异化来创造全新的行业，而不是模仿现有商业模式在当前行业中竞争</p><ul><li><p>价值创新：不是在传统的绩效指标下超越对手，而是创造新的、未充分竞争的市场空间</p></li><li><p>画布的可视化效果为蓝海战略带来“全局化”的视角</p></li><li><p>通常还与开拓未被开发的客户群体相结合</p></li></ul><p>蓝海战略的“四项行动架构”（增加价值，减少成本）</p><ul><li><p>行业中哪些理所当然的要素应被删除</p></li><li><p>哪些要素应被大幅消减至行业标准以下</p></li><li><p>哪些要素应该被大幅调整到行业标准之上</p></li><li><p>哪些行业中从未提供的要素是应该被创造出来的</p></li></ul><p><img src="/../img/demand/4-11.png"></p><h2 id="蓝海战略的几个方向"><a href="#蓝海战略的几个方向" class="headerlink" title="蓝海战略的几个方向"></a>蓝海战略的几个方向</h2><p><img src="/../img/demand/4-12.png"></p><p><strong>探索成本影响：</strong></p><p>哪些活动、资源和合作伙伴关系的成本最高？</p><p>如果消减或删除这些成本项，会发生什么？</p><p>在删减或消除代价高昂的KR、KA或KP后，如何利用低成本的元素来代替它们创造价值</p><p><strong>探索价值主张：</strong></p><p>哪些低价值的功能或者服务可以被删除或消减？</p><p>可以通过新增或加强哪些功能或服务来产生有价值的客户新体验？</p><p>价值主张的改变对成本有何影响？</p><p>价值主张的改变如何改变商业模式客户侧内容？</p><p><strong>探索对于客户的影响：</strong></p><p>你可以聚焦哪些新的客户群体，哪些客户群体可以消减或删除？</p><p>新的客户群体真正希望你帮他们完成哪些工作？</p><p>这些客户倾向于何种联络方式，他们期望与你建立何种关系？</p><p>服务新客户群体对成本有何影响？</p>]]></content>
    
    
    <categories>
      
      <category>demand</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Demand3_BusinessModelTypes</title>
    <link href="/2024/01/07/demand3/"/>
    <url>/2024/01/07/demand3/</url>
    
    <content type="html"><![CDATA[<h1 id="平台商业模式"><a href="#平台商业模式" class="headerlink" title="平台商业模式"></a>平台商业模式</h1><p><strong>close to Internet</strong></p><h2 id="平台商业模式的背景"><a href="#平台商业模式的背景" class="headerlink" title="平台商业模式的背景"></a>平台商业模式的背景</h2><p>背景：信息互联技术近四十年的高速发展</p><ul><li>信息技术服务（大规模用户）的边界成本接近于零</li><li>人与人互联的成本极大地降低</li><li><ul><li>实质上改变了人类社会的组织形式（交往、政治、企业）</li></ul></li></ul><p>新技术与社会变革导致商业模式上大量“以旧换新”</p><ul><li>在人与组织互联成本大幅度降低的时代背景下，最具代表性的商业模式是 – 多边平台商业模式</li></ul><h2 id="多边平台商业模式"><a href="#多边平台商业模式" class="headerlink" title="多边平台商业模式"></a>多边平台商业模式</h2><p>多边平台将两个或更多独立但相互依存的客户群体进行连接</p><ul><li><p>平台对于其中某一客户群体的价值：其它群体的存在</p></li><li><p>平台通过促进不同群体之间的互动而创造价值</p></li><li><p>一个多边平台的价值提升在于它所吸引的用户数量的增加</p></li></ul><p>难题：“先有鸡还是先有蛋”</p><ul><li><p>单个用户群体的价值本质上取决于平台中另一群体的用户数量</p></li><li><p>弄清楚哪一“边”能够更好的吸引其它“边”，从而提供免费服务甚至补贴</p></li></ul><h2 id="多边平台商业模式总结"><a href="#多边平台商业模式总结" class="headerlink" title="多边平台商业模式总结"></a>多边平台商业模式总结</h2><p>价值主张一般体现在如下三方面</p><ul><li>吸引用户、群体配对、利用平台交易渠道降低交易成本</li></ul><p>客户群体相互依存，无法独立</p><p>核心资源是平台，成本主要来自于平台的维护和开发</p><ul><li>三项关键活动：平台管理、服务实现、平台升级</li><li>轻资产 vs. 重资产？</li></ul><p>多个收益流，补贴正确的客户群是定价决策的关键</p><ul><li>如何设计收益流补贴？如何定价？</li></ul><h1 id="免费商业模式"><a href="#免费商业模式" class="headerlink" title="免费商业模式"></a>免费商业模式</h1><p>至少有一个关键的客户群体可以持续免费地享受服务</p><ul><li><p>不付费客户所得到的财务支持来自于另一个客户群体</p></li><li><p>对价格为0的商品的需求要数倍于定价为1分钱或更高的商品</p></li><li><ul><li>数字产品与服务的复制传播成本接近于0（海量用户下边界成本也趋向于0）</li></ul></li></ul><p>三种可行的免费商业模式(共同点：至少一个群体将得到免费的商品)</p><ul><li><p><strong>广告模式</strong>：基于多边平台的免费商品</p></li><li><p><strong>免费增值</strong>：免费的基本服务，可选的增值服务</p></li><li><p><strong>诱饵&amp;陷阱</strong>：以免费或很便宜的初始价格吸引客户，并引导其重复购买</p></li></ul><h2 id="广告模式"><a href="#广告模式" class="headerlink" title="广告模式"></a>广告模式</h2><p>关键业务：好的产品和服务以及高流量会吸引广告商，进而补贴产品和服务</p><ul><li><p>要考虑广告费能否支撑起产品服务质量</p></li><li><p>吞噬广告费的产品太多，流量红利已见底</p></li></ul><p>成本：平台的开发和维护，以及可能的获客与维系成本</p><h2 id="免费增值服务"><a href="#免费增值服务" class="headerlink" title="免费增值服务"></a>免费增值服务</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>收入形式：大量的用户从免费服务获益，少量用户会为增值服务付费</p><ul><li><p>实际上只有不到10%的用户会为增值服务付费</p></li><li><p>关键指标：关注免费用户服务成本与增值用户转化率</p></li></ul><h3 id="要点"><a href="#要点" class="headerlink" title="要点"></a>要点</h3><p>核心资源：平台是最重要的资产，产生三部分成本</p><ul><li>可观的固定成本、免费账户的低边际成本服务、增值账户成本</li></ul><p>关键业务：客户关系自动且低成本，免费用户向增值用户转化率是重要指标</p><p>收入来源三个重要公式</p><ul><li><p>收入 &#x3D; 用户数量*增值用户比重*增值服务价格*增长率*顾客流失率</p></li><li><p>服务成本 &#x3D; 免费用户数<em>免费服务成本+增值用户数</em>增值服务成本</p></li><li><p>运营利润 &#x3D; 收入 - 服务成本 - 固定成本 - 获客成本</p></li></ul><p>平台发展新趋势</p><ul><li>需要高水平、差异化的产品与服务（为免费增值提供空间）</li></ul><h2 id="诱饵陷阱模式"><a href="#诱饵陷阱模式" class="headerlink" title="诱饵陷阱模式"></a>诱饵陷阱模式</h2><p>产品与后续产品之间要有紧密连接，从而使得绩效的收益的初始购买为后续高收益产品或者服务的重复购买常遭可能（核心业务）</p><p>关注后续产品交付，需要强大的平拍品牌（资源）支撑</p><p>重要成本结构</p><ul><li>初始产品补贴与后续产品的成本</li></ul><p>慢慢融入融入平台与免费增值</p><h1 id="长尾商业模式"><a href="#长尾商业模式" class="headerlink" title="长尾商业模式"></a>长尾商业模式</h1><h2 id="长尾商业模式简介"><a href="#长尾商业模式简介" class="headerlink" title="长尾商业模式简介"></a>长尾商业模式简介</h2><p>提供相当多种类的小众产品，每类卖出量相对很少，但汇总的销售收入可以与传统模式销售媲美</p><ul><li><p>行业内20%的产品占据绝大多数销量</p></li><li><p>长尾模式专注于销售剩下80%内尽可能多的品类，并获得可媲美主流产品销售的收入</p></li><li><ul><li>在高效的互联网渠道加持下，专注某领域的部分单品销售也能构成长尾</li></ul></li></ul><p>出现的原因（首次用于描述传媒领域）</p><ul><li><p>生产工具的普及：文字发布、视频录制、生产与设计外包</p></li><li><p>销售渠道的普及：互联网</p></li><li><p>连接供需双方的搜寻成本降低：搜索、推荐、用户评级、社区</p></li></ul><h2 id="“长尾的平台”与“平台的长尾”"><a href="#“长尾的平台”与“平台的长尾”" class="headerlink" title="“长尾的平台”与“平台的长尾”"></a>“长尾的平台”与“平台的长尾”</h2><p>…</p><h2 id="长尾的转换"><a href="#长尾的转换" class="headerlink" title="长尾的转换"></a>长尾的转换</h2><p>突破因传统生产、设计、营销导致的二八曲线，长尾部分扁平化；形成若干“小众中心”，并分别向“大众中心”转化</p><h1 id="拆分商业模式"><a href="#拆分商业模式" class="headerlink" title="拆分商业模式"></a>拆分商业模式</h1><p>企业内部的三类规则：经济、竞争与文化</p><ul><li><p>由此可以区分三种活动：客户关系管理、新产品开发、基础设施管理</p></li><li><p>活动对应三种价值信条：亲近顾客、产品领先、运营卓越</p></li></ul><p>三类活动驱动因素不同，彼此之间冲突，企业内部消长（难共赢）</p><ul><li>解决方案：分拆！各自独立</li></ul><h1 id="开放的商业模式"><a href="#开放的商业模式" class="headerlink" title="开放的商业模式"></a>开放的商业模式</h1><p>企业的研发流程对外敞开</p><ul><li><p>“由外到内”：将外部的理念、技术或知识产权引入内部</p></li><li><p>“由内到外”：将内部的知识产权或技术，特别是闲置资产向外出售</p></li></ul><h1 id="所有商业模式的总结"><a href="#所有商业模式的总结" class="headerlink" title="所有商业模式的总结"></a>所有商业模式的总结</h1><p><img src="/../img/demand/3-1.png"></p>]]></content>
    
    
    <categories>
      
      <category>demand</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Demand2_BusinessModelCanvas</title>
    <link href="/2024/01/07/demand2/"/>
    <url>/2024/01/07/demand2/</url>
    
    <content type="html"><![CDATA[<h2 id="价值主张"><a href="#价值主张" class="headerlink" title="价值主张"></a>价值主张</h2><p>为某一客户群体提供能为其创造价值的产品和服务</p><ul><li><p>一家公司为特定客户群体提供的利益集合或组合</p></li><li><p>解决客户的问题或满足其需求，使其选择一家而放弃另一家</p></li><li><ul><li>创新性的、革命性的产品或服务 VS 既有产品或服务+新特点或属性</li></ul></li></ul><p>怎么理解价值主张的排它性 – 特定场景下的第一选择</p><h2 id="渠道通路"><a href="#渠道通路" class="headerlink" title="渠道通路"></a>渠道通路</h2><p>一家企业如何同它的客户群体达成沟通并建立联系，以向对方传递自身的价值主张</p><ul><li><p>企业与客户交互体系：交流、分销、销售渠道（+售后），是用户的交互触点</p></li><li><p>作用：了解产品与服务、评估价值主张；购买产品与服务、传递价值主张；提供售后支持</p></li></ul><p>渠道的五个阶段与运营方式</p><ul><li><p>知名度-评价-购买-传递-售后（三包、评论）</p></li><li><p>一个渠道可包含一个或全部五个阶段</p></li><li><p>一个组织可选用自有渠道、合作方渠道、或混用，以追求获益与成本的平衡以及最佳的客户体验</p></li></ul><h2 id="客户关系"><a href="#客户关系" class="headerlink" title="客户关系"></a>客户关系</h2><p>一家企业针对某一个客户群体所建立的客户关系的类型</p><ul><li>靠人员维护（“专属一对一财富管家”） VS 自动化设备（“24小时自助”）</li></ul><p>客户关系类型</p><ul><li><p>私人服务 personal assistance：商场导购、柜台服务与电渠、销售员</p></li><li><p>专属私人服务 dedicated personal assistance：私人银行服务、华为电信设备、健身&#x2F;培训“私教”</p></li><li><p>自助服务 self-service：话费流量充值、银行普通业务（ATM与大厅内自助服务）</p></li><li><p>自动化服务 automated services：各类平台推荐系统、网站导航设计（活动、凑单、无货推荐、红色与橙色的加入购物车、立即购买）</p></li><li><p>社区 communities：花粉俱乐部、小米之家、小红书、各类网游社区</p></li><li><p>客户共同创造 co-creation：MIUI，UGC（土豆、B站、抖音），各种评论（电影书籍-豆瓣、旅游住宿-Airbnb、普通商品-“自发安利”与评论区），采纳用户反馈的社区（产品调查问卷、游戏平衡运维）</p></li><li><ul><li>多边平台商业模式：尽可能多的容纳新用户类型并促进各方交互</li></ul></li></ul><h2 id="收入来源"><a href="#收入来源" class="headerlink" title="收入来源"></a>收入来源</h2><p>企业从每一个客户群体获得的现金收益（扣除成本的利润）</p><ul><li><p>两类收益来源：一次性交易收入、持续收入（进一步提供产品服务或售后支持）</p></li><li><p>定价机制</p></li><li><ul><li>固定（基于静态变量）：目录价、基于产品特性（“青春版”、“畅享版”）、基于客户群（教育版）、基于数量</li></ul></li><li><ul><li>浮动（基于动态变量）：谈判&#x2F;议价、收益管理（库存与发生购买的时间，如生鲜、熟食、酒店、航班等）、实时市场价格、拍卖</li></ul></li></ul><p>收入来源的方式</p><ul><li><p>资产销售 asset sale：实物产品所有权转让，消费者拥有处置的全部权利</p></li><li><p>使用费 usage fee：电信、宾馆、快递、付费网游点卡、公共交通车票</p></li><li><p>会员费 subscription fee：健身卡、付费网游月卡、公共交通月票、音乐会员</p></li><li><p>租赁 lending&#x2F;renting&#x2F;leasing：共享单车&#x2F;汽车&#x2F;充电宝，特定资产在特定时间的使用权转移并获益</p></li><li><p>许可使用费 licensing：专利授权、版权（图片、音乐、字体）、加盟或特许经营</p></li><li><p>经纪人佣金 brokerage fees：信用卡（交易手续费）、支付平台（交易与提现手续费）、中介</p></li><li><p>广告费 advertising：传媒、品牌策划、软件业与服务业；广告费增长乏力，分蛋糕的太多</p></li></ul><h2 id="核心资源"><a href="#核心资源" class="headerlink" title="核心资源"></a>核心资源</h2><p>保证一个商业模式顺利运行所需的最重要的资产</p><ul><li><p>用于：价值主张的创造与提供、开拓市场、维护客户关系并获益</p></li><li><p>可以“自主拥有”或者“寻求合作”</p></li><li><ul><li>“核心”意味着稀缺与不可替代，需要花费巨大的成本维系<br>核心中的核心：对细分客户的认知和对价值主张的塑造</li></ul></li><li><ul><li>“拥有”意味着额外的管理、折旧和“故障”，“合作”意味着让出的利润空间与颠覆式的生存危机 – 从“核心”向外扩展：拥有 – 合作</li></ul></li></ul><p>类型</p><ul><li><p>实物资源 physical：生产设备、房屋、车辆、机器、系统、销售点管理系统、分销渠道（腾讯：流量的“低吸高抛”）</p></li><li><p>知识性资源 intellectual：品牌（可口可乐）、专利（高通与华为）、知识产权与体系（微软、SAP、安卓&#x2F;苹果）</p></li><li><p>人力资源 human：普遍存在，对于创新性和知识密集产业最重要（如IT业），出色的营销团队</p></li><li><p>金融资源 financial：</p></li><li><ul><li>内部：花呗、车贷、互联网金融 – “润滑”消费与经营，电商标配</li></ul></li><li><ul><li>外部：风险投资（国资）、资本市场 - 助力创新企业快速成长</li></ul></li></ul><h2 id="关键业务"><a href="#关键业务" class="headerlink" title="关键业务"></a>关键业务</h2><p>保障其商业模式正常运行所需做的最重要的事情</p><ul><li><p>价值主张、获得市场、客户关系与收益</p></li><li><p>与价值主张强相关，价值主张的具象化</p></li><li><p>构建护城河：商业模式创新 – 构建不可替代的关键业务 – 支撑服务升级 – 基础设施投资 –底层技术突破 – 拥有&#x2F;强化核心资源</p></li></ul><p>类型</p><ul><li><p>生产 production：包含分销网络、渠道等</p></li><li><p>解决方案 problem solving：知识管理与持续的培训</p></li><li><p>平台&#x2F;网络 platform&#x2F;network：XX网、Visa卡、操作系统、应用商店、游戏平台</p></li></ul><h2 id="重要合作"><a href="#重要合作" class="headerlink" title="重要合作"></a>重要合作</h2><p>保证一个商业模式顺利运行所需的供应商和合作伙伴网络</p><ul><li><p>非竞争者之间的战略联盟</p></li><li><ul><li>微信生态vs. 苹果生态、Fortnite vs. App Store + Google Play</li></ul></li><li><p>竞争者之间的战略合作</p></li><li><ul><li>红蓝快乐水、微信支付与支付宝、米国两党制</li></ul></li><li><p>新业务的合资公司</p></li><li><ul><li>大厂“生态” ： 3q大战之后的腾讯联盟 vs. 阿里直系</li></ul></li><li><p>稳定供应关系的供应商和采购商</p></li><li><ul><li>产业园、苹果认证供应商、闭环的互联网影视平台（传统影视产业：制作、发行、院线）</li></ul></li></ul><p>合作动机</p><p>优化与规模效应 – 提高业务效率：降低成本，外包或共享基础设施</p><p>特殊资源及活动的获得 – 获得核心资源：高技术产品、销售团队、特许商品、渠道</p><p>降低风险和不确定性 – 降低业务风险：</p><h2 id="成本结构"><a href="#成本结构" class="headerlink" title="成本结构"></a>成本结构</h2><p>运营一个商业模式所发生的全部成本</p><ul><li><p>确定核心资源、关键业务和重要合作之后，成本核算将相对容易</p></li><li><p>也有以低成本结构为核心的商业模式（廉航、红米、Zara）</p></li></ul><p>导向</p><ul><li><p>成本导向 cost-driven：成本最小化，创造并维持极尽精简的成本结构</p></li><li><p>价值导向 value-driven：高端的价值主张与高度的个性化服务</p></li></ul><p>特点 </p><ul><li><p>固定成本：管理员工工资，租金，生产设备</p></li><li><p>可变成本：加工工人工资，加（bai）班（ri）费（meng），广告推广费，水电，原材料消耗</p></li><li><p>规模经济：大宗采购，大规模生产摊薄的固定成本</p></li><li><p>范围经济：渠道的复用（摊薄部分可变成本）</p></li></ul><h2 id="商业模式模块之间的联系"><a href="#商业模式模块之间的联系" class="headerlink" title="商业模式模块之间的联系"></a>商业模式模块之间的联系</h2><p>纵向联系</p><ul><li>客户关系-&gt;渠道通路-&gt;收入来源</li><li>关键业务-&gt;关键资源-&gt;成本支出</li></ul><p>跨越的联系</p><ul><li><p>客户关系选择与成本支出导向（定制化、个人化 – 价值导向 VS 自动化、大众化 – 成本导向）</p></li><li><p>除了价值主张与关键业务，关注建设渠道通路所需的核心资源与重要合作</p></li><li><p>细分的客户群体是否认同上游的重要合作方与引入的外部关键资源？</p></li></ul><p>联系的联系</p><ul><li><p>平台：多个“价值主张-客户细分”对的组合才能构成完整的收入来源</p></li><li><ul><li>吸引用户的主张与用户愿意付费的主张</li></ul></li><li><ul><li>促进多种不同用户群体的交易：补贴谁？收费谁？</li></ul></li><li><ul><li>如何运维平台并促进不同用户群体加入</li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>demand</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Demand1_Introduction</title>
    <link href="/2024/01/07/demand1/"/>
    <url>/2024/01/07/demand1/</url>
    
    <content type="html"><![CDATA[<p>所有软件创作都包括了本质性工作（essential task）和附属性工作（accidental task）</p><p>前者创造出一种由抽象的软件实体所组成的复杂概念结构，后者则使用变化曾语言来表现这些抽象的实体，并且在某些空间和速度的限制下，将程序对应至机器语言</p><p>剩余的复杂度（主要复杂度本质）无法改变</p><h2 id="什么是软件？"><a href="#什么是软件？" class="headerlink" title="什么是软件？"></a>什么是软件？</h2><p><strong>从组成成分</strong></p><p>代码 + 文档</p><p>代码 -&gt; 算法加数据结构</p><p>数据结构 -&gt; 数据元素之间的逻辑结构和物理结构</p><p>算法 -&gt; 有穷明确可行的指令集+计算平台</p><p>计算平台 -&gt; 编译器+操作系统&#x2F;操作系统+硬件</p><p><strong>从问题求解</strong></p><p>是对客观事物的深度抽象与建模</p><p>同时包含了对复杂问题的问题空间和解空间的具体描述</p><h2 id="问题域"><a href="#问题域" class="headerlink" title="问题域"></a>问题域</h2><p><strong>需求</strong></p><p>解决问题改善现实满足用户期望的条件和能力就是需求</p><p>问题的产生：显示的状况与人们的期望的状况产生差距的时候</p><p>如何解决问题：改变现实当中某些实体的状态或者改变实体状态变化的演进顺序</p><p>解决问题必须解决问题设计的事件和事物，这就是问题域（problem domain）</p><p>问题域的背景信息又被称为问题域特性（problem domain feature）</p><h2 id="解系统"><a href="#解系统" class="headerlink" title="解系统"></a>解系统</h2><p>软件系统通过影响问题域帮助人们解决问题因此称之为解系统。解系统不是问题域的一部分，但是解系统和问题域之间存在着可以相互影响的接口，实现交互行动</p><p><em>软件系统通过影响问题域，能够帮助人们解决问题，称之为解系统</em></p><p><em>从问题域背景出发，结合涉众主观意愿，设定系统目标，指定开发任务，细分系统交互</em></p><h2 id="软件解决问题的基础"><a href="#软件解决问题的基础" class="headerlink" title="软件解决问题的基础"></a>软件解决问题的基础</h2><p>软件系统中的部分可以对问题域中的某些部分具有模拟特性，</p><p>这些通过映射建立的共同知识，就是问题域和解系统的共享现象</p><p>最后将接系统的模型操纵域计算结果用于知道现实世界的问题的解决 </p><h2 id="需求的两个维度"><a href="#需求的两个维度" class="headerlink" title="需求的两个维度"></a>需求的两个维度</h2><ol><li><p>需求（要求，问题端）</p></li><li><p>需求规格说明（解系统端）</p></li></ol><p>（问题端 {共享现象） 解系统}</p><pre><code class="hljs">^         ^         ^需求     规格说明   软件</code></pre><h2 id="需求的定义"><a href="#需求的定义" class="headerlink" title="需求的定义"></a>需求的定义</h2><p>IEEE</p><ol><li><p>用户为了解决问题或者达到某些目标所需要的条件或者是能力</p></li><li><p>系统或者系统部件为了满足合同标准规范或者其他正式文档所规定的要求二需要具备的条件或者能力</p></li><li><p>对上述两点中的一个条件或者一种能力的文档化描述</p></li></ol><h2 id="需求工程的概念"><a href="#需求工程的概念" class="headerlink" title="需求工程的概念"></a>需求工程的概念</h2><p>是软件工程的一个分支</p><ul><li><p>关注于软件系统所应该实现的现实世界目标，软件系统的功能和软件系统应该遵守的约束</p></li><li><p>也关注以上因素和准确的软件行为规格说明之间的联系</p></li><li><p>关注以上的因素随着时间或者跨产品族而烟花之后的相关因素</p></li><li><p>于人力工程，硬件工程一起组成系统工程</p></li></ul><h2 id="困难点"><a href="#困难点" class="headerlink" title="困难点"></a>困难点</h2><p>问题域，目标，任务，交互的转化是创造性的活动</p><p>编程方面的能力不能直接应用于需求分析</p><p>需要丰富的开发和管理经验</p><h2 id="商业模式的定义"><a href="#商业模式的定义" class="headerlink" title="商业模式的定义"></a>商业模式的定义</h2><p>一个商业模式描述的是一个组织创造，传递以及获得价值的基本原理，其本质子啊与价值的流动</p><h2 id="价值传召和流动过程"><a href="#价值传召和流动过程" class="headerlink" title="价值传召和流动过程"></a>价值传召和流动过程</h2><p>主张某种价值，找到愿意“付费”的客户群体</p><p>价值主张传到到客户需要建立的渠道通路并且维持客户关系</p><p>价值主张往往需要上游核心资源的关键合作</p><h2 id="围绕商业模式的基本活动"><a href="#围绕商业模式的基本活动" class="headerlink" title="围绕商业模式的基本活动"></a>围绕商业模式的基本活动</h2><p>画布： 基本模型和工具</p><p>类型： 利用画布分析常见的商业模式</p><p>设计： 商业模式的构建手段</p><p>战略：商业模式的环境，平谷，规划，管理</p><p>流程： 完整的商业模式设计流程</p>]]></content>
    
    
    <categories>
      
      <category>demand</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Switching methods 谢谢你 (╯‵□′)╯︵┻━┻</title>
    <link href="/2024/01/06/%E8%AE%A1%E7%AE%97%E8%80%83%E8%AF%95/"/>
    <url>/2024/01/06/%E8%AE%A1%E7%AE%97%E8%80%83%E8%AF%95/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
    <tags>
      
      <tag>daily</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Computernetwork8_networksecurity</title>
    <link href="/2024/01/05/computernetwork8/"/>
    <url>/2024/01/05/computernetwork8/</url>
    
    <content type="html"><![CDATA[<h1 id="网络安全问题概述"><a href="#网络安全问题概述" class="headerlink" title="网络安全问题概述"></a>网络安全问题概述</h1><h2 id="常见威胁"><a href="#常见威胁" class="headerlink" title="常见威胁"></a>常见威胁</h2><ol><li><p>截获</p></li><li><p>中断</p></li><li><p>篡改</p></li><li><p>伪造</p></li></ol><p>被动攻击：截获信息的攻击，攻击者知识观察和分析某一个协议数据单元而不干扰信息流</p><p>主动攻击：更改信息和拒绝用户使用资源的攻击称之为主动攻击，攻击者对于某个连接中通过的PDU进行各种处理</p><p>更改报文流</p><p>拒绝报文服务</p><p>伪造连接初始化</p><h2 id="恶意程序"><a href="#恶意程序" class="headerlink" title="恶意程序"></a>恶意程序</h2><p>计算机病毒</p><p>计算机蠕虫</p><p>特洛伊木马</p><p>逻辑炸弹</p><h1 id="一般数据加密模型"><a href="#一般数据加密模型" class="headerlink" title="一般数据加密模型"></a>一般数据加密模型</h1><p><img src="/../img/computernetwork/11-1.png"></p><p>密码编码学（cryptography）是密码体制的设计学，而密码分析学（cryptanalysis）则是在位置密钥的情况下从密文推演出明文或者密钥的技术。合成密码学（cryptology）</p><p>如果无论截获这获得了多少密文，但是在这些密文中都没有足够的信息来确定对应的明文，则这一密码是无条件安全的</p><p>如果密码体制中的密码不能被可以使用的计算资源破译，则这一密码体制称之为计算上是安全的。</p><h1 id="对称密钥和公钥密码体制"><a href="#对称密钥和公钥密码体制" class="headerlink" title="对称密钥和公钥密码体制"></a>对称密钥和公钥密码体制</h1><p><strong>对称密码体制</strong> 加密密钥和解密密钥是相同的密码体制</p><h2 id="数据加密标准DES"><a href="#数据加密标准DES" class="headerlink" title="数据加密标准DES"></a>数据加密标准DES</h2><p>DES属于常规密钥密码体制，是一种分组密码</p><p>在加密前先对整个铭文进行分组。每一个组长为64bit</p><p>然后对每一个64bit的二进制数据进行加密处理，产生一组64bit的密文数据</p><p>组后将各组密文串接起来得到整个密文</p><p>使用的秘钥为64bit（实际密钥长度有56bit，有8bit用于奇偶校验）</p><p>DES的保密性仅仅取决于对于密钥的保密，而算法是公开的</p><h2 id="公钥匙密码体制"><a href="#公钥匙密码体制" class="headerlink" title="公钥匙密码体制"></a>公钥匙密码体制</h2><p>使用不同加密密钥和解密密钥，“一致加密密钥推导出解密密钥在计算上是不可行的”密码体制</p><p>产生原因：常规密钥密码体制的密钥分配问题，应一个对于数字签名的需求</p><p>RSA体制</p><p><img src="/../img/computernetwork/11-2.png"></p><p><strong>特点</strong></p><p>发送者 A 用 B 的公钥PK_B 对于 明文 X 加密（E运算）后，在接受者B用自己的私钥SK_B解密（D算法），即可恢复出明文：</p><p>$D_{SK_B}(Y) &#x3D; D_{SK_B}(E_{PK_B}(X)) &#x3D; X$</p><p>解密密钥是接收者专用的密钥，对于其他人都保密</p><p>加密密钥是公开的，但是不能用它解密，即</p><p>$D_{PK_B}(E_{PK_B}(X)) \neq X$</p><p>加密和解密的运算可以对调：</p><p>$E_{PK_B}(D_{SK_B}(X)) &#x3D; D_{SK_B}(E_{PK_B}(X)) &#x3D; X$</p><p>在计算机上可以容易产生承兑的PK和SK</p><p>但是从一致的PK实际上几乎不可能推导出SK</p><p>解密和加密算法都是公开的</p><ul><li><p>任何加密方法的安全性取决于密钥的长度以及公婆密文所需要的计算量</p></li><li><p>在这方面公钥密码体制并不比传统加密体制更有优越</p></li><li><p>目前公钥加密算法开销大</p></li><li><p>公钥需要密钥分配协议，具体分配过程并不比传统加密方法更加简单</p></li></ul><h1 id="数字签名"><a href="#数字签名" class="headerlink" title="数字签名"></a>数字签名</h1><p>特点：</p><p><strong>报文鉴别</strong>：接收者更够合适发送者对于报文的签名</p><p><strong>报文的完整性</strong>：发送者事后不能抵赖对于报文的签名</p><p><strong>不可否认</strong>：接收者不能伪造对于报文的签名</p><p><img src="/../img/computernetwork/11-3.png"></p><p>因为除了A以外没有人能够具有A的密钥，所以除了A以外没有人能产生这个密文。B相信X是A签名发送的</p><p>若A要抵赖曾发送给报文给B，B可以将明文和对应的密文交给第三者。则第三者很容易用A的公钥证实A缺失发送X给B</p><p>反之，如果B将密文伪造成X‘，B不能再第三者前出示对应的密文，这样就正式B伪造了报文</p><p><img src="/../img/computernetwork/11-4.png"></p><h1 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h1><p>防火墙是由软件，硬件构成的系统，是一种特殊编程的路由器，用来在两个玩过之间实施简单的接入控制策略。接入控制策略是由使用防火墙的单位自行定制的</p><p>防火墙内部的网络称之为可信赖的网络（trusted network）外部的因特网称之为“不可信赖的网络”（untrust network）</p><p><img src="/../img/computernetwork/11-5.png"></p><p><strong>功能</strong></p><p>阻止和允许</p><p><strong>分类</strong></p><p>网络级防火请：用来防止整个网络出现外来非法的入侵。属于这类的由分组过滤和授权服务器</p><ul><li><p>前者检查所有流入本网络的信息，然后拒绝不符合实现制定好的一套准则的数据</p></li><li><p>后者检查用户的登录是否合法</p></li></ul><p>用户级防火墙：从应用程序来进行接入控制通常使用应用网关或者代理服务器来区分各种应用</p><h1 id="ACL"><a href="#ACL" class="headerlink" title="ACL"></a>ACL</h1><p>To determine whether a packet is to be permitted or denied, it is tested against the ACL statements in sequential order</p><p>When a statement “matches”, no more statements are evaluated</p><p>The packet is either permitted or denied</p><p>There is an implicit “deny any” statement at the end of the ACL</p><p>If a packet does not match any of the statements in the ACL, it is dropped.</p><h2 id="How-a-Router-Uses-an-ACL-outbound"><a href="#How-a-Router-Uses-an-ACL-outbound" class="headerlink" title="How a Router Uses an ACL(outbound)"></a>How a Router Uses an ACL(outbound)</h2><p>Check to see if packet is routable. If so, look up route in the routing table</p><p>Check for an ACL for the outbound interface</p><ul><li><p>If no ACL, switch the packet out the destination interface</p></li><li><p>If an ACL, check the packet against the ACL statements sequentially–denying or permitting based on a matched condition, if no statement matches, deny the packets</p></li></ul><p><img src="/../img/computernetwork/11-6.png"></p><h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><p>Write the ACL statements sequentially in global configuration mode.</p><p><code>Router(config)#access-list access-list-number &#123;permit/deny&#125;&#123;test-conditionsl&#125;</code></p><p><code>Lab-D(config)#access-list 1 deny 192.5.5.10 0.0.0.0</code></p><p>Group the ACL to one or more interface in interface cofiguration mode</p><p><code>Router(config-if)#&#123;protocol&#125;access-group access-list-number &#123;in/out&#125;</code></p><p>&#96;Lab-D(config-if)#ip access-group 1 out </p><h2 id="access-list-number-parameter"><a href="#access-list-number-parameter" class="headerlink" title="access-list-number parameter"></a>access-list-number parameter</h2><p>ACLs come in many types.</p><p>The access-list-number specifies what types</p><p><img src="/../img/computernetwork/11-7.png"></p><h2 id="The-permit-x2F-deny-parameter"><a href="#The-permit-x2F-deny-parameter" class="headerlink" title="The permit&#x2F;deny parameter"></a>The permit&#x2F;deny parameter</h2><p>After you’ve typed access-list and chosen the correct access-list<br>you either permit or deny<br>depending on the action you wish to take</p><h2 id="The-texst-condition-parameter"><a href="#The-texst-condition-parameter" class="headerlink" title="The texst-condition parameter"></a>The texst-condition parameter</h2><p>In the {test-condition} portion of the ACL common to most access lists is the source address’s ip mask and wildcard mask</p><p>The source address can be a subnet, a range of addresses, or a single host. It is also referred to as the ip mask because the wildcard mask uses the source address to check bits</p><p>The wildcard mask tells the router what bits to check</p><p><code>Lab-A(config)# access-list 1 deny 192.5.5.10 0.0.0.0</code></p><h2 id="The-wildcard-mask"><a href="#The-wildcard-mask" class="headerlink" title="The wildcard mask"></a>The wildcard mask</h2><p>A wildcard mask is written to tell the router what bits in the address to match and what bits to ignore</p><p>a 0 bit mean check this bit position</p><p>a 1 bit mean ignore this bit position</p><h2 id="Time-Savers-the-any-command"><a href="#Time-Savers-the-any-command" class="headerlink" title="Time Savers: the any command"></a>Time Savers: the any command</h2><p>Since ACLs have an implicit “deny any” statement at the end, you must write statements to permit others through</p><p>Using our previous example if the students are denied access and all others are allowed, you would write two statements:</p><p><code>Lab-A(config)# access-list 1 deny 192.5.5.0 0.0.0.127</code></p><p><code>Lab-A(config)# access-list 1 permit 0.0.0.0 255.255.255.255</code></p><p>Since the last statement is commonly used to override the “deny any” Cisco gives you an option the any command</p><p><code>Lab-A(config)#access-list 1 permit any</code></p><h2 id="Time-Savers-the-host-command"><a href="#Time-Savers-the-host-command" class="headerlink" title="Time Savers:the host command"></a>Time Savers:the host command</h2><p>Many times, a network administrator will need to write an ACL to permit a particular host. The statement can be written in two ways</p><p><code>Lab-A(config)# access-list 1 permit 192.5.5.10 0.0.0.0</code></p><p><code>Lab-A(config)#access-list 1 permit host 192.5.5.10</code></p><h2 id="Correct-Placement-of-Standard-ACLs"><a href="#Correct-Placement-of-Standard-ACLs" class="headerlink" title="Correct Placement of Standard ACLs"></a>Correct Placement of Standard ACLs</h2><p>Standard ACLs do not have a destination parameter</p><p>Therefore you place standard ACLs as close to the destination as possible</p><h2 id="Extended-ACL-overview"><a href="#Extended-ACL-overview" class="headerlink" title="Extended ACL overview"></a>Extended ACL overview</h2><p>Extended ACLs are numbered from 100-199 and extend the capabilities of the standard ACL</p><p>Extensions include the ability to filter traffic based on </p><ul><li><p>destination address</p></li><li><p>portion of the ip protocol</p></li><li><ul><li>you can write statements to deny only protocols such as icmp or routing protocol like rip and igrp</li></ul></li><li><p>upper layers of TCP&#x2F;IP protocol suite</p></li><li><ul><li>you can write statements to deny only protocols such as “tftp”<br> or “http”</li></ul></li><li><ul><li>you can use an operand like eq,gt,lt and neq (equal to, greater than, less than, and not equal to) to specify how to handle a particular protocol</li></ul></li><li><ul><li>For example if you wanted an access list to permit all traffic except http access, you would use permit ip any any neq 80</li></ul></li></ul><h2 id="The-extended-parameters"><a href="#The-extended-parameters" class="headerlink" title="The extended parameters"></a>The extended parameters</h2><p>access-list-numger</p><p>choose from range 100 to 199</p><p>{protocol | protocol-number}</p><p>For the CCNA you only need to know ip and tcp–many more are available</p><p>{source source-wildcard}</p><p>same as in standard</p><p>{destination destination-wildcard}</p><p>formatted like the standard but specifies the desitination</p><p>[protocol-specific optionsj]</p><p>This parameter is used to specify particular parts of a protocol that needs filtering</p><h2 id="Port-Numbers"><a href="#Port-Numbers" class="headerlink" title="Port Numbers"></a>Port Numbers</h2><p>you can also simply type the name (telnet) instead of the number(23) in the {protocol-specific options}</p><h2 id="Naming-ACLs"><a href="#Naming-ACLs" class="headerlink" title="Naming ACLs"></a>Naming ACLs</h2><p>one nice feature in the Cisco IOS is the ability to name ACLs This is especially helpful if you need more than 99 standard ACLs on the same Router</p><p>Once you name an ACL the prompt changes and you no longer have to enter the access-list and access-list-number parameters</p><p><code>Lab-A(config)# ip access-list standard over_and</code></p><p><code>Lab-A(config-std-nacl)#deny host 192.5.5.10</code></p><p><code>Lab-A(config-if)# ip access-group over_and out</code></p><h2 id="Verifying-ACLs"><a href="#Verifying-ACLs" class="headerlink" title="Verifying ACLs"></a>Verifying ACLs</h2><p>show commands</p><p><code>show access-lists</code></p><p>show all access-lists configured on the router</p><p><code>show access-list &#123;name | number&#125;</code></p><p><code>show ip interface</code></p><p>show the access-list applied to the interface both inbound and outbound</p><p><code>show running-config</code></p><p>show all the access lists and what interfaces they are applied on</p>]]></content>
    
    
    <categories>
      
      <category>computernetwork</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Computernetwork7_wireless</title>
    <link href="/2024/01/05/computernetwork7/"/>
    <url>/2024/01/05/computernetwork7/</url>
    
    <content type="html"><![CDATA[<p>无线网络常常简写为WLAN（Wireless Local Area Network）</p><p>便携站（portable station）</p><p>移动站（mobile station）</p><p>便携站在工作的时候是固定不变的而移动站点不仅能够移动而且还可以在移动的过程中通信</p><p>无线网络可以分为两大类。</p><p>一类是有固定基础设施的</p><p>一类是没有固定基础设施的</p><p>802.11标准</p><p>星形拓扑，其中心叫做接入点AP（Access Point）Mac层使用CSMA&#x2F;CA协议</p><p>凡是使用802.11协议的局域网都叫做WIFI（Wireless-Fidelity）</p><p>在此标准下无线局域网的最小构件是基本服务集BSS（Basic Service Set）</p><p>基站（base station）</p><p>服务集标识符SSID（Service Set IDentifier）</p><p>分配系统DS连接到另外一个基本服务集合从而得到一个扩展的服务集</p><p><img src="/../img/computernetwork/9-1.png"></p><p>一个移动站如果要加入到一个基本服务集BSS。就必须先选择一个接入点AP并且域这个接入点建立关联（association）</p><p>只有关联的AP才可以向这个移动着含发送数据帧，而这个移动站也只有通过关联的AP才能向其他站点发送数据帧。</p><p>在关联阶段过后，移动站点还要通过关联的AP向该子网发送DHCP发现报文以获取IP地址。这时，互联网中的其他部分就把这个移动站当成该AP子网里面的一台主机</p><p>重建关联服务（reassociation）</p><p>分离（dissociation）</p><p>如何接入？</p><ol><li><p>被动扫描： 移动站等待AP周期发出的信号标（beacon frame）</p></li><li><p>主动扫描： 探测请求帧（probe request frame），并等待探测响应帧（probe reponse frame）</p></li></ol><p>热点，热区（hot spot）（hot zone）</p><p>无固定基础设施的无线网络，自组网络（ad hocnetwork）</p><p>exposed station problem</p><p>MAC层中的协调功能（Coordination Function）</p><p><img src="/../img/computernetwork/9-2.png"></p><h3 id="CSMA-x2F-CA协议"><a href="#CSMA-x2F-CA协议" class="headerlink" title="CSMA&#x2F;CA协议"></a>CSMA&#x2F;CA协议</h3><p><img src="/../img/computernetwork/9-3.png"></p><p>802.11 标准设计了独特的MAC层。其通过协调功能（Coordination Function）确定在基本服务集BSS中的移动站</p><p>802.11的MAC层包括两个子层</p><ol><li><p>分布协调功能DCF（Distributed Coordination Function）。不采用任何中心控制，而是在每一个节点使用CSMA机制的分布式接入算法，让各个站争用信道获取发送全。</p></li><li><p>点协调功能PCF（Point Coordination Function）其中PCF是选项用接入点AP集中控制整个BSS内的活动</p></li></ol><p>为了避免碰撞，所有站在完成发送以后必须等待一段很短的时间才能继续发送下一帧。这一段时间叫做帧间间隔IFS(InterFrame Space)。</p><ol><li><p>SIFS(短帧间间隔)</p></li><li><p>DIFS 分布协调功能帧间间隔</p></li></ol><p>首先检测信道强度，然后等待一定时间DIFS发送源在接收到以后等待SIFS以后发送ACK</p><h3 id="虚拟载波监听（Virtual-Carrier-Sense）"><a href="#虚拟载波监听（Virtual-Carrier-Sense）" class="headerlink" title="虚拟载波监听（Virtual Carrier Sense）"></a>虚拟载波监听（Virtual Carrier Sense）</h3><p>源站要把它占用信道的时间告诉其他站，以减少可能的碰撞</p><p>源站再其MAC帧首部中的第二个字段“持续时间”中，填入本帧结束以后还要占用信道多长时间。</p><p>当一个站检测到正在信道中传送的MAC帧首部的“持续时间”字段的时候，就调整自己的网络分配向量NAV（Network Allocation Vector）</p><p>当信道从繁忙转为空闲的时候，为了避免几个站同时发送数据，所有想要发送数据的站都要执行退避算法。</p><p>802.11的退避算法是第i次退避就在2^(2 + i)个时隙中随机选择一个</p><p>如果再退避计时器的过程中出现信道忙，则冻结信道，然后等待DIFS，后从剩余的时间重新开始倒计时</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ol><li><p>当站点最初由数据要传输，而且检测到信道空闲再等待DIFS后，就发送整个数据帧</p></li><li><p>否则执行退避算法。一旦检测到信道忙，就冻结退避计时器。只要信道空闲，退避计时器就进行倒计时</p></li><li><p>当退避计时器时间减为0站点就发送整个的帧并且等待确认</p></li><li><p>若发送站接受到确认，就之傲已经发送的帧被目的站正确接收到了。若没有则要重传此帧，直到收到。</p></li></ol><p>一个站要发送数据的时候只有在信道是空闲的，且这个数据帧是它想发送的第一个数据帧。</p><h2 id="对信道进行预约"><a href="#对信道进行预约" class="headerlink" title="对信道进行预约"></a>对信道进行预约</h2><p>A在向B发送数据帧之前，首先发送一个短的控制帧叫做请求发送RTS（Request To Send）包括源地址，目的地址和这次通信（包括相应的确认帧所需要的时间）当然A在发送RTS之前也需要先监听信道。B正确收到RTS，则等待SIFS后就像A发送一个允许发送CTS(Clear To send)。随后A在收到CTS后，等待SIFS后，就发送数据帧，B收到正确的A的数据帧，在等待SIFS后，就向A发送确认帧ACK</p><p><img src="/../img/computernetwork/9-4.png"></p><h3 id="802-11的MAC帧"><a href="#802-11的MAC帧" class="headerlink" title="802.11的MAC帧"></a>802.11的MAC帧</h3><p>总共分为三种类型。控制帧，数据帧和管理帧</p><p><img src="/../img/computernetwork/9-5.png"></p><p><img src="/../img/computernetwork/9-6.png"></p><p>具体的一些字段</p><ol><li><p>序号控制字段16bit，分为序号子字段和分片字段4bit</p></li><li><p>持续期字段占16bit</p></li><li><p>帧控制字段：</p></li></ol><p>类型字段和子类型字段用来区分帧功能。更多分片字段置为1的时候说明这个帧术语一个帧的多个分片之一。</p>]]></content>
    
    
    <categories>
      
      <category>computernetwork</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Computernetwork6_devices</title>
    <link href="/2024/01/05/computernetwork6/"/>
    <url>/2024/01/05/computernetwork6/</url>
    
    <content type="html"><![CDATA[<h1 id="Router-Basics"><a href="#Router-Basics" class="headerlink" title="Router Basics"></a>Router Basics</h1><h2 id="Internal-Components"><a href="#Internal-Components" class="headerlink" title="Internal Components"></a>Internal Components</h2><p><img src="/../img/computernetwork/6-1.png"></p><h3 id="RAM"><a href="#RAM" class="headerlink" title="RAM"></a>RAM</h3><p>Temporary storage for router configuration files</p><p>RAM content is lost on power down or restart</p><p>Stores:routing tables,ARP cache Fast switching cache, Packet buffering, Packet hold queues</p><h3 id="NRAM"><a href="#NRAM" class="headerlink" title="NRAM"></a>NRAM</h3><p>Non-volatile RAM</p><p>Stores backup&#x2F;startup configuration files</p><p>Content is not lost when router is powered down or restarted</p><h3 id="Flash"><a href="#Flash" class="headerlink" title="Flash"></a>Flash</h3><p>EEPROM(Electronically Erasable Programmable Read-Only Memory)</p><p>Holds the Cisco IOS (Internet Operating System)</p><p>Allows updating of software without replacing the Flash chip</p><p>Multiple versions of IOS can be stored</p><p>Retained on power down</p><h3 id="ROM"><a href="#ROM" class="headerlink" title="ROM"></a>ROM</h3><p>Contains POST(Power On Self Test)</p><p>A bootstrap program(loads the Cisco IOS)</p><p>And operating system software</p><ul><li><p>Backup trimmed down version of the IOS</p></li><li><p>Upgrades require installing new chip set</p></li></ul><h3 id="Interfaces"><a href="#Interfaces" class="headerlink" title="Interfaces"></a>Interfaces</h3><p>Network connections through which packets enter and exit the router</p><p>Attached to the motherboard or as separate modules</p><h1 id="Router-Startup-procedure"><a href="#Router-Startup-procedure" class="headerlink" title="Router Startup procedure"></a>Router Startup procedure</h1><ol><li><p>Perform a power-up self test:During this self test, the router executes diagnostics from rom on all hardware modules</p></li><li><p>Verify the basic operations of CPU memory and network interface ports</p></li><li><p>Software initialization</p></li></ol><h2 id="process"><a href="#process" class="headerlink" title="process"></a>process</h2><p>step1: The generic bootstrap loader in ROM executes on the CPU card</p><p>step2:The IOS can be found in one of several places. The location is disclosed in the boot field of the configuration register</p><p>step3: The operating system image is loaded</p><p>step4:The configuration file saved in NVRAM is loaed into main memory and executed one line at a time</p><p>step5: If no valid configuration file in NVRAM the executes a question-driven initial configuration routine referred to as the system configuration dialog also called the setup mode</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">show ip route<br>show <span class="hljs-keyword">interface</span><br><span class="hljs-symbol">show</span> <span class="hljs-symbol">ip</span> <span class="hljs-symbol">int</span> <span class="hljs-symbol">brief</span><br></code></pre></td></tr></table></figure><h1 id="Routing"><a href="#Routing" class="headerlink" title="Routing"></a>Routing</h1><p>A router generally relays a packet from one data link to another, using two basic functions, a path determination function and a switching function</p><p>The switching function allows a router to accept a packet on one interface and forward it through a second interface</p><p>The path determination function enables the router to select the most approppriate interface for forwardingj</p><p>The router uses the network portion of the address to make path selections to pass the packet to the next router</p><p>The node portion of the address is used by the router directly connected to destination network to deliver the packet to the correct host</p><h2 id="Static-and-Dynamic-Route"><a href="#Static-and-Dynamic-Route" class="headerlink" title="Static and Dynamic Route"></a>Static and Dynamic Route</h2><h2 id="Administrative-Distance"><a href="#Administrative-Distance" class="headerlink" title="Administrative Distance"></a>Administrative Distance</h2><p>The administrative distance is a rating of the trustworthiness of a routing information source expressed as a numeric value from 0 to 255</p><p>The higher the number the lower the trustworthiness rating</p><p>So the administrative distance of static routes is often low (1 is default)</p><h1 id="Routing-configuration"><a href="#Routing-configuration" class="headerlink" title="Routing configuration"></a>Routing configuration</h1>]]></content>
    
    
    <categories>
      
      <category>computernetwork</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Computernetwork1_physicallayer</title>
    <link href="/2024/01/05/computernetwork1/"/>
    <url>/2024/01/05/computernetwork1/</url>
    
    <content type="html"><![CDATA[<h2 id="type-of-netwroks"><a href="#type-of-netwroks" class="headerlink" title="type of netwroks"></a>type of netwroks</h2><p><strong>shared media enviroment</strong></p><ul><li><p>multiple host can access the same medium.</p></li><li><p>it means that they all share the same media - even though the “wire” might be utp, which has four pairs of wire</p></li></ul><p><strong>point-to-point network environment</strong></p><ul><li><p>one device is connected to the other one via a link</p></li><li><p>most widely used in dial-up network connections, and is the one with which you are most likely familiar</p></li></ul><h2 id="lan-media"><a href="#lan-media" class="headerlink" title="lan media"></a>lan media</h2><p>function is to transmit data</p><p>transmission process is referred to as encoding</p><p>cable types include stp,utp, coaxial, fiber -optics</p><h3 id="lan-media–utp"><a href="#lan-media–utp" class="headerlink" title="lan media–utp"></a>lan media–utp</h3><p><strong>(unshielded twisted pair)</strong></p><p><strong>image example:</strong></p><p><img src="/../img/computernetwork/12-3.png"></p><p>relies solely on the cancellation effect, produced by twisted wire pairs to limit signal degradation caused by emi and rfi</p><p>has four pairs fo copper wire</p><p>has impedance of 100 ohms</p><p><strong>adavantages</strong></p><p>easy to install and is less expensive</p><p>costs less per meter than any other type of lan cabling</p><p>small external diameter does not fill up wiring ducts as rapidly as other types of cable</p><p>is installed using an rj connector so potential sources of network noise are greatly reduced and a good solid connection is practically guaranteed</p><p><strong>disadavantage</strong></p><p>cable is more prone to electrical noise and interference than other types of networking media</p><p>cable is more prone to electrical noise and interference than other types of networking media</p><p>distance between signal boosts is shorter</p><p>for twisted-pair than for coaxial and fibeoptic</p><h3 id="lan-media–coaxial"><a href="#lan-media–coaxial" class="headerlink" title="lan media–coaxial"></a>lan media–coaxial</h3><p>image example:</p><p><img src="/../img/computernetwork/12-4.png"></p><ul><li>thinnet&#x2F;thicknet</li></ul><p><em>ps:</em></p><p><em>thinnet (10base2):</em></p><p><em>cable type: thinnet cables are also known as “rg-58” coaxial cables. they are thinner and more flexible compared to thicknet cables.</em></p><p><em>segment length: in a thinnet ethernet network, the maximum segment length (the length of cable between two devices or terminators) is about 185 meters (or roughly 607 feet).</em></p><p><em>topology: thinnet uses a bus topology, where all devices are connected to a single coaxial cable, and terminators are used at both ends to terminate the cable.</em></p><p><em>data rate: the data transfer rate in a 10base2 network is 10 mbps (megabits per second).</em></p><p><em>thicknet (10base5):</em></p><p><em>cable type: thicknet cables are also known as “rg-8” coaxial cables. they are thicker and less flexible compared to thinnet cables.</em></p><p><em>segment length: in a thicknet ethernet network, the maximum segment length is about 500 meters (or roughly 1640 feet).</em></p><p><em>topology: thicknet also uses a bus topology, but it requires more substantial and rigid cable due to its greater length.</em></p><p><em>data rate: like thinnet, the data transfer rate in a 10base5 network is 10 mbps.</em></p><ul><li><p>longer network without using repeaters than twisted-pair</p></li><li><p>less expensive than fiber but more expensive than twisted-pair</p></li></ul><h3 id="lan-media-fiber-optic"><a href="#lan-media-fiber-optic" class="headerlink" title="lan media-fiber-optic"></a>lan media-fiber-optic</h3><p>image example:</p><p><img src="/../img/computernetwork/12-5.png"></p><ul><li><p>conducts modulated light transmission</p></li><li><p>not susceptible to emi or rfi and is capable of higher data rates than other networking media</p></li><li><p>electromagnetic waves are guided through optical fiber</p></li></ul><p><strong>single mode</strong></p><ul><li><p>also called axial : light travels down the axis of the cable</p></li><li><p>faster than multimode (up to 10 gbps) because of the<br>dispersion in multimode</p></li></ul><p>typically used for wans</p><p>smaller in diameter than multimode (less dispersion)</p><p>uses ild most often but also led</p><p><strong>mutimode</strong></p><p>light enters the glass pipe at different angles and travels nonaxially, which means it bounces back and forth off the walls of the glass tube</p><p>larger than single mode, used most often in lans</p><p>susceptible to greater dispersion</p><h2 id="wireless-communication"><a href="#wireless-communication" class="headerlink" title="wireless communication"></a>wireless communication</h2><p>the primary way of distinguishing between different electromagnetic waves is by their frequency.(frequency multiplexing)</p><p><strong>methods</strong></p><p>lasers:</p><p>output a coherent electromagnetic field in which all waves are at the same frequency and are aligned in a phase</p><p>infrared:</p><p>normally a line-of-sight technology but can be bounced or redirectedcannot go through opaque objects</p><p>radio:</p><p>carry data signals that can pass through wallsboth terrestrial and satellite radio technologies</p><h2 id="cable-sepcification"><a href="#cable-sepcification" class="headerlink" title="cable sepcification"></a>cable sepcification</h2><p>ieee—institute of electrical and electronics engineers</p><p>ul—underwriters laboratories</p><p>eia—electronic industries alliance</p><p>tia—telecommunications industry association</p><p>ansi—american national standards institute</p><h2 id="type-of-cable"><a href="#type-of-cable" class="headerlink" title="type of cable"></a>type of cable</h2><ul><li><p>straight cable</p></li><li><p>rollover cable</p></li><li><p>crossover cable</p></li></ul><h3 id="straight-cable"><a href="#straight-cable" class="headerlink" title="straight cable"></a>straight cable</h3><p><img src="/../img/computernetwork/12-6.png"></p><p><em>s:twisted pair technology: ethernet cables use twisted pair technology, where pairs of wires are twisted together. this twisting reduces electromagnetic interference from external sources and crosstalk between adjacent wires.</em>*</p><p><em>ps:pairing for data transmission: in ethernet, data is transmitted differentially over twisted pairs. each pair carries signals that are equal in magnitude but opposite in polarity. this differential signaling allows for more robust data transmission.</em></p><p><em>ps:proper pairing: to ensure that the differential signaling works correctly, it’s crucial that the wires in each pair are connected consistently at both ends of the cable. if the wires within a pair are not correctly paired, it can result in signal degradation and communication errors.</em></p><p><em>ps:color coding: the color coding of the wires in t568a and t568b standards is a way to ensure proper pairing. each standard specifies a specific order in which the wires should be connected to the rj45 connectors. this order helps technicians and installers easily identify and correctly pair the wires.</em></p><p><em>ps:in t568a, the first pair (white&#x2F;green and green) is used for transmitting data, the second pair (white&#x2F;orange and orange) is used for receiving data, the third pair (white&#x2F;blue and blue) is used for transmitting data, and the fourth pair (white&#x2F;brown and brown) is used for receiving data.</em></p><p><em>ps:in t568b, the first pair (white&#x2F;orange and orange) is used for transmitting data, the second pair (white&#x2F;green and green) is used for receiving data, the third pair (white&#x2F;blue and blue) is used for transmitting data, and the fourth pair (white&#x2F;brown and brown) is used for receiving data.</em></p><p><em>ps:network integrity: using the correct color coding ensures that the pairs are consistently paired for both transmit and receive functions at both ends of the cable. this consistency is crucial for maintaining network integrity, minimizing signal interference, and preventing communication errors.</em></p><h2 id="rollover-cable"><a href="#rollover-cable" class="headerlink" title="rollover cable"></a>rollover cable</h2><p>alias: <strong>console cable</strong></p><p>is used to connect a workstation or terminal to </p><p>the console port of a router&#x2F;switch to configure it</p><p>pin 1 on one end connects to pin 8 on the other end; then pin 2 connects to pin 7, pin 3 to pin 6 and so on</p><h2 id="configuring-devices-with-console"><a href="#configuring-devices-with-console" class="headerlink" title="configuring devices with console"></a>configuring devices with console</h2><p>image example:</p><p><img src="/../img/computernetwork/2-7.png"></p><p>connect the serial port (com) of computer by using rj-45-to-db-9 adapter</p><p>start up “super terminal”</p><p>use “default configurations”</p><h2 id="crossover-cable"><a href="#crossover-cable" class="headerlink" title="crossover cable"></a>crossover cable</h2><p>pairs 2 and 3 on one end of the cable will be reversed on the other end</p><p>t568-a on one end and t568-b on the other</p><p>is considered to be part of the “vertical” cabling&#x2F; backbone</p><p>can be used to </p><ul><li>connect two or more hubs or switches </li><li>connect two isolated workstations to create a mini-lan</li></ul><h2 id="siganling-and-communication-problems"><a href="#siganling-and-communication-problems" class="headerlink" title="siganling and communication problems"></a>siganling and communication problems</h2><p>propagation</p><ul><li><p>travel time; speed depends upon medium</p></li><li><p>as data transmission rates increase, you must sometimes take into account the amount of time it takes the signal to travel.</p></li></ul><p>attenuation</p><ul><li>loss of signal over distance due to surroundings can affect a network because it limits the length of network cabling over which you can send a message</li></ul><p>reflection</p><ul><li><p>caused by discontinuities in the medium</p></li><li><p>occurs in electrical signals; can be a result of kinks in cable or poorly terminatedcables</p></li><li><p>networks should have a specific impedance to </p></li><li><p>match the electrical components in the nics</p></li><li><p>the result of impedance mismatch is reflected energy.</p></li></ul><p>noise</p><ul><li><p>unwanted additions to optical&#x2F;electromagnetic signalscrosstalk—electrical noise from other wires in a cable</p></li><li><p>emi (electromagnetic interference) can be </p></li><li><p>caused by electric motors.</p></li><li><p>cancellation of signals can be avoided through the twisting of wire pairs to provide selfshielding within the network media.</p></li></ul><p>timing problem</p><ul><li><p>dispersion—signal broadens in timecan be fixed by proper cable design, limiting cable lengths, and finding the proper impedance </p></li><li><p>jitter—source and destination not synchronizedcan be fixed through hardware and software<br>including protocols</p></li><li><p>latency—delay of network signal</p></li></ul><h3 id="collisions-and-collision-domains"><a href="#collisions-and-collision-domains" class="headerlink" title="collisions and collision domains"></a>collisions and collision domains</h3><p>a collision occurs when two bits propagate at the same<br>time on the same network.</p><p>collision domains are extended by adding repeaters<br>and hubs.</p><p>networks can be segmented by adding intelligent devices such as bridges, switches, and routers.</p><h2 id="data-communication"><a href="#data-communication" class="headerlink" title="data communication"></a>data communication</h2><p>some terms</p><p>信号(signal)——数据的电气的或电磁的表现。</p><p>“模拟的”(analogous)——消息的参数的取值是连续的</p><ul><li>模拟信号是随时间变化而平稳变化的连续波形式</li></ul><p>“数字的”(digital)——消息的参数的取值是离散的</p><ul><li>数字信号是离散信号，可能包含有限的几个预定值</li></ul><p>码元(code)——在使用时间域（或简称为时域）的波形表示数字信号时，代表不同离散数值的基本波形。</p><p>analog signals can be divided into simple signals and composite signals</p><h2 id="the-highest-transmission-rate-for-noise-free-channels"><a href="#the-highest-transmission-rate-for-noise-free-channels" class="headerlink" title="the highest transmission rate for noise-free channels"></a>the highest transmission rate for noise-free channels</h2><p>$<br>c &#x3D; w \log_2 l bps<br>$</p><h2 id="the-highest-transmission-rate-for-noise-channels"><a href="#the-highest-transmission-rate-for-noise-channels" class="headerlink" title="the highest transmission rate for noise channels"></a>the highest transmission rate for noise channels</h2><p>$<br>c &#x3D; w \log_2 (1 + s&#x2F;n)<br>$</p><h2 id="model"><a href="#model" class="headerlink" title="model"></a>model</h2><p><img src="/../img/computernetwork/2-8.png"></p><h2 id="modulation"><a href="#modulation" class="headerlink" title="modulation"></a>modulation</h2><p><img src="/../img/computernetwork/2-9.png"></p><h2 id="coding"><a href="#coding" class="headerlink" title="coding"></a>coding</h2><p>编码方式可分为三类：<br>（1） 单极性编码</p><p>0电平表示0，正电平表示1</p><p>（2） 极化编码</p><p>nrz(non-return to zero，不归零制码)</p><ul><li><p>负电平表示0，正电平表示1</p></li><li><p>电平反转表示1，电平无变化表示0</p></li></ul><p>rz(return to zero，归零制码)</p><ul><li>负电平表示0，正电平表示1，比特中位跳变到0</li></ul><p>曼彻斯特码</p><ul><li>每一位中间都有一跳变。由低到高位是0，由高到低为1</li></ul><p>差分曼彻斯特码</p><p>每一位中间的跳变表示时钟，每一位位前的跳变表示数据，有跳变表示0，没有跳变表示1</p><p>（3）双极性编码</p><p>双极性传号交替反转码（ami）</p><p>0电平表示0，正负电平跃迁表示1</p><h1 id="多路复用技术"><a href="#多路复用技术" class="headerlink" title="多路复用技术"></a>多路复用技术</h1><p>时分复用tdm(time division multiplexing)</p><p>stdm（static 。。。）</p><p>频分复用fdm(frequency  division multiplexing)</p><p>波分复用wdm(wavelength  division multiplexing)也叫做光的频分复用</p><p>码分复用cdm(code division multiplexing)</p>]]></content>
    
    
    <categories>
      
      <category>computernetwork</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Computernetwork5_upperlayers</title>
    <link href="/2024/01/05/computernetwork5/"/>
    <url>/2024/01/05/computernetwork5/</url>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>应用层的协议很多基于客户服务器方式即P2P方式</p><h1 id="FTP"><a href="#FTP" class="headerlink" title="FTP"></a>FTP</h1><p><strong>文件传输协议FTP（File Transfer Protocol）</strong></p><p>FTP使用客户服务器方式.一个FTP服务器可以同时为多个客户进程提供服务.其分为两大部分:一个是<strong>主进程</strong>,负责接受新的请求;另外有若干个<strong>从属进程</strong>,负责请求单个进程</p><p>工作步骤:</p><p>1)主进程:打开熟知端口(<strong>端口号21</strong>),使得客户进程可以连接上</p><p>2)等待客户进程发送的连接请求</p><p>3)启动从属进程处理客户进程发送来的请求. 从属进程对于客户进程的请求处理完毕以后即终止,但是从属进程在运行期间根据需要还可能创建一些其他子进程</p><p>4)回到等待状体哎,继续接受其他客户进程发送来的请求.其中主进程与从属进程的处理是并发进行的</p><p>也就是说FTP和服务器之间要建立两个并行的TCP连接“控制连接”“数据连接”</p><p><img src="/../img/computernetwork/5-3.png" alt="two-TCP"></p><p>FTP的控制信息是带外的(out of band)</p><p>当客户进程向服务器进程发出建立连接请求的同时,需要寻找服务器进程的熟知端口21,同时还要告诉服务器自己的一个端口号码,用于建立,数据连接.</p><p>接着服务器用自己传输数据的熟知端口20与客户进程所提供的另外一个端口号建立数据传输连接</p><h1 id="NFS"><a href="#NFS" class="headerlink" title="NFS"></a>NFS</h1><p>NFS允许进程打开一个远地文件,并且能在该文件的某一个特定的位置开始读写</p><h1 id="TFTP-Trivial-File-Transfer-Protocol"><a href="#TFTP-Trivial-File-Transfer-Protocol" class="headerlink" title="TFTP(Trivial File Transfer Protocol)"></a>TFTP(Trivial File Transfer Protocol)</h1><p>简单文件传送协议TFTP</p><p>使用UDP数据报而不是TCP</p><p><strong>1) 每次传送的数据报文总有512字节的数据,最后一次可以不满512字节</strong></p><p><strong>2) 数据报文按照序号编号,从1开始</strong></p><p><strong>3) 支持ASCII码或者二进制传送</strong></p><p><strong>4) 可以对文件进行读写</strong></p><p><strong>5) 使用简单的首部</strong></p><p>TFTP服务器建立连接的熟知端口一般是69,数据传输的端口(未知?)</p><p>具体的实现类似于停止等待协议，即在更上层的部分实现了TCP的功能。</p><h1 id="TELNET"><a href="#TELNET" class="headerlink" title="TELNET"></a>TELNET</h1><p>终端仿真协议</p><p>通过NVT(Network Virtual Terminal)把用户的键击和命令转换为NVT格式进行传输,再还原</p><p>1 + 7bit一个字节传输ASCII码,其中最高位作为控制位</p><h1 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h1><h2 id="万维网www（world-wide-web）"><a href="#万维网www（world-wide-web）" class="headerlink" title="万维网www（world wide web）"></a>万维网www（world wide web）</h2><p>万维网使用 <strong>统一资源定位符URL（Uniform Resoure Locater）</strong> 来标志万维网上的各个文档</p><p><strong>超文本标记语言HTML（HyperText Markup Language）</strong></p><p>一般由&lt;协议&gt;:&#x2F;&#x2F;&lt;主机&gt;:&lt;端口&gt;&#x2F;&lt;路径&gt;</p><p>一些浏览器为了方便用户,有时会把www省略</p><p>http的<strong>默认端口是80</strong>，因此通常可以省略，如果再URL中再省略&lt;路径&gt;选项则默认指向一个主页（home page）</p><h2 id="http详细内容"><a href="#http详细内容" class="headerlink" title="http详细内容"></a>http详细内容</h2><p>HTTP是 <strong>面向事务的（transaction-oriented）</strong></p><p>每一个万维网网点都有一个服务器进程，不断监听TCP的端口80.一旦接听到连接请求并且建立的TCP连接以后，浏览器就像万维网服务器发送浏览某个页面的请求服务器就返回所请求的页面作为响应，然后TCP连接就被释放了。</p><p>http规定http客户和http服务器的每次交互都由一个ASCII码串构成</p><p>http协议使用tcp，但是http协议本身是无连接的，也是无状态的(stateless)</p><ul><li><p>非持续链接HTTP&#x2F;1.0</p></li><li><p>持续链接HTTP&#x2F;1.1</p></li></ul><p>1)非流水线用户收到前一个响应才能发出下一个请求</p><p>2）流水线，用户再收到响应报文前就可以接着发送新的请求报文</p><h2 id="代理服务器（proxy-server）"><a href="#代理服务器（proxy-server）" class="headerlink" title="代理服务器（proxy server）"></a>代理服务器（proxy server）</h2><p>一种网络实体，称之为 <strong>万维网高速缓存（Web cache）</strong></p><p>代理服务器把最近的一些请求和响应暂存在本地磁盘中</p><p><strong>1）校园网中的计算机中的浏览器向互联网中的服务器请求服务时，先和校园网的代理服务器建立TCP链接，并且向代理服务器放出HTTP请求报文</strong></p><p><strong>2）若代理服务器已经存放了所请求的对象，代理服务器就把这个给对象放入http响应报文中返回</strong></p><p><strong>3）否则代理服务器就代表发送请求的用户浏览器，与互联网上的源服务器（origin server）建立TCP链接，发送http请求报文</strong></p><p><strong>4）源服务器返回</strong></p><p><strong>5）代理服务器先储存，在与校园内的计算机建立连接</strong></p><h2 id="HTTP报文结构"><a href="#HTTP报文结构" class="headerlink" title="HTTP报文结构"></a>HTTP报文结构</h2><p>有两类报文：</p><p><strong>请求报文：从客户向服务器发送请求报文</strong></p><p><strong>响应报文：从服务器到客户的回答</strong></p><p>http是面向文本的（text-oriented）所以报文中每一个字段都是一些ASCII码</p><p><img src="/../img/computernetwork/5-4.png"></p><p>1）<strong>开始行</strong>，用于区分请求报文还是响应报文，请求报文中叫做请求行，响应报文中叫做状态行</p><p>2）<strong>首部行</strong>，用于说明浏览器服务器或者报文主体的一些信息。可以有好几行</p><p>3）<strong>实体主体</strong> 一般不用</p><ul><li>请求报文</li></ul><p><img src="/../img/computernetwork/5-5.png"></p><p><img src="/../img/computernetwork/5-6.png"></p><ul><li>响应报文</li></ul><p><img src="/../img/computernetwork/5-7.png"></p><h2 id="存放用户信息"><a href="#存放用户信息" class="headerlink" title="存放用户信息"></a>存放用户信息</h2><p>http是无状态的，但是可以利用cookie来进行记录</p><p>当一个用户访问一个网站时，网站服务器生成并且储存一个识别码并且将其发回用户，以后用户的每一个http报文都携带这个识别码</p><h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><p>…</p><h1 id="SMTP-Simple-Mail-Transfer-Protocol"><a href="#SMTP-Simple-Mail-Transfer-Protocol" class="headerlink" title="SMTP(Simple Mail Transfer Protocol)"></a>SMTP(Simple Mail Transfer Protocol)</h1><p><strong>简单邮件传送协议SMTP（Simple Mail Transfer Protocol）</strong></p><p><img src="/../img/computernetwork/5-1.png"></p><p>一个电子邮件系统应该具有三个主要组成构建， <strong>用户代理UA(User Agent)</strong> ， <strong>邮件服务器</strong> ， <strong>邮件发送协议（SMTP）</strong> 和 <strong>邮件读取协议</strong></p><p><img src="/../img/computernetwork/5-8.png"></p><p>主要过程：</p><p><strong>1. 连接建立</strong></p><p><strong>2. 邮件传送</strong></p><p><strong>3. 连接释放</strong></p><h2 id="MIME-Multiperpose-Internet-Mail-Extensions"><a href="#MIME-Multiperpose-Internet-Mail-Extensions" class="headerlink" title="MIME(Multiperpose Internet Mail Extensions)"></a>MIME(Multiperpose Internet Mail Extensions)</h2><p><img src="/../img/computernetwork/5-13.png"> </p><p>MIME-Version:</p><p>Content-Description:</p><p>Content-Id:</p><p>Content-Transfer-Encoding:</p><p>对于表示ascii的字符，对于其每个字节转化为十六进制字符，再在前面加上一个&#x3D;，将这个三个字符作为一个整体传输</p><p>11001111 10110101 11001101 10110011</p><p>&#x3D;CF&#x3D;B5&#x3D;CD&#x3D;B3  </p><h3 id="base64编码"><a href="#base64编码" class="headerlink" title="base64编码"></a>base64编码</h3><p>切分成24位的单元，再切分为6bit组利用A-ZA-Z0-9+&#x2F; 表示出0-63再用两个连载一起的等号和一个等号表示最后一组的代码只有8bit或者16bit。忽略回车和换行，他们可以在任意地方插入</p><p>Content-Type:</p><p><img src="/../img/computernetwork/5-9.png"></p><h2 id="UA-User-Agent"><a href="#UA-User-Agent" class="headerlink" title="UA(User Agent)"></a>UA(User Agent)</h2><p>用户代理，时用户与电子邮件系统的接口，大多数情况时用户电脑的一个程序（电子邮件客户端软件）</p><h2 id="邮件服务器"><a href="#邮件服务器" class="headerlink" title="邮件服务器"></a>邮件服务器</h2><p>每个邮件服务器必须能同时充当客户和服务器</p><p>并且用户代理和邮件服务器以及邮件服务器之间的连接都是基于STMP以及TCP的</p><h2 id="电子邮件格式"><a href="#电子邮件格式" class="headerlink" title="电子邮件格式"></a>电子邮件格式</h2><p>由信封（envelope）以及内容（content）</p><p>信封</p><p>用户@邮件服务器域名</p><h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><ol><li><p>连接建立</p></li><li><p>邮件传送</p></li></ol><h1 id="POP"><a href="#POP" class="headerlink" title="POP"></a>POP</h1><p>…</p><h1 id="IMAP"><a href="#IMAP" class="headerlink" title="IMAP"></a>IMAP</h1><p>…</p><h1 id="SNMP-Simple-Network-Management-Protocol"><a href="#SNMP-Simple-Network-Management-Protocol" class="headerlink" title="SNMP(Simple Network Management Protocol)"></a>SNMP(Simple Network Management Protocol)</h1><p><strong>简单网络管理协议 SNMP(Simple Network Management Protocol)</strong></p><p>…</p><h1 id="Domain-Name-System-DNS"><a href="#Domain-Name-System-DNS" class="headerlink" title="Domain Name System (DNS)"></a>Domain Name System (DNS)</h1><p>The Domain Name System (DNS) is a service on a network that manages domain names and responds to requests form clients to translate a domain name into the associated IP address</p><p>for example:</p><p><a href="http://www.sina.com/">www.sina.com</a></p><p>3-lever domain . 2-lever domain . Top lever domain</p><p>每一个域名都由标号（label）组成</p><p>DNS 规定域名中的标号都由英文和字幕组成，每一个标号不超过63字符，也不区分大小写字母</p><p>级别低的域名写在左边，级别高的写在右边，总域名不超过255个字符</p><h2 id="顶级域名TLD-Top-Level-Domain"><a href="#顶级域名TLD-Top-Level-Domain" class="headerlink" title="顶级域名TLD(Top Level Domain)"></a>顶级域名TLD(Top Level Domain)</h2><p>分类：</p><ul><li><strong>Nation TLD(nTLD)</strong></li></ul><p>.cn .us .uk …</p><ul><li><strong>Generic TLD(gTLD), the earliest</strong> domains include</li></ul><p>.com Enterprises and Companies</p><p>.net Network services providers</p><p>.org Nonprofit organizations</p><p>.edu Educational facilities(us)</p><p>.gov Governments(us)</p><p>.mil Military facilities(us)</p><p>.int International organizations</p><p>…(some new added)</p><ul><li><strong>Infrastructure domain</strong></li></ul><p>only one: arpa for resolving domain names reversely</p><h2 id="二级域名"><a href="#二级域名" class="headerlink" title="二级域名"></a>二级域名</h2><p>由国家自行决定,我国将二级域名分为“类别域名”“行政域名”</p><p>如：ac com edu gov mil net org</p><p>域名树的树叶即使单台计算机的名字</p><h2 id="域名服务器Domain-Name-Server-DNS"><a href="#域名服务器Domain-Name-Server-DNS" class="headerlink" title="域名服务器Domain Name Server (DNS)"></a>域名服务器Domain Name Server (DNS)</h2><p>The DNS system is set up in a hierarchy that creates different levels of DNS servers.</p><p>The DNS server at this level judges if itself is able to translate the domain name into an associated IP address:</p><ul><li><p>if it can: it does so and returns the result to the client</p></li><li><p>if it can’t: it sends the request to the higher level</p></li></ul><p>一个服务器所负责管辖的范围叫做 <strong>（区）（zone）</strong> ，各个单位根据具体的情况划分自己管辖分为的区，（在所构成的树形图中，各个节点必须是联通的）每一个区设置相应的权限域名服务器 <strong>（authoritative name server）</strong> </p><p>可以把域名服务器划分为以下四种不同的类型：</p><p><strong>1. 根域名服务器（root name server）</strong></p><p>知道所有顶级域名服务器的域名和IP地址，目前所有根域名服务器使用的域名只有13个，实际上是13组根域名服务器可以用A-M来依次表示，其中，每一组服务器都包含若干个镜像服务器，分布在全世界。</p><p><strong>2. 顶级域名服务器（TLD）服务器</strong></p><p>负责管理该顶级域名服务器注册的所有二级域名</p><p><strong>3. 权限域名服务器。</strong></p><p>管理一个区的域名服务器。当以一个权限域名服务器还不能给出最后的查询回答的时候，就会告诉发出查询请求的DNS用户，下一步应该查询哪个权限域名服务器。</p><p><strong>4. 本地域名服务器（local name server）</strong></p><p>有时也称作默认域名服务器</p><h2 id="域名服务器数据的保存"><a href="#域名服务器数据的保存" class="headerlink" title="域名服务器数据的保存"></a>域名服务器数据的保存</h2><p>为了提高可靠性，DNS域名服务器通常把数据复制到几个域名服务器保存，其中一个是 <strong>主域名服务器（master name server）</strong> ，其他的是 <strong>辅助域名服务器（secondary name server）</strong></p><h2 id="域名解析的过程"><a href="#域名解析的过程" class="headerlink" title="域名解析的过程"></a>域名解析的过程</h2><p><strong>1.递归查询（recursive query）</strong></p><p>本地域名服务器如果不知道,就代替主机查询根服务器,依次类推</p><p><strong>2.迭代查询 (iterative query)</strong></p><p>本地服务器查询根服务器,根服务器给出下一步应该查询的顶级域名服务器IP,顶级域名服务器要门给出要查询的IP的地址(根服务器只能给出下一步因为没有其他的数据),要门给出下一步应该查询哪个权限域名服务器.</p><p>具体哪种取决于设置</p><h2 id="高速缓存域名服务器"><a href="#高速缓存域名服务器" class="headerlink" title="高速缓存域名服务器"></a>高速缓存域名服务器</h2><p>在域名服务器中广泛使用高速缓存存放最近查询过的域名以及从何处获得域名映射信息的记录,(有生存时间)</p><p><img src="/../img/computernetwork/5-2.png" alt="DNS_example"></p><h1 id="DHCP-Dynamic-Host-Configuration-Protocol"><a href="#DHCP-Dynamic-Host-Configuration-Protocol" class="headerlink" title="DHCP (Dynamic Host Configuration Protocol)"></a>DHCP (Dynamic Host Configuration Protocol)</h1><p><strong>动态主机配置协议：DHCP (Dynamic Host Configuration Protocol)</strong></p><p><img src="/../img/computernetwork/5-14.png"></p><p>协议配置需要配置的项目有：</p><p><strong>1）IP地址</strong></p><p><strong>2）子网掩码</strong></p><p><strong>3）默认路由器的IP地址</strong></p><p><strong>4）域名服务器的IP地址</strong></p><p>DHCP允许即插即用（plug-and-play networking）</p><p>使用客户服务器方式</p><p>需要IP地址的主机在启动时就像DHCP服务器广播发送 <strong>发现报文（DHCPDISCOVER）（255.255.255.255）</strong></p><p>此时主机还没有自己的IP地址，因此他将IP数据报的源IP地址全设置为0</p><p>DHCP服务器对此广播报文进行回答。DHCP先在其数据库中查找此计算机的配置信息，若找到，则返回找到的信息，若找不到，则从服务器的 <strong>IP地址池（address pool）</strong> 中取一个地址分配给该计算机。DHCP服务器的回答报文叫做 <strong>提供报文（DHCPPOFFER）</strong> </p><p>每一个网络至少有一个DHCP中继代理（relay agent），通常是一条路由器，配置了DHCP服务器的IP信息当其收到了A的广播以后就以单播的形式向DHCP服务器转发这条报文，然后得到结构以后再转发回去。</p><p>DHCP是基于UDP的。</p><p>注意DHCP的客户端口是68而服务器端口是67，这两个都是熟知端口。</p><p>DHCP服务器使用租用期进行管理（lease period）</p><p><img src="/../img/computernetwork/5-10.png"></p>]]></content>
    
    
    <categories>
      
      <category>computernetwork</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Computernetwork4_transportlayer</title>
    <link href="/2024/01/05/computernetwork4/"/>
    <url>/2024/01/05/computernetwork4/</url>
    
    <content type="html"><![CDATA[<h1 id="运输层的两个主要协议"><a href="#运输层的两个主要协议" class="headerlink" title="运输层的两个主要协议"></a>运输层的两个主要协议</h1><p><strong>用户数据报协议UDP（User Datagram Protocol）</strong></p><p><strong>传输控制协议TCP（Transmission Control Protocol）</strong></p><p>按照OSI的术语，两个对等运输实体在通信的时候传送的数据单位叫做 <strong>运输协议数据单元TPDU(Transport Protocol Data Unit)</strong></p><p>但是在T..&#x2F;img&#x2F;IP体系中，则根据所使用的协议是TCP或者UDP，分别称之为 <strong>TCP报文段（segemnt）</strong> 或者UDP用户数据报。</p><p>UDP在传送数据之前不需要建立连接。远地主机在接受到以后不需要给出任何确认</p><p>TCP提供面向连接的服务。</p><p><img src="/../img/computernetwork/4-1.png"></p><p>应用层所有应用进程都可以通过运输层在传送到IP层，这就是复用</p><p>反过来运输层接受到各个应用进程的数据以后必须交付指明的应用进程，这就是分用</p><p>协议端口号，简称为 <strong>端口（protocol port number）</strong></p><p>T..&#x2F;img&#x2F;IP运输层使用一个16bit的端口号来标志一个端口，但是端口号只具有本地意义。16bit意味着可以有65535个不同的端口号。</p><ol><li>服务器端使用的端口号{<br>  <strong>熟知端口号（well-kown port number）</strong> 或者叫做系统端口甚至为0-1023<br>  <strong>登记端口</strong> 数值为1024-49151。必须在IANA按照规定的手续登记，防止重复。<br>}</li></ol><p><img src="/../img/computernetwork/4-2.png"></p><ol start="2"><li>客户端使用的端口号{<br>  短暂端口：仅仅在客户进程运行的时候才动态选择数值为49152-65535<br>}</li></ol><h1 id="UDP（User-Datagram-Protocol）"><a href="#UDP（User-Datagram-Protocol）" class="headerlink" title="UDP（User Datagram Protocol）"></a>UDP（User Datagram Protocol）</h1><p>只在IP的数据报服务上增加了很少的功能，主要是复用以及分用的功能以及差错检测的功能。</p><p>特点</p><ol><li><p><strong>无连接的</strong></p></li><li><p><strong>尽最大努力交付的</strong></p></li><li><p><strong>面向报文的</strong> :发送方的UDP对应用程序交付的报文，在添加首部后就向下交付IP层,既不合并，也不拆分</p></li><li><p><strong>没有拥塞控制</strong></p></li><li><p><strong>支持一对一，一对多，和多对一的交互通信</strong></p></li><li><p><strong>UDP的首部开销小</strong></p></li></ol><h2 id="UDP的首部格式"><a href="#UDP的首部格式" class="headerlink" title="UDP的首部格式"></a>UDP的首部格式</h2><p><img src="/../img/computernetwork/4-3.png"></p><p>包括</p><ol><li><p><strong>源端口</strong> （需要回信的时候选用，不需要的时候可以全用0）</p></li><li><p><strong>目的端口</strong></p></li><li><p><strong>长度</strong>  UDP用户数据报的长度，min8</p></li><li><p><strong>检验和</strong> 如果接收方UDP发现收到的报文中的目的端口号不正确或者在目的主机中不存在，就丢弃该报文并且有TCMP发送端口不可达的差错报文给发送方。伪首部既不向下传递也不向上递交，只是用来计算检验和。IP数据报只检验IP数据报的首部，UDP检验是把首部和数据部分一起检验：将加入伪首部的UDP划分为16bit的组按照二进制反码的规则求和再取反码写入检验和，接收方对检验和与其他数据做相同操作，若没有错误则得到全1</p></li></ol><p><img src="/../img/computernetwork/4-4.png"></p><h1 id="TCP（Transmission-Control-Protocol）"><a href="#TCP（Transmission-Control-Protocol）" class="headerlink" title="TCP（Transmission Control Protocol）"></a>TCP（Transmission Control Protocol）</h1><ol><li><p><strong>TCP是面向连接的运输层协议</strong></p></li><li><p><strong>每一条TCP连接只能由两个端点(endpoint)</strong></p></li><li><p><strong>TCP提供可交付服务，无差错，不丢失，不重复，并且按序到达</strong></p></li><li><p><strong>TCP提供全双工通信：通信双方在任何时候都能发送数据。TCP的连接双端都设由发送和接受缓存。</strong></p></li><li><p><strong>面向字节流</strong></p></li></ol><p><img src="/../img/computernetwork/4-5.png"></p><h2 id="TCP连接"><a href="#TCP连接" class="headerlink" title="TCP连接"></a>TCP连接</h2><p>TCP连接的端口叫做 <strong>套接字（Socket）</strong> </p><h1 id="可靠传输的工作原理"><a href="#可靠传输的工作原理" class="headerlink" title="可靠传输的工作原理"></a>可靠传输的工作原理</h1><h2 id="停止等待协议"><a href="#停止等待协议" class="headerlink" title="停止等待协议"></a>停止等待协议</h2><p><strong>（1）无差错情况</strong></p><p><img src="/../img/computernetwork/4-11.png"></p><p>传送 to 确认，传送 to 确认</p><p><strong>（2）出现差错</strong></p><p>可能是B接受的时候发现出了差错，或者B就没有接受到数据，数据丢失。</p><p>B接受到错误的数据分组或者没有接收到数据分组，都不发送确认</p><p>A设置一个超时计时器，如果收到确认就撤销其计时器，如果超时就重传。</p><ul><li><p>A发送完一个分组以后，必须保存已经发送的分组副本，只要收到相应的确认以后才能清除分组</p></li><li><p>分组和确认分组都必须进行编号，这样才能确认哪一个发送出去的分组收到了确认，哪一个没有。</p></li><li><p>超时计时器的设置的重传时间应该比数据再分组传输的平均往返时间长一点。</p></li></ul><p><strong>（3）确认丢失和确认迟到</strong></p><p>A没有收到确认，可能是A的发送错误，A的发送丢失，也可能是A的发送正确但是B的确认在传送过程中丢失了</p><p>此时A无法分辨，于是A只能重新传送这个分组</p><p>如果是上述确认丢失的情况</p><p>B</p><ol><li><p>丢弃这个重复的分组，而不向上层交付</p></li><li><p>向A发送确认.</p></li></ol><p>如果是上述确认迟到的情况</p><p>对于A来说，也可能出现出现收到重复的确认的情况，这种情况A直接丢弃</p><p>如果A 总是收不到确认，说明通信线路太差</p><p>上述称之为 <strong>ARQ自动重传请求（Automatic Repeat reQuest）</strong> </p><p>(<em>ps:基本原理就是A一旦受到B的确认就可以认为B已经收到了报文，所有重复的确认和重复的报文都会被丢弃，知道A某一个时刻能够知晓。A只需要确定B，B不需要知道A有没有收到分组，应为发送权在A</em>)</p><h3 id="信道利用率"><a href="#信道利用率" class="headerlink" title="信道利用率"></a>信道利用率</h3><p><img src="/../img/computernetwork/4-6.png"></p><p>$U ..&#x2F;img&#x2F;frac{T_D}{T_D + RTT +T_A}$</p><p>流水线传输法可以优化信道利用率如下：</p><h2 id="连续ARQ协议"><a href="#连续ARQ协议" class="headerlink" title="连续ARQ协议"></a>连续ARQ协议</h2><p>此处只是简介：</p><p><img src="/../img/computernetwork/4-7.png"></p><p>窗口内的分组可以连续发送，当发送方收到一个确认以后，九八发送窗口向前滑动一个分组的位置。</p><p><strong>累计确认</strong>：接收方不必对收到的分组诸葛发送确认，二十可以在收到几个分组以后，对按顺序到达的最后一个分组发送确认。即到这个分组为止的分组已经全部被确认了。</p><h1 id="TCP-报文格式"><a href="#TCP-报文格式" class="headerlink" title="TCP 报文格式"></a>TCP 报文格式</h1><p>分为首部和数据两个部分</p><p>首部的前 <strong>20个byte</strong> 是固定的后面的4n个byte是增加的选项</p><p>首部的固定部分各个字段的意义如下：</p><ol><li><p><strong>源端口和目的端口</strong>(TCP的连接时基于套接字的但是IP部分是由IP层封装实现的)</p></li><li><p><strong>序号</strong> 占4byte一，一共4294867296个。一个TCP连接中传送的字节流中的<strong>每一个字节</strong>都按照顺序编号，整个要传送的字节流的起始序号必须在建立连接的时候设置。首部中的序号字段值值得是本报文所发送数据的第一个字节的序号。这个字段也叫做报文段序号</p></li><li><p><strong>确认号：</strong> 占4个Byte，是 <strong>期望收到对方下一个报文段的第一个数据字节的序号。</strong> 由于序号字段由32bit长，所以一共可以支持2^32 * byte（4GB）的内容传输。一般可以确定当序号重复使用的时候，旧序号的数据早就通过网络到达终点里。</p></li><li><p><strong>数据偏移占有4bit</strong>，指出TCP报文段的数据起始出距离TCP报文段的起始处有多远，这个字段实际上是指出TCP报文段的首部长度。注意数据偏移的单位是32bit，即4个byte，由此可见数据偏移的最大值是60Byte，这也是TCP的首部的最大长度。</p></li><li><p><strong>保留</strong> 占6bit，保留为今后使用，但是目前应该设置为0</p></li><li><p><strong>紧急URG（URGent）</strong> 当URG &#x3D; 1的时候，表明紧急指针字段有效，告诉系统报文中有紧急数据，应该尽快传送（高优先级数据），而不需要按照原来的排队顺序传送。此时，发送方就把紧急数据插入到本报文数据的最前面，在紧急数据后面的数据仍然是普通数据。这是和首部中的紧急指针字段配合使用</p></li><li><p><strong>确认ACK（ACKnowledegment）</strong> 仅当ACK &#x3D; 1的时候字段才有效。tcp建立以后所有传送的报文都必须把ACK置1</p></li><li><p><strong>推送PSH（Push）</strong> 当两个进程交互式的通信的时候有时在一段的应用进程希望在键入一个命令以后就能立刻收到对方的相应。在此情况下TCP就可以使用推送操作，并且立即创建一个报文发送出去。接收方在收到此报文以后就尽快的推送向前交付接受应用进程，而不再等到整个缓存都填满了了再向上交互</p></li><li><p><strong>复位RST（Reset）</strong>  若此bit为1，则表示TCP连接中出现严重差错，必须释放连接再重新建立运输连接</p></li><li><p><strong>同步SYN（SYNchronization）</strong> 连接建立的时候用来同步序号，当SYN &#x3D; 1而ACK &#x3D; 0的时候表明这是一个请求连接报文对方如果同意建立连接则再响应报文中使得SYN &#x3D; 1， ACK &#x3D; 1</p></li><li><p><strong>终止FIN</strong>  用于释放一个连接，当FIN &#x3D; 1的时候，表明此报文段的发送方的数据已经发送完毕，并且要求释放运输连接。</p></li><li><p><strong>窗口</strong> 窗口值是发送本报文段的一方的接受窗口。从本报文首部中的确认号算起，接收方目前允许对方发送的数据量（以<strong>字节</strong>为单位）。</p></li><li><p><strong>检验和</strong> 占2字节，先在TCP报文段的前面加上12byte的伪首部（和UDP一样）</p></li><li><p><strong>紧急指针</strong> 仅仅在URG &#x3D;  1的时候才有意义，指出了本报文段中的紧急数据的字节数</p></li><li><p><strong>选项</strong> 剩余的可变4nbyte的选项。</p></li></ol><h1 id="TCP可靠传输的实现"><a href="#TCP可靠传输的实现" class="headerlink" title="TCP可靠传输的实现"></a>TCP可靠传输的实现</h1><h2 id="以字节为单位的滑动窗口"><a href="#以字节为单位的滑动窗口" class="headerlink" title="以字节为单位的滑动窗口"></a>以字节为单位的滑动窗口</h2><p>接受会先把自己的接受窗口数值放在接受字段中发送给对方，所以发送方的发送窗口一定不能超过B的接受窗口的数值。此外A的发送窗口的数值也取决于网络的拥堵程度。</p><p>发送窗口的前沿也有可能向后受说，这发生在对方通知窗口缩小了。但是TCP标准强烈不赞成这样做。</p><p>由此可见描述一个发送窗口需要三个指针P1P2P3</p><p>小于P1的是已经发送并且受到确认的部分大于P3的是不允许发送的部分</p><p>P3-P1是发送窗口</p><p>P2-P1是已经发送但是还没有受到确认的字节</p><p>P3-P2是允许发送但是还没有发送的字节数（又称之为可用窗口或者有效窗口）</p><p><img src="/../img/computernetwork/4-12.png"></p><p>注意：应用程序必须控制内阁制写入缓存的速率不能太快，否则发送缓存就会没有存放数据的空间。</p><h2 id="超时重传的选择"><a href="#超时重传的选择" class="headerlink" title="超时重传的选择"></a>超时重传的选择</h2><p>RTT的计算</p><p>$newRTT_s &#x3D; (1 - \alpha) \times ( old RTT_S ) + \alpha \times (new RTT)$</p><p>RTO计算 </p><p>$RTO &#x3D; RTT_S + 4 \times RTT_D$</p><p>$new RTT_D &#x3D; (1- \beta) \times (old RTT_D) + \beta \times |RTT_S - NEW rtt|$</p><p>在计算加权平均RTTS时候，只要报文重传了，就不采用其往返时间。这样得出的RTTS和RTO就比较准确</p><h2 id="选择确认SACK（Selective-ACK）"><a href="#选择确认SACK（Selective-ACK）" class="headerlink" title="选择确认SACK（Selective ACK）"></a>选择确认SACK（Selective ACK）</h2><p>如何之传送缺少的数据而不传送已经正确收到的数据？</p><p>显然和前后字节不连续的每一个字节块都有两个边界左边界和有边界，可以指明其范围[numl,numright).</p><p>可以在建立TCP连接的时候在首部加上SACK选项</p><h1 id="TCP的流量控制"><a href="#TCP的流量控制" class="headerlink" title="TCP的流量控制"></a>TCP的流量控制</h1><h2 id="利用滑动窗口实现流量控制。"><a href="#利用滑动窗口实现流量控制。" class="headerlink" title="利用滑动窗口实现流量控制。"></a>利用滑动窗口实现流量控制。</h2><p>然而可能出现这种情况：B发送了一一个0窗口报文后A进入等待，一段时间后B又发出了一个100窗口报文但是这个报文丢失了，于是AB都在互相等待对方的回复</p><p>因此TCP为每一个连接设置了一个持续计时器（Persistence timer）只要又乙方收到0窗口报文就自动启动，但后定时发送一个零窗口探测报文（只有1byte的数据部分）</p><h2 id="TCP的传输效率"><a href="#TCP的传输效率" class="headerlink" title="TCP的传输效率"></a>TCP的传输效率</h2><p>维护一个变量等于最大报文长度MSS，当缓存中存放的数据达到MSS字节的时候，就组装成一个TCP报文发送出去。第二种机制是发送方的的应用指明要发送的报文段。即TCP支持PUSH操作。第三种是发送方的一个计时器期限到了，这时候就把当前已经有的数据装入报文段（不超过MSS）发送出去</p><h1 id="TCP拥塞控制"><a href="#TCP拥塞控制" class="headerlink" title="TCP拥塞控制"></a>TCP拥塞控制</h1><p>算法主要有四种 <strong>慢开始（slow-start）</strong> <strong>拥塞避免（congestion avoidance）</strong> ， <strong>快重传（fast retransmit）</strong> 和 <strong>快恢复（fast recovery）</strong></p><ol><li>慢开始与拥塞避免</li></ol><p>发送方控制一个拥塞窗口的变量cwnd，发送方让自己的窗口等于拥塞窗口</p><p>如何设置？</p><p><img src="/../img/computernetwork/4-13.png"></p><p>见SMSS</p><p>在收到对一个新的报文段的确认以后，就可以把拥塞窗口增加最多一个SMSS数值</p><p>慢开始门限ssthresh</p><p>当cwnd &lt; ssthresh时使用慢开始算法</p><p>大于时使用拥塞避免算法</p><p>等于时两者都可</p><p>采用快重传算法可以让发送方尽早知道发生了个别报文的丢失。快重传算法首先要求接收方不要等待自己发送数据时才能进行捎带确认，而是要立即发送确认，即使是收到了失序的报文段也要立即发出对已经收到的报文段的重复确认</p><p>综合考虑发送方的窗口创先值 &#x3D; Min[rwnd,cwnd]</p><h3 id="AQM"><a href="#AQM" class="headerlink" title="AQM"></a>AQM</h3><p><strong>Active Queue Management.</strong></p><p>路由器在队列长度已经到达最大值的时候才不得不丢弃后面到达的分组太过于被动，以哦那个此在队列长度已经达到某个值得警惕的数值的时候就主动丢弃到达的分组。</p><p><strong>RED（random early detections）</strong></p><p>路由器维持两个参数，队列最小门限和最大门限，每当一个分组到达的时候RED就按照规定的算法计算当前的平均队列长度。</p><p>(1)如果平均队列长度小于最小门限，则把新到达的分组放入队列进行排队</p><p>(2)如果平均长度超过最大门限，则把型到达的分组丢弃</p><p>(3)如果平均队列长度在最小门限和最大门限之间，则按照某一丢弃概率p把新到达的分组丢弃</p><h1 id="TCP的运输连接管理"><a href="#TCP的运输连接管理" class="headerlink" title="TCP的运输连接管理"></a>TCP的运输连接管理</h1><p>三个阶段：<strong>连接建立</strong>，<strong>数据传送</strong>，<strong>连接释放</strong></p><h2 id="连接建立三次握手"><a href="#连接建立三次握手" class="headerlink" title="连接建立三次握手"></a>连接建立三次握手</h2><p><img src="/../img/computernetwork/4-14.png"></p><p>一开始B的TCP服务器线创建传输控制块TCB准备接受客户进程的连接请求，然后服务器进程就处于<strong>LISTEN</strong>状态，等待客户的连接请求</p><p>A的TCP客户进程也是首先创建传输控制模块<strong>TCB</strong>.然后再打算建立TCP的时候向B发送连接请求报文此时首部中的同步位SYN&#x3D;1同时选择一个初始序号seq&#x3D;x TCP规定SYN报文段不能携带数据，但是要消耗掉一个序号。这时，TCP客户程序进入SYN-SENT（同步已发送）状态</p><p>B收到连接请求报文以后如果同意建立连接，则向A发送确认，并且再确认报文中把SYN和ACK位都置为1，ack &#x3D; x + 1，同时也为自己选择一个初始序号seq &#x3D; y，这个报文也不携带数据但是也要消耗掉一个序号。此时TCP服务器进程进入到SYN-RCVD（同步收到）的状态</p><p>TCP客户进程在接收到B的确认以后还要向B给出确认，确认报文段的ACK置为1，确认号ack &#x3D; y + 1自己序号为x+1 TCP规定ACK报文端可以携带数据但是不过如果不携带数据则不消耗序号，在这种情况下下一个数据报文的序号仍然是seq &#x3D; x + 1</p><p>此时A进入已经建立连接状态（ESTABLISH）B在收到A的回送报文ACK以后也进入ESTABLISH状态</p><p>三次握手主要是防止已经失效的连接请求报文重新传送到B使得B单方面开启连接，导致B的资源被浪费。</p><h2 id="TCP连接释放"><a href="#TCP连接释放" class="headerlink" title="TCP连接释放"></a>TCP连接释放</h2><p><img src="/../img/computernetwork/4-15.png"></p><p>首先A发送连接释放报文，其首部的终止控制位FIN为1，序号为前面传输过的数据的最后一个字节的序号+1然后A停止发送数据并且进入<strong>FIN-WAIT-1</strong>的状态。注意：连接释放报文不携带数据，但是它也消耗一个序号。</p><p>B收到连接释放报文后发出确认ack &#x3D; u+ 1而这个报文自己的序号时v等于B前面已经传送过的数据的最后一个字节序号+1，然后B就进入<strong>CLOSE-WAIT</strong>状态。此时TCP服务器通知高层应用进程，因而从A到B的这个方向的连接就释放了，</p><p>此时处于半关闭状态即A没有数据传给B了。但是B仍然可能有数据传给A。</p><p>A收到B的确认以后就会进入FIN-WAIT-2状态。等待B发出的连接释放报文。</p><p>如果B已经没有要向A发送的数据，那么其应用进程就通知TCP释放连接。此时B发出的连接释放报文必须是的FIN&#x3D;1。假定B的序号为W，此时B还必须重复上次已经发送过的确认号ack&#x3D;u+1（应为A已经没有数据发送了）.此时B就进入了LAST-ACK（最后确认状态）</p><p>A在收到B的连接释放报文以后必须对此也发出确认。在确认报文中把ACK置为1，确认号ack &#x3D; w +1自己的而序号为u+1然后进入到TIME-WAIT时间。必须等到时间等待计时器（TIME-WAIT timer）设置的时间2MSL以后A才进入到CLOSED的状态。</p><p>时间 <strong>MSL（最长报文段寿命 Maximum Segment Lifetime）</strong> </p><p><img src="/../img/computernetwork/4-16.png"></p><h1 id="NAT-And-PAT"><a href="#NAT-And-PAT" class="headerlink" title="NAT And PAT"></a>NAT And PAT</h1><p>NAT is the process of swapping one address for another in the IP packet header</p><h2 id="NAT-types"><a href="#NAT-types" class="headerlink" title="NAT types"></a>NAT types</h2><p>**Static NAT:**Fixed Mapping</p><p><strong>Dynamic NAT:</strong> Mapping is done dynamically on a first come first served basis</p><p><strong>PAT</strong> Port address translation is used to allow many internal users to share a single ‘inside global’ address</p>]]></content>
    
    
    <categories>
      
      <category>computernetwork</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Computernetwork2_datalinklayer</title>
    <link href="/2024/01/05/computernetwork2/"/>
    <url>/2024/01/05/computernetwork2/</url>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>数据链路层使用的信道主要有</p><p><strong>（1）点对点信道</strong>：一对一点对点的通信方式。</p><p><strong>（2）广播信道</strong>：这种信道使用一对多的广播通信方式，过程比较复杂，需要专用的共享信道协议来调节这些主机的数据发送</p><h1 id="使用点对点信道的数据链路层"><a href="#使用点对点信道的数据链路层" class="headerlink" title="使用点对点信道的数据链路层"></a>使用点对点信道的数据链路层</h1><p><strong>链路（link）</strong>是从一个结点到相邻结点的一段物理线路而中间没有任何的交换结点</p><p><strong>数据链路（data link）</strong>当在一条线路上传输数据的时候，除了必须要有一条物理线路以外，还必须要有一些必要的通信协议来控制哲学数据的传输。把实现这些协议的硬件和软件加到链路上就构成了数据链路。目前一般使用<strong>网络适配器</strong>来实现这些协议</p><p>点对点星岛的数据链路层在进行通信的时候的主要步骤：</p><p>（1）结点A的数据链路层把网络层交下来的IP数据报添加首部和尾部封装成帧。</p><p>（2）结点A把封装好的帧发送给结点B的数据链路层</p><p>（3）若结点B的数据链路层收到的帧没有差错，那么从收到的帧中提取出IP报文交付上面的网络层，否则丢弃。</p><h2 id="三个基本问题"><a href="#三个基本问题" class="headerlink" title="三个基本问题"></a>三个基本问题</h2><p><strong>（1）封装成帧（framing）</strong></p><p>接收端在收到物理层上交的比特流以后，就能够根据首部和尾部的标记，从收到的比特流中识别帧的开始和结束。即<strong>帧界定</strong>。同时首部和尾部也包含了一些控制信息。</p><p>每一种链路层协议都规定了所能传送的帧的数据部分长度上线——最大传送单元*<strong>MTU（Maximum Transfer Unit）</strong>(<em>ps:这里说的是数据部分长度上线</em>)</p><p>当数据是可以答应的ASCII文本文件的时候，帧的界定可以使用特殊的<strong>帧界定符</strong>。</p><p>控制字符<strong>SOH（Start Of Header）</strong>放在一个帧的最前面，表示帧的首部的开始；<strong>EOT（End Of Transmission）</strong>表示帧的结束，放在帧的最后面</p><p><strong>（2）透明传输</strong></p><p>帧传输的数据中的任何8bit的组合一定不能和帧控制字符一样。</p><p>如果传输的是文本组成的帧，这种情况显然是不可能的。</p><p>但是其余情况可能会有该问题。</p><p>解决方案：在数据部分中冲突的SOH和EOT前插入一个转义字符<strong>ESC</strong>，接收端在把数据送往网络层之前删除这个转义字符.如果出现转义字符本身的冲突，也插入一个转义字符。这种方法叫做<strong>字节填充（byte stuffing）</strong>or<strong>字符填充（character stuffing）</strong></p><p><strong>（3）差错检测</strong></p><p><strong>CRC(Cyclic Redundancy Check)</strong></p><p>process</p><p>首先把数据划分为组，假定每组k个bit，现在假定带传送的数据M &#x3D; 101001（k&#x3D;6）CRC就是在后面添加供差错检测用的nbit冗余码,然后作为n+kbit一起发送出去</p><p>先将M左移nbit右边补0，然后除以一个两边实现商量好的n+1bit的数P，显然得到了一个nbit的余数，那么就把这个余数作为冗余的nbit拼接在M后面然后作为k+nbit发送过于，这个为了检验错误而存在冗余码有时也叫做帧检验序列<strong>FCS（Frame Check Sequence）</strong>(<em>ps:不一定要是由CRC方法得出的</em>)</p><p>显然接收方对其除以P的时候得到的结果一定是0</p><p><em>上述措施并不能保证数据链路层的数据传输是可靠的，但是当前网络信道传输质量较高，这样做可以提高通信效率，因此使用广泛</em></p><h1 id="点对点协议PPP"><a href="#点对点协议PPP" class="headerlink" title="点对点协议PPP"></a>点对点协议PPP</h1><p>通信质量较差的时代，在数据链路层使用可靠传输协议是一种好方法,于是其使用高级数据链路控制<strong>HDLC(High-level Data Link Control)<strong>。目前我们使用更加简单的</strong>PPP（Point-to-Point Protocol）</strong></p><p><img src="/../img/computernetwork/2-26.png"></p><p>PPP协议满足的要求</p><p>（1）简单（2）分装成帧（3）透明性（4）多种网络层协议（5）多种类型的链路（6）差错检测（7）检测链接状态（8）最大传送单元（9）网络层地址协商（10）数据压缩协商</p><p>PPP协议的组成</p><p>（1）将一个IP数据报文封装到串行链路的方法（2）一个用来建立，配置和测试数据链路连接的链路控制协议<strong>LCP（Link Control Protocol）</strong>（3）一套网络控制协议<strong>NCP（Network Control Protocol）</strong></p><h2 id="PPP协议的帧格式"><a href="#PPP协议的帧格式" class="headerlink" title="PPP协议的帧格式"></a>PPP协议的帧格式</h2><h3 id="各个字段的意义"><a href="#各个字段的意义" class="headerlink" title="各个字段的意义"></a>各个字段的意义</h3><p><img src="/../img/computernetwork/2-27.png"></p><p>首部的第一个字段和尾部的第二个字段都是标志字段 <strong>F（Flag）</strong>规定为0x7E 即 01111110，作用为帧界定符号，两个相邻的帧之间只需要一个帧界定符号。</p><p>首部中的地址字段A规定为0xFF，控制字段规定为0x03，这两个字段没有意义，只是做此规定</p><p>首部的第四个字段是2byte的协议字段，如0x0021的时候就是IP报文 0xC021的时候就是LCP的数据</p><p>信息字段的长度是任意的要与MTU相符合，默认不超过1400字节</p><p>尾部第一个字段是2byte的FCS</p><h3 id="字节填充"><a href="#字节填充" class="headerlink" title="字节填充"></a>字节填充</h3><p>转义字符定义为0x7D</p><p>0x7E -&gt; 0x7D 0x7E</p><p>0x7D -&gt; 0x7D 0x5D</p><h3 id="零比特填充"><a href="#零比特填充" class="headerlink" title="零比特填充"></a>零比特填充</h3><p>首先利用硬件等等处理信息字段，只要发现有5个连续的1，就立即填入一个0，接收方再对其进行还原，就可以避免冲突。</p><h2 id="PPP协议的工作状态"><a href="#PPP协议的工作状态" class="headerlink" title="PPP协议的工作状态"></a>PPP协议的工作状态</h2><p><img src="/../img/computernetwork/2-28.png"></p><p>用户个人向ISP发送一系列链路控制协议LCP分组，这些分组的响应决定了用户将要使用的一些参数。然后网络控制协议NCP给新接入的用户个人电脑分配一个临时的IP地址。</p><p>具体过程：</p><p>PPP链路处于<strong>链路静止（Link Dead）</strong> 状态。当用户个人佃农通过调制解调器呼叫路由器后PPP进入链路建立 <strong>（Link Establish）</strong> 状态，LCP连接建立</p><p>开始发送LCP的配置请求帧（Configure-Request），接着链路另一端发送以下响应中的一种</p><p><strong>（1）确认配置（Configure-Ack）</strong></p><p><strong>（2）配置否认（Configure-Nak）</strong></p><p><strong>（3）配置拒绝（Configure-Reject）</strong></p><p>内容包括链路上的最大帧长度，所使用的鉴别协议等等</p><p>接着进入PPP鉴别状态 <strong>（Authenticate）</strong></p><p>此阶段只允许传送LCP分组，鉴别协议分组以及检测链路质量的分组，此时可以采用口令鉴别协议 <strong>PAP（Password Authentication Protocol）</strong> 或者 <strong>口令握手鉴别协议CHAP（Challenge-HandShake Authentication Protocol）。</strong> 鉴别失败转入链路终止状态，否则进入<strong>网络层协议状态（Network-layer Protocol）</strong>(<em>ps:这使得PPP两端的网络层运行不同的网络协议但是仍然可以使用同一个PPP协议进行通信</em>)</p><p>网络层配置完毕后链路就进入数据通信的 <strong>链路打开（Link Open）</strong> 状态，此时PPP端点仍然可以发送LCP分组 <strong>回送请求（Echo-Request）</strong> 和<strong>回送回答分组LCP（Echo-Reply）</strong> 检查链路状态</p><p>当然链路出现故障也会回到链路终止状态。</p><h1 id="使用广播信道的数据链路层"><a href="#使用广播信道的数据链路层" class="headerlink" title="使用广播信道的数据链路层"></a>使用广播信道的数据链路层</h1><h2 id="局域网的数据链路层"><a href="#局域网的数据链路层" class="headerlink" title="局域网的数据链路层"></a>局域网的数据链路层</h2><p>（1）具有广播功能，一个站点可以方便的访问全网</p><p>（2）便于系统的扩展和逐渐演变，各个设备的位置可以灵活调整</p><p>（3）提高可靠性，可用性，生存性</p><p>分类：星形网，环形网，总线网</p><p>一个重要问题是让众多的用户共享通信媒体资源</p><p>（1）静态划分信道</p><p>（2）动态媒体接入控制，又称之为多点接入（multiple access）</p><p>又可以继续分类</p><ul><li><p>随机接入（需要碰撞处理）</p></li><li><p>受控接入（比如轮询）</p></li></ul><h3 id="以太网的标准"><a href="#以太网的标准" class="headerlink" title="以太网的标准"></a>以太网的标准</h3><p>为了使得数据链路层能够适应多种局域网标准，我们把局域网的数据 链路层拆分为两个子层 <strong>逻辑控制LLC（Logical Link Protocol）</strong> 和 <strong>MAC（Medium Access Control）</strong></p><p>当前LLC基本被废弃</p><h2 id="CSMA-x2F-CD协议"><a href="#CSMA-x2F-CD协议" class="headerlink" title="CSMA&#x2F;CD协议"></a>CSMA&#x2F;CD协议</h2><p>由于总线上只要有一台计算机再发送数据，总线的传输资源就会被占用，因此再同一实践只能允许有一台计算机发送数据。</p><p>CSMA&#x2F;CD 载波监听多点接入&#x2F;碰撞检测 <strong>（Carrier Sense Multiple Access with Collision Detection）</strong></p><p>多点接入：说明是总线网络</p><p>载波监听：利用电子技术不断检测信道上有没有计算机再发送</p><p>碰撞检测：适配器边发送数据边检测信道上的型号电压的变化情况一确定是否有其他站在发送数据。</p><p>显然A在发送数据以后，最迟要2t的时间才能知道自己发送的数据又没有和其他人发生碰撞。首先在t之后各个站点都已经知道了A在发送数据，不会再发送了，但是t之前有可能有人在发送，这时候这个发送的冲突数据一定会在2t以内到达A。</p><p>显然使用CSMA&#x2F;CD协议的时候一个站不可能同时进行发送和接受（不然就变成碰撞了）所以CSMA&#x2F;CD的以太网不可能进行全双工通信，只能进行双向交替通信。</p><p>我们将以太网的往返时间2称之为 <strong>争用期（contention period）</strong>  又称之为 <strong>碰撞窗口（collision window）</strong> </p><p><strong>截断二进制指数退避（truncated binary exponential backoff）</strong></p><p>令K为重传次数和10取小</p><p>从0-2^k - 1中去一个数字r</p><p>重传要退后时间就是r倍的争用期。即检测到发生碰撞以后立即停止发送数据（接着执行认为干扰。。。）再接着就等待退避算法的时间完成后再次检测信道。</p><p>重传次数达到16次的时候向上层报告表示连续冲突，丢弃该帧。</p><p>每个帧的CSMA&#x2F;CD算法都是无记忆的。</p><p>但是这是建立在发送帧需要很长时间的，如果发送的帧时间很短，甚至短于2t，那么A可能提前进入监测状态，此时他认为自己已经没有发送任务，收到碰撞信息视而不见。</p><p>因此如果发送的数据过小，就必须进行数据填充，使其发送时间大于一个争用期51.2mius 即不小于64字节。因此凡是长度小于64byte的帧一律算作无效帧</p><p>以太网规定了帧间最小间隔9.6mius，使得甘冈接受数据帧的站的接受缓存来得及清理。</p><p><strong>强化碰撞</strong> 当发送数据的站一旦发现碰撞，就停止发送数据，还要再继续发送32bit或者28bit的人为干扰型号。</p><h2 id="集线器的星形拓扑"><a href="#集线器的星形拓扑" class="headerlink" title="集线器的星形拓扑"></a>集线器的星形拓扑</h2><p>表面上课使用集线器的局域网在物理上是一个星型网但是集线器使用电子器件模拟电缆工作，逻辑上仍然是一个总线网络，还是使用CSMA&#x2F;CD协议。</p><p>一个集线器更像一个多接口的转发器</p><p>集线器工作在物理层，每个接口仅仅转发bit，不进行碰撞检测</p><h2 id="信道利用率"><a href="#信道利用率" class="headerlink" title="信道利用率"></a>信道利用率</h2><p><img src="/../img/computernetwork/2-29.png"></p><p>here we define $a &#x3D; \frac{t}{T_0}$</p><h2 id="以太网MAC层"><a href="#以太网MAC层" class="headerlink" title="以太网MAC层"></a>以太网MAC层</h2><p>IEEE 802为局域网规定了一种48bit的的全球地址固化在适配器的ROM中</p><p>适配器具有过滤的功能，其没收到一个MAC帧就先用硬件检查其目的地址，如果是发往本站的，就手下，否则丢弃，其主要包括：</p><p>（1）单播(unicast)</p><p>（2）广播(broadcast)</p><p>（3）多播(multicast)</p><h3 id="MAC帧的格式"><a href="#MAC帧的格式" class="headerlink" title="MAC帧的格式"></a>MAC帧的格式</h3><p><img src="/../img/computernetwork/2-30.png"></p><p>目的地址和源地址</p><p>类型字段标志商议层使用的是什么协议（也有一些协版本是指明了数据的长度），最后还有4byte的FCS</p><p>由于以太网使用曼彻斯特编码，所以其很容易知道一个帧的结束</p><p>显然由于CSMA&#x2F;CD的要求，MAC帧的数据部分一定要在46-1500之间，因此有可能需要填充数据部分。这主要依靠的是上一层报文中的“总长度字段”例如IP报文中的总长度字段，IP报文会将多余的填充字段去掉。</p><p>从MAC子层再次向下传输到物理层的时候还要再帧前面叫上8byte，包含7byte的 <strong>同步码（1010101010.。。。）</strong> 和1byte的 <strong>帧开始界定符</strong> 10101011，(都属于MAC帧的一部分)FCS不包括前同步符和帧开始界定符号。</p><p>以太网上的帧的传输是一定由间隙的，但是PPP上却是可能连续传输的。</p><h3 id="MAC-address"><a href="#MAC-address" class="headerlink" title="MAC address"></a>MAC address</h3><p>The first 6 hexadecimal digits (from left to right), which the IEEE<br>administers, identify the manufacturer or vendor and comprise the Organizational Unique Identifier (OUI). </p><p>The remaining 6 hex digits comprise the interface serial<br>number, administered by specific vendor</p><p>Broadcast</p><p>The destination MAC all 1’s </p><h1 id="扩展的以太网"><a href="#扩展的以太网" class="headerlink" title="扩展的以太网"></a>扩展的以太网</h1><h2 id="物理层扩展"><a href="#物理层扩展" class="headerlink" title="物理层扩展"></a>物理层扩展</h2><h2 id="数据链路层扩展"><a href="#数据链路层扩展" class="headerlink" title="数据链路层扩展"></a>数据链路层扩展</h2><p>通过自动学习算啊发建立一个帧交换表</p><p>其表项有生命周期</p><p>由来源学习对应的端口，不知道目标端口就像所有端口转发。</p><p>有时候为了增加网络的可靠性，会增加一些冗余的链路，这样自学习就可能导致不停兜圈子，于是需要一个生成树协议STP（见下面的论述）</p><h1 id="WANs"><a href="#WANs" class="headerlink" title="WANs"></a>WANs</h1><p>虚拟局域网协议允许在以太网的帧格式中插入一个4byte的表示符，记为 <strong>VLAN标记（tag）</strong> </p><p><img src="/../img/computernetwork/2-31.png"></p><h2 id="WAN-Technology-amp-Devices"><a href="#WAN-Technology-amp-Devices" class="headerlink" title="WAN Technology &amp; Devices"></a>WAN Technology &amp; Devices</h2><h3 id="WAN-Services"><a href="#WAN-Services" class="headerlink" title="WAN Services"></a>WAN Services</h3><p>A WAN is the communications network that connects LANs through a WAN Service Provider</p><p>WANs operate at the first three layers of the OSI, but focus mainly on the physical and datalinks</p><p><img src="/../img/computernetwork/2-17.png"></p><h3 id="WAN-Virtual-Circuits"><a href="#WAN-Virtual-Circuits" class="headerlink" title="WAN Virtual Circuits"></a>WAN Virtual Circuits</h3><p><strong>Switched Virtual Circuits (SVCs)</strong> are WAN paths to the destination established and terminated on demand</p><p>Three phases:</p><p><strong>Circuit establishment: creates the virtual circuit</strong></p><p><strong>Data transfer-sending and receiving user data</strong></p><p><strong>Ciruit termination tearing down the virtual circuit</strong></p><p>Telephone service and ATM use SVCs</p><p>Increased use of bandwidth but decreased cost</p><p><strong>Permanent Virtual Circuits (PVCs)</strong> are permanently established circuits with one mode:data transfer</p><p>x.25 and Frame Relay use PVCs</p><p>Decreased use of bandwidth but increased cost</p><h3 id="WAN-Devices"><a href="#WAN-Devices" class="headerlink" title="WAN Devices"></a>WAN Devices</h3><p>Inorder to connect to a leassed line the customer must have</p><ul><li><p>Access to the service provider’s circuit</p></li><li><p>An appropriate router port available</p></li><li><p>A CSU&#x2F;DSU, modem ISDN Termianl Adapter,etc</p></li></ul><h3 id="Modems"><a href="#Modems" class="headerlink" title="Modems"></a>Modems</h3><p><strong>Also called CSU&#x2F;DSUs (channel service units&#x2F;digital service units)</strong></p><p>Interface with voice-grade connection in order to convert analog signal to digital</p><h2 id="WAN-amp-The-OSI-Model"><a href="#WAN-amp-The-OSI-Model" class="headerlink" title="WAN &amp; The OSI Model"></a>WAN &amp; The OSI Model</h2><h3 id="WAN-Standards"><a href="#WAN-Standards" class="headerlink" title="WAN Standards"></a>WAN Standards</h3><p><img src="/../img/computernetwork/2-18.png"></p><p>physical layer:</p><p>protocols that describe how to provide electrical mechanical operational and functional connections for WAN services</p><p>These services are most often obtained from WAN service providers, alternate carriers post-telephone, and telegraph agencies</p><p>Descibles the interface between the <strong>data terminal equipment(DTE)</strong> and the <strong>data circuit-terminating equipment(DCE)</strong></p><p>Typically the DCE is the service provider and the DTE is the attached device</p><p>In this model, the services offered to the DTE are made available through a modem or a CSU&#x2F;DSU</p><p>Several physical layer standards specifying this interface between the DTE &amp; DCE are…</p><ul><li>EIA&#x2F;TIA-232<br>…</li></ul><h3 id="WAN-Data-Link-Layer"><a href="#WAN-Data-Link-Layer" class="headerlink" title="WAN Data-Link Layer"></a>WAN Data-Link Layer</h3><p>WAN data link protocols describe how frames are carried between systems on a single data link</p><p>They include protocols designed to operate over dedicated point-to-point, multipoint, and multi-access switched services</p><p>WAN standards are defined and managed bu a number of recongnized authorities, including the following agencies;ITU-T,ISO,IETF,&amp;EIA</p><h3 id="Data-link-Encapsulations"><a href="#Data-link-Encapsulations" class="headerlink" title="Data-link Encapsulations"></a>Data-link Encapsulations</h3><p>The WAN data link layers defines how data is encapsulated for transmission to remote sites</p><ul><li><p><strong>Point-to-Point(PPP):</strong> developed by the IETF.PPP contains a protocol field to identify the network-layer protocol</p></li><li><p>**High-Level Data Link Control (HDLC):**an ISO standard, HDLC not compatible between different vendors because of the way each vendor has chosen to implement it.HDLC support point-to-point&#x2F;multipoint configurations</p></li><li><p><strong>Frame Relay:</strong> uses simplified encapsulation with no error correction over high-quality digital facilities</p></li><li><p>**ISDN:**a set of digital services that services that transmits voice and data over existing phone lines</p></li><li><p>**Link Access Procedure,Balanced(LAPB):**For packet-switched networks used to encapsulate packets at layer 2 of the X.25 stack.Provides reliability and flow control on a point-to-point basis</p></li></ul><h2 id="WAN-Accessing-Methods"><a href="#WAN-Accessing-Methods" class="headerlink" title="WAN Accessing Methods"></a>WAN Accessing Methods</h2><p>The two most common point-to-point WAN encapsulation are HDLC and PPP</p><p>All the serial line encapsulation shared a common frame format, which has the following fields</p><p><img src="/../img/computernetwork/2-32.png"></p><p>The choice of encapsulation protocol depends on the WAN technologyand the communicatioing equipment</p><h3 id="PPP-and-HDLC"><a href="#PPP-and-HDLC" class="headerlink" title="PPP and HDLC"></a>PPP and HDLC</h3><p>PPP is  a standard serial-line encapsulation method</p><ul><li><p>Developed by IETF; replacing SLIP </p></li><li><p>Contains a field to identify the network layer protocol</p></li><li><p>PPP can check for link quality during connection establishment</p></li></ul><p>Provides authentication through <strong>Password Authentication Protocol(PAP)</strong> and <strong>Challenge Handshake Authentication Protocol(CHAP)</strong></p><p>HDLC is Cisco’s default encapsulation for serial lines</p><ul><li><p>No windowing or flow control</p></li><li><p>A proprietary type code is inserted in the frame which means that HDLC framing is not interoperate with other vendors’s equipment</p></li><li><p>Used when both ends of a dedicated-line connection are routers running Cisco IOS</p></li></ul><h3 id="PPP"><a href="#PPP" class="headerlink" title="PPP"></a>PPP</h3><p>The most widely used layer-2 protocol over serial links</p><p>Developed from SLIP, which</p><ul><li><p>Supports only IP protocol</p></li><li><p>Doesn’t support authentication</p></li><li><p>Doesn’t support compression</p></li><li><p>Doesn’t support error detection</p></li></ul><p>PPP offers the following features:</p><ul><li><p>Network protocol multiplexing</p></li><li><p>Dynamic assignement of IP addresses</p></li><li><p>Authentication:PAP,CHAP Compression</p></li><li><p>Compression</p></li></ul><p>use HDLC(IOS HDLC) as a basis to encapsulate layer 3 datagrams</p><p>Implements <strong>LCP (link control protocol)</strong> for:</p><ul><li><p>Connection establishment</p></li><li><p>Connection configuration options</p></li><li><p>Link-quality testing</p></li></ul><p>Implements <strong>NCP (Network Control Protocol)</strong> to select and configure layer 3 protocol</p><h3 id="PPP-frame-format"><a href="#PPP-frame-format" class="headerlink" title="PPP frame format"></a>PPP frame format</h3><p><img src="/../img/computernetwork/2-19.png"></p><h3 id="PPP-session-establishment-x2F-termianation"><a href="#PPP-session-establishment-x2F-termianation" class="headerlink" title="PPP session establishment&#x2F;termianation"></a>PPP session establishment&#x2F;termianation</h3><p>To establish communication over a point-to-point link:PPP goes through four distinct phases:</p><ul><li><p>Link establishment and configuration negotiation(LCP)</p></li><li><p>Link quality testing</p></li><li><p>Network layer protocol configuration(NCP)</p></li><li><p>Link termination</p></li></ul><h3 id="Phase1-link-establishment"><a href="#Phase1-link-establishment" class="headerlink" title="Phase1. link establishment"></a>Phase1. link establishment</h3><p>Link establishment is the first phase before any network-layer datagrams can be exchanged</p><p>Each PPP device sends LCPs to open the connection</p><p>LCP packets contain a configuration option field that allows devices to negotiate the use of options such as compression and authentication protocol etc</p><p>If a configuration option is not included in an LCP packet the default value for that configuration option is assumed</p><p>This phase is complete when a configuration acknowledge frames has been sent and received</p><h3 id="Phase2-Link-quality-determination"><a href="#Phase2-Link-quality-determination" class="headerlink" title="Phase2. Link quality determination"></a>Phase2. Link quality determination</h3><p>LCP packets are sent and received to measure the error rate on the link if configured to do so</p><p>Authentication, if used, takes place before the network-layer protocol congfiguration phase begins</p><p>LCP can delay transmission of network-layer protocol information until this phase is completed</p><h3 id="Phase3-Network-layer-protocol-configuration"><a href="#Phase3-Network-layer-protocol-configuration" class="headerlink" title="Phase3.Network layer protocol configuration"></a>Phase3.Network layer protocol configuration</h3><p>In this phase, the PPP devices send NCP packets to choose and configure one or more network-layer protocols(such as IP)</p><p>When each of the chosen network-layer protocols has been configured, datagrams form each network-layer protocol can be sent over link</p><h3 id="Phase4-Link-termination"><a href="#Phase4-Link-termination" class="headerlink" title="Phase4. Link termination"></a>Phase4. Link termination</h3><p>LCP can terminate the link at any time</p><p>At the user request;</p><p>Quality of the link;</p><p>Timeout</p><p>When LCP closes the link, it informs the network-layer protocols so that they can take appropriate action</p><h3 id="PAP"><a href="#PAP" class="headerlink" title="PAP"></a>PAP</h3><p><img src="/../img/computernetwork/2-20.png"></p><p>The calling side of the link enter authentication information to help ensure that the user has the network administrator’s permission to make the call</p><p>Remote node establishes its indentity, using a two-way handshake PAP</p><p>Username&#x2F;password pair is repeatedly sent by the remote node until authentication is acknowledged or the connection is terminated</p><p>Passwords are sent across the link in <strong>clear text</strong></p><p>Remote node is authenticated only once after the connection establishment phase</p><p>Configuration of remote router</p><p><code>Router(config)# int s0</code></p><p><code>Router(config)# ip addr 192.168.2.1 255.255.255.0</code></p><p><code>Router(config)# encapsulation ppp</code></p><p><code>Router(config)# ppp pap sent-username Router password ciscoA</code></p><p><code>Router(config)# no shut</code></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">Router</span><span class="hljs-params">(config)</span></span><span class="hljs-selector-id">#hostname</span> RTB<br><span class="hljs-function"><span class="hljs-title">RTB</span><span class="hljs-params">(config)</span></span><span class="hljs-selector-id">#username</span> RTA password CiscoA<br><span class="hljs-function"><span class="hljs-title">RTB</span><span class="hljs-params">(config)</span></span><span class="hljs-selector-id">#int</span> s0<br><span class="hljs-function"><span class="hljs-title">RTB</span><span class="hljs-params">(config)</span></span><span class="hljs-selector-id">#ip</span> <span class="hljs-selector-tag">address</span> <span class="hljs-number">192.168</span>.<span class="hljs-number">2.2</span> <span class="hljs-number">255.255</span>.<span class="hljs-number">255.0</span><br><span class="hljs-function"><span class="hljs-title">RTB</span><span class="hljs-params">(config)</span></span><span class="hljs-selector-id">#clock</span> rate <span class="hljs-number">56000</span><br><span class="hljs-function"><span class="hljs-title">RTB</span><span class="hljs-params">(config)</span></span><span class="hljs-selector-id">#encapsulation</span> ppp<br><span class="hljs-function"><span class="hljs-title">RTB</span><span class="hljs-params">(config)</span></span><span class="hljs-selector-id">#ppp</span> authentication pap<br><span class="hljs-function"><span class="hljs-title">RTB</span><span class="hljs-params">(config)</span></span><span class="hljs-selector-id">#no</span> shu<br></code></pre></td></tr></table></figure><h3 id="CHAP"><a href="#CHAP" class="headerlink" title="CHAP"></a>CHAP</h3><p><img src="/../img/computernetwork/2-21.png"></p><p>The called party periodically verifies the calling side, using a <strong>three-way handshake</strong> CHAP protocol</p><p>CHAP does not allow a caller to attempt authentication without a challenge(random number)</p><p>The remote node responds with a value (encrypted value including: the received challenge, its username and its password) </p><p>The host checks the response against its own value </p><ul><li><p>if the values match, the authentication is acknowledged</p></li><li><p>Otherwise, the connection is terminated</p></li></ul><p><img src="/../img/computernetwork/2-22.png"></p><p><img src="/../img/computernetwork/2-23.png"></p><p><strong>code</strong></p><p>Configuration of remote router</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">Router</span><span class="hljs-params">(config)</span></span><span class="hljs-selector-id">#hostname</span> RTA<br><span class="hljs-function"><span class="hljs-title">RTA</span><span class="hljs-params">(config)</span></span><span class="hljs-selector-id">#username</span> RTB password CiscoA<br><span class="hljs-function"><span class="hljs-title">RTA</span><span class="hljs-params">(config)</span></span><span class="hljs-selector-id">#int</span> s0<br><span class="hljs-function"><span class="hljs-title">RTA</span><span class="hljs-params">(config)</span></span><span class="hljs-selector-id">#ip</span> <span class="hljs-selector-tag">address</span> <span class="hljs-number">192.168</span>.<span class="hljs-number">2.1</span> <span class="hljs-number">255.255</span>.<span class="hljs-number">255.0</span><br><span class="hljs-function"><span class="hljs-title">RTA</span><span class="hljs-params">(config)</span></span><span class="hljs-selector-id">#encapsulation</span> ppp<br><span class="hljs-function"><span class="hljs-title">RTA</span><span class="hljs-params">(config)</span></span><span class="hljs-selector-id">#no</span> shu<br></code></pre></td></tr></table></figure><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">Router</span><span class="hljs-params">(config)</span></span><span class="hljs-selector-id">#hostname</span> RTB<br><span class="hljs-function"><span class="hljs-title">RTB</span><span class="hljs-params">(config)</span></span><span class="hljs-selector-id">#username</span> RTA password CiscoA<br><span class="hljs-function"><span class="hljs-title">RTB</span><span class="hljs-params">(config)</span></span><span class="hljs-selector-id">#int</span> s0<br><span class="hljs-function"><span class="hljs-title">RTB</span><span class="hljs-params">(config)</span></span><span class="hljs-selector-id">#ip</span> <span class="hljs-selector-tag">address</span> <span class="hljs-number">192.168</span>.<span class="hljs-number">2.2</span> <span class="hljs-number">255.255</span>.<span class="hljs-number">255.0</span><br><span class="hljs-function"><span class="hljs-title">RTB</span><span class="hljs-params">(config)</span></span><span class="hljs-selector-id">#clock</span> rate <span class="hljs-number">56000</span><br><span class="hljs-function"><span class="hljs-title">RTB</span><span class="hljs-params">(config)</span></span><span class="hljs-selector-id">#encapsulation</span> ppp<br><span class="hljs-function"><span class="hljs-title">RTB</span><span class="hljs-params">(config)</span></span><span class="hljs-selector-id">#ppp</span> authentication chap<br><span class="hljs-function"><span class="hljs-title">RTB</span><span class="hljs-params">(config)</span></span><span class="hljs-selector-id">#no</span> shu<br></code></pre></td></tr></table></figure><h3 id="ISDN"><a href="#ISDN" class="headerlink" title="ISDN"></a>ISDN</h3><p><strong>Integrated Services Digital Networks</strong> allow digital signals to be transmitted over exiting phone lines.</p><ul><li>Provides connectivity for remote sites</li></ul><p>ISDN has the following benefits:</p><ul><li><p>Can carry voice, video and data</p></li><li><p>Faster call setup tahn modems using the out-of-band D (or Delta) channel</p></li><li><p>Offter faster data transfer using the B (or Barrier) channels at 64kps</p></li></ul><h3 id="BRI-and-PRI"><a href="#BRI-and-PRI" class="headerlink" title="BRI and PRI"></a>BRI and PRI</h3><p>Therer are two ISDN services</p><ul><li><p><strong>BRI (Basic Rate Interface)</strong></p></li><li><p><strong>PRI(Primary Rate Interface)</strong></p></li></ul><p>The ISDN BRI service offers two B channels and one D channel</p><p>ISDN BRI delivers a total bandwidth of a 144-kbps (2B + D &#x3D;&#x3D; 144kps)<br>ne into three separate channels</p><p>BRI B channel service operates at 64kbps and is meant to carry user data and voice traffic</p><p>The third channel the D channel is a 16kbps signalling channell used to carry instructions that tell the telephone network how to handle each of the B channels</p><p><img src="/../img/computernetwork/2-24.png"></p><h3 id="Standard"><a href="#Standard" class="headerlink" title="Standard"></a>Standard</h3><p>ISDN utilizes a suite of ITU-T standards spanning the physical, data-link, and network layers of the OSI reference model</p><p><em>Several encapsulation choices are available. The two most common encapsulations are PPP and HDLC</em></p><p>ISDN defaults to HDLC However PPP is much more robust because it provides an excellent mechanism for authentication and negotiation of compatible link and protocol configuration</p><p>ISDN interfaces allow only a single encapsulation type</p><h3 id="xDSL"><a href="#xDSL" class="headerlink" title="xDSL"></a>xDSL</h3><p>使用数字技术对现有的模拟电话用户先进行改造，使其能够承载宽带业务</p><p>把0-4khz的低频谱段留给传统电话使用二八没有利用的高端频谱留给用户上网使用</p><p>DSL：数字用户线（Digital Subscriber Line）</p><p>x表示不同的宽带实现方案</p><h3 id="xDSL-1"><a href="#xDSL-1" class="headerlink" title="xDSL"></a>xDSL</h3><p>**ADSL (Asymmetric Digital Subscriber Line)**：非对称<br>数字用户线</p><p><strong>HDSL (High speed DSL)：</strong>高速数字用户线</p><p><strong>SDSL (Single-line DSL)：</strong> 对线的数字用户线</p><p><strong>VDSL (Very high speed DSL)：</strong>甚高速数字用户线</p><p><strong>IDSL ：</strong>ISDN 用户线</p><p><strong>RADSL (Rate-Adaptive DSL)：</strong>速率自适应 DSL，是ADSL 的一个子集，可自动调节线路速率</p><h3 id="ADSL"><a href="#ADSL" class="headerlink" title="ADSL"></a>ADSL</h3><p>ADSL的极限传输距离与数据率以及用户线的线径都有很大关系</p><p>上行和下行带宽不对称</p><p>ADSL在用户线两端各自安装一个ADSL的调制解调器</p><p><strong>DMT</strong></p><p>DMT采用频分复用的方法把40kHZ以上的一直到1.1MHz的高端频谱划分为许多的子信道，其中25个子信道用于上行信道，249个子信道用于下行信道</p><p>每个子信道大概占据4kHz。</p><p>相当于在一对数据线上使用许多小的调制解调器并行地传输数据</p><p>由于用户线地具体条件相差很大，所以ADSL采用自适应地调制技术</p><p>ADSL调制解调器检测可用地频率，各个子信道受到干扰地情况</p><p><img src="/../img/computernetwork/2-33.png"></p><h3 id="SONET"><a href="#SONET" class="headerlink" title="SONET"></a>SONET</h3><p><strong>同步光纤网（Synchronous Optical Network）</strong>各级时钟都来自一个非常精确地主时钟</p><p>四个光接口层</p><p>光子层（Photonic Layer）：处理跨越光缆地比特传送</p><p>段层（Section Layer）：在光缆上传送地STS-N帧</p><p>线路层（Line Layer）：负责路径层地同步和复用</p><p>路径层（Path Layer）：处理路径端接受设备PTE之间业务传输</p><h3 id="HFC（Hybrid-Fiber-Coax）"><a href="#HFC（Hybrid-Fiber-Coax）" class="headerlink" title="HFC（Hybrid Fiber Coax）"></a>HFC（Hybrid Fiber Coax）</h3><p><strong>光前同轴混合网（Hybrid Fiber Coax）</strong></p><p>HFC地主干线路采用光纤</p><p>HFC网将CATV网中地通州电缆主干部分使用为光纤</p><p>模拟光纤中使用AM技术</p><p>模拟光纤从头端链接到fiber node即光纤分配结点（ODN）（Optical Distribution Node）</p><p><img src="/../img/computernetwork/2-25.png"></p><p><strong>电缆调制解调器（Cable Modem</strong></p><p>是为了HFC使用地调制解调器</p><h3 id="FTTX"><a href="#FTTX" class="headerlink" title="FTTX"></a>FTTX</h3><p>Fiber to the x</p><p>光签到户，大楼，路边</p><h1 id="LAN-Switching-and-VLAN"><a href="#LAN-Switching-and-VLAN" class="headerlink" title="LAN Switching and VLAN"></a>LAN Switching and VLAN</h1><h2 id="Switching"><a href="#Switching" class="headerlink" title="Switching"></a>Switching</h2><p>Switch perform two basic functions: Building and maintaining switching tables based on MAC; Switching frames out the interface to the destination</p><h3 id="Symmetric-Switching"><a href="#Symmetric-Switching" class="headerlink" title="Symmetric Switching"></a>Symmetric Switching</h3><p>symmetric switching provides switched connections between prots with the same bandwidth</p><p>it can cause bottlenecks as users try to access servers on other segments</p><h3 id="Asymmetric-Switching"><a href="#Asymmetric-Switching" class="headerlink" title="Asymmetric Switching"></a>Asymmetric Switching</h3><p>asymmetric switching reduces the likelihood of a potential bottlenect at the server by attaching the segment with the server to a higher bandwidth port</p><p>asymmetric switching reqiures memory buffering in the switch</p><h3 id="Memory-Buffering"><a href="#Memory-Buffering" class="headerlink" title="Memory Buffering"></a>Memory Buffering</h3><p>Area of memory in a switch where destination and transmission data are stored until it can be switched out the correct port</p><ul><li><p>Port-based memory buffering: Packets are stored in a queue on each port possible for one packet to delay transmission of other packtets because of a busy destination port</p></li><li><p>Shared memory buffering: common memory buffering shared bu all ports; allows packtest to be RX on one port and TX out another port without changing it to a different queue</p></li></ul><h3 id="Switching-Methods"><a href="#Switching-Methods" class="headerlink" title="Switching Methods"></a>Switching Methods</h3><ul><li><p>Store-and-Forward: The switch receives the entire frame calculating the CRC at the end, before sending it to the destination</p></li><li><p>Cut-through: A switch add latency. It can be reduced by using cut-through switching method; Fast forward switching –only checks the destination MAC before immediatley forwarding the frame; Fragment Free–read the first 64 bytes to reduce errors before forwarding the frame</p></li></ul><p><img src="/../img/computernetwork/2-1.png"></p><h2 id="The-Spanning-Tree-Protocol"><a href="#The-Spanning-Tree-Protocol" class="headerlink" title="The Spanning-Tree Protocol"></a>The Spanning-Tree Protocol</h2><p>Loops may occur in a network for a variety of reasons:</p><p>Usually loops in networks are the result of a deliberate attempt to provide redundancy</p><p>Can also occur by configuration error: Two primary reasons loops can be absolutely disastrous in a bridged network: broadcast loops and bridge-table corruption</p><h3 id="L2-loops"><a href="#L2-loops" class="headerlink" title="L2 loops"></a>L2 loops</h3><p>Broadcasts and layer 2 loops can be a dangerous combination</p><p>Ethernet frames have no TTL field</p><p>After an Ethernet frame starts to loop, it will probably continue until someone shuts off one of the switches or break a link</p><p>The switches will flip flop the bridging table entry for Host A (creating extremely high CPU utilization)</p><p><img src="/../img/computernetwork/2-2.png"></p><h3 id="Overview-of-STP"><a href="#Overview-of-STP" class="headerlink" title="Overview of STP"></a>Overview of STP</h3><p>Elements of the Spanning Tree Protocol</p><p>Main function: allow redundant paths in a switched&#x2F;bridged network without incurring latency frome the effects of the loops</p><p>STP prevents loops by calculating a stable spanning-tree network topology</p><p>Spanning-tree frames(called bridge protocol data units–BPDUS) are used to determine the spanning-tree topology</p><h3 id="BPDUs"><a href="#BPDUs" class="headerlink" title="BPDUs"></a>BPDUs</h3><ul><li><p>STP establishes a root node, called the root bridge</p></li><li><p>The resulting tree originates from the root bridge</p></li><li><p>Redundant links that are not part of the shortest path tree are blocked</p></li><li><p>Data frames received on blocked links are dropped.</p></li><li><p>The message that a switch sends, allowing the formation a loop free logical topology, is BPDU</p></li></ul><p><img src="/../img/computernetwork/2-3.png"></p><p><img src="/../img/computernetwork/2-4.png"></p><h3 id="STP-Decision-Sequence"><a href="#STP-Decision-Sequence" class="headerlink" title="STP Decision Sequence"></a>STP Decision Sequence</h3><p>use the same four-step decision sequence:</p><p><strong>Lowest root BID</strong></p><p><strong>Lowest path cost to root bridge</strong></p><p><strong>Lowest sender BID</strong></p><p><strong>Lowest port ID</strong></p><h3 id="BID"><a href="#BID" class="headerlink" title="BID"></a>BID</h3><p>A Bridge ID 8 Bytes</p><p>The high-order BID subfield(2 bytes): bridge priority</p><p>2^16 possible values 0 - 655535(default 32768) but typically expressed in a decimal format</p><p>The low-order subfield(6 bytes): a MAC address assigned to the switch</p><p>Expressed in hexadecimal format</p><h3 id="electing-the-root-switch"><a href="#electing-the-root-switch" class="headerlink" title="electing the root switch"></a>electing the root switch</h3><p><strong>The switches elect a single root switch by looking for the switch with lowest BID</strong></p><p><strong>If all the switches are using the default bridge priority of 32768, the lowest MAC address serves as the tie-breaker</strong></p><h3 id="STP-cost"><a href="#STP-cost" class="headerlink" title="STP cost"></a>STP cost</h3><p><img src="/../img/computernetwork/2-5.png"></p><h3 id="Five-STP-states"><a href="#Five-STP-states" class="headerlink" title="Five STP states"></a>Five STP states</h3><p>States are established by configuring each port according to policy</p><p>Then STP modifies the states based on traffic patterns and potential loops</p><p>The default order of STP states are:</p><p><strong>Blocking-no frame forward, BPDUs heard</strong></p><p><strong>Listening–no frame forward, listening for data</strong></p><p><strong>Learning–no frame forwarded, learning addresses</strong></p><p><strong>Forwarding– frame forwarded, learning addresses</strong></p><p><strong>Disabled–no frames forwarded, no BPDUs heard</strong></p><h3 id="Initial-STP-Convergence"><a href="#Initial-STP-Convergence" class="headerlink" title="Initial STP Convergence"></a>Initial STP Convergence</h3><p>When the network first starts, all the bridges flood the network with a mix of BPDUs information</p><p>Immediately, they apply the decision sequence allowing them to home in on the set of BPDUs that form a single spanning tree for the entire network</p><p><strong>Step1:</strong> A single root bridge is elected to act as the central point of this network</p><p>Announce itself as the root</p><p>Checking all BPDUs received on the port as well as the BPDU that would be sent on that port</p><p>For each arrived BPDUs, if it is lower in value than the existing BPDU saved for the port</p><p>The old value is replaced</p><p>The sender of BPDU is accepted as the new root</p><p><strong>Step2:</strong> All the remaining bridges calculate a set of root ports</p><p>Every non-root bridge must select one root port</p><p>The root port of a bridge is the port that is closest to the root bridge.</p><p>The root path cost is the cumulative cost of all links to the root bridge</p><p><strong>Step3</strong>: Electing the designated ports: All the remaining bridges calculate a set of designated ports.</p><p>Each segment has one designated port that both sends and receives traffic to and from that segment and the root bridge</p><p>The bridge&#x2F;switch containing the desigated port for a given segment is referred to as the designated bridge for that segemnt</p><p>All the bridges&#x2F;switches will block the non-designed ports on them</p><h2 id="VLAN"><a href="#VLAN" class="headerlink" title="VLAN"></a>VLAN</h2><p>In a typical shared LAN</p><p>Users are grouped physically based on the hub they are plugged into</p><p>Routers segment the LAN and provide broadcast firewalls</p><p>In VLANS</p><p>you can group users logically by function, department or application in use</p><p>configuration is done through proprietary software</p><h3 id="VLANS"><a href="#VLANS" class="headerlink" title="VLANS"></a>VLANS</h3><p>vlan</p><p>work at layer 2 &amp; 3</p><p>control network broadcasts</p><p>allow users to be assigned by net admin</p><p>provide tighter network security</p><p><img src="/../img/computernetwork/2-6.png"></p><h3 id="Characteristics"><a href="#Characteristics" class="headerlink" title="Characteristics"></a>Characteristics</h3><p>A logical grouping of networks devices or users that are not restricted to a physical switch segment</p><p>The devices or users in a VLAN can be grouped by function, department, application and so on, regardless of their physical segment location</p><p>A VLAN creates a single broadcast domain that is not restricted tp a physical segment and is treated like a subnet</p><p>VLAN setup is done in the switch by the network administrator using the vendor’s software.</p><h3 id="Grouping-users"><a href="#Grouping-users" class="headerlink" title="Grouping users"></a>Grouping users</h3><p>VLAN can logically segment users into different subnets(broadcast domains)</p><p>Broadcast frames are only switched between ports on the switch or switches with the same VLAN ID.</p><p>Users can be logically group via software based on:</p><p><strong>port number</strong></p><p><strong>MAC address</strong></p><p><strong>protocol being used</strong></p><p><strong>application being used</strong></p><h3 id="VLANS-Across-the-Backbone"><a href="#VLANS-Across-the-Backbone" class="headerlink" title="VLANS Across the Backbone"></a>VLANS Across the Backbone</h3><p>VLAN configuration needs to support backbone transport of data between interconnected routers and switches</p><p>The backbone is the area used for interVlan communication</p><p>The backbone should be high-speed links, typically 100Mbps or greater</p><h3 id="Router’s-role-in-a-VLAN"><a href="#Router’s-role-in-a-VLAN" class="headerlink" title="Router’s role in a VLAN"></a>Router’s role in a VLAN</h3><p>A router provides connection between different VLANSjok</p><p>For example, you have VLAN1 and VLAN2</p><p>Within the switch, users one separate VLANs cannot talk to each other(benefit of a VLAN)</p><p>However, users on VLAN1 can email users on VLAN2 but they need a router to do it</p><h3 id="How-frames-are-used-in-a-vlan"><a href="#How-frames-are-used-in-a-vlan" class="headerlink" title="How frames are used in a vlan"></a>How frames are used in a vlan</h3><p>Switches amke filtering and forwarding decisions based on datat in the frame</p><p>There are two techniques used</p><ul><li><p>Frame filtering: examines particular information about each frame MAC address or layer 3 protocol type</p></li><li><p>Frame tagging: places a unique identifier in the header of each frame as it is forwarded throughout the network backhone</p></li></ul><p><strong>Frame fitering</strong></p><p><img src="/../img/computernetwork/2-7.png"></p><p>A filtering table is developed for each switch. Switches shared address table information. Table entries are compared with the frames. Switch takes appropriate action</p><p><strong>Frame Tagging</strong></p><p>Frame tagging implementation process:</p><p>Places a VLAN identifier in the header of each frame as it is forward throughout the network backbone</p><p>The identifier is understood and examined by each switch</p><p>When the frame exits the network backhone, the switch removes the identifier before the frame is transmitted to the target end station</p><p>Frame tagging functions at layer 2 and requires little processing or administrative overhead</p><p>IEEE standard, insert a label of VLAN to the header to identifythe VLAN belonging to(Frame Tagging)</p><p>ISL Cisco propriety ISL add a header of 26 bytes in front of the data frame and appends a CRC 4 bytes at the end</p><h3 id="Ports-VLANS-and-Broadcasts"><a href="#Ports-VLANS-and-Broadcasts" class="headerlink" title="Ports VLANS and Broadcasts"></a>Ports VLANS and Broadcasts</h3><p>Method for implementing VLANs </p><p><strong>Static</strong> </p><p><strong>Dynamic</strong>*</p><p>Each switched port can be assigned to a VLAN which ensures ports that do not share the same VLAN do not share broadcasts and ensures ports that do share the same VLAN will share broadcasts</p><h3 id="Static-VLANs"><a href="#Static-VLANs" class="headerlink" title="Static VLANs"></a>Static VLANs</h3><p>Defined</p><p>Static VLANs are when ports on a switch are administratively assigned to a VLAN</p><p>Benefits</p><p>secure easy to configure and monitor</p><p>works well in networks where moves are controlled</p><h3 id="Dynamic-VLANs"><a href="#Dynamic-VLANs" class="headerlink" title="Dynamic VLANs"></a>Dynamic VLANs</h3><p>When a station is initially connected to an unassigned port, the switch checks an entry in the table and dynamically configures the port with the right VLAN</p><p>Benefits</p><p>less administration (more upfront) when users are added or move</p><p>centralized notification of unauthorized user</p><p><img src="/../img/computernetwork/2-9.png"></p><p><img src="/../img/computernetwork/2-8.png"></p><p><img src="/../img/computernetwork/2-10.png"></p><h3 id="Port-Centric-VLANs"><a href="#Port-Centric-VLANs" class="headerlink" title="Port-Centric VLANs"></a>Port-Centric VLANs</h3><p><img src="/../img/computernetwork/2-11.png"></p><p>All nodes in the same VLAN are attached to the same router interface</p><p>Makes management easier because…</p><p>Users are assigned by router port</p><p>Vlan are easy to admin</p><p>provides increased security</p><p>packets do not “leak” into other domains</p><h3 id="Access-and-Trunk-links"><a href="#Access-and-Trunk-links" class="headerlink" title="Access and Trunk links"></a>Access and Trunk links</h3><p><img src="/../img/computernetwork/2-12.png"></p><p>Access link is a link on the switch that is a member of only one VLAN</p><p>This VLAN is referred to as the native VLAN of the port</p><p>Any device that is attached to the port is completely unaware that a VLAN exists.</p><h3 id="Trunk-Links"><a href="#Trunk-Links" class="headerlink" title="Trunk Links"></a>Trunk Links</h3><p>A trunk link is capable of supporting multiple VLANs</p><p>Trunk links are typically used to connect switches to other switches or routers</p><p>Switches support trunk links on both FastEthernet and Gigabit Ethernet ports</p><p>Access and trunk links exist too</p><p><img src="/../img/computernetwork/2-13.png"></p><p>A trunk is a point to point link that supports several VLANs</p><p>A trunk is to saves ports when creating a link between two devices implementing VLANs</p><p>A trunk link does not belong to a specific VLAN </p><p>Acts as a conduit for VLANs between switches and routers</p><p>The trunk link can be configured to transport all VLANs or to transport a limited number of VLANs</p><p>A trunk link may however a native VLAN</p><p>The native VLAN of the trunk is the VLAN that the trunk uses if the trunk link fails for any reason</p><h3 id="code"><a href="#code" class="headerlink" title="code"></a>code</h3><p>The following guidelines must be followed when configuring VLANs on Cisco 29xx switches</p><p>The maximum number of VLANs is switch dependent</p><p>VLAN 1  is one of the factory-default VLANs</p><p>VLAN 1 is the default Ethernet VLAN</p><p>Cisco Discovery Protocol and VLAN Trunking Protocol advertisements are sent on VLAN 1</p><p>The Catalyst 29xx IP address is in the VLAN 1 broadcast domain by default</p><figure class="highlight hsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs hsp"><span class="hljs-keyword">Switch</span><span class="hljs-meta"># vlan database</span><br><span class="hljs-keyword">Switch</span>(vlan)<span class="hljs-meta"># vlan vlan_number</span><br><span class="hljs-keyword">Switch</span>(vlan)<span class="hljs-meta"># exit</span><br>\<br><span class="hljs-keyword">Switch</span>(config)<span class="hljs-meta"># interface fastethernet <span class="hljs-number">0</span>/<span class="hljs-number">9</span></span><br><span class="hljs-keyword">Switch</span>(config-<span class="hljs-keyword">if</span>)<span class="hljs-meta"># switchport access vlan vlan number</span><br><br><span class="hljs-keyword">Switch</span><span class="hljs-meta"># show vlan [vlanid]</span><br><span class="hljs-keyword">Switch</span><span class="hljs-meta"># no vlan vlanid</span><br><span class="hljs-comment">//when a vlan is deteted any ports assigned to that VLAN become inactive. The ports will, however, remain associated with the deleted VLAN until assigned to a new VLAN.</span><br></code></pre></td></tr></table></figure><h3 id="Routing-between-VLANs"><a href="#Routing-between-VLANs" class="headerlink" title="Routing between VLANs"></a>Routing between VLANs</h3><p><img src="/../img/computernetwork/2-14.png"></p><p>Each VLAN has its own IP network or subnet</p><p><img src="/../img/computernetwork/2-15.png"></p><p><strong>code:</strong></p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-constructor">Router(<span class="hljs-params">config</span>)</span># interface fastethernet port-number subinterface-number<br><br><span class="hljs-constructor">Router(<span class="hljs-params">config</span>-<span class="hljs-params">if</span>)</span>#encapsulation dot1q vlan-number<br><br><span class="hljs-constructor">Router(<span class="hljs-params">config</span>-<span class="hljs-params">if</span>)</span>#ip address ip-address subnet-mask<br><br></code></pre></td></tr></table></figure><p><img src="/../img/computernetwork/2-16.png"></p>]]></content>
    
    
    <categories>
      
      <category>computernetwork</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Computernetwork3_networklayer</title>
    <link href="/2023/12/13/computernetwork3/"/>
    <url>/2023/12/13/computernetwork3/</url>
    
    <content type="html"><![CDATA[<h1 id="网络层简介"><a href="#网络层简介" class="headerlink" title="网络层简介"></a>网络层简介</h1><p>网络层向上提供简单灵活的，无连接的，尽最大努力的的数据报服务</p><p><strong>datagram 数据报</strong></p><h1 id="网际协议IP"><a href="#网际协议IP" class="headerlink" title="网际协议IP"></a>网际协议IP</h1><p><strong>网际协议IP Kahn-Cerx协议</strong></p><p><strong>IP协议配套协议</strong></p><p><strong>ARP(address Resolution)</strong></p><p><strong>ICMP(Internet Control Message Protocol)</strong></p><p><strong>IGMP(Internet Group Management Protocol)</strong></p><p><strong>RARP(Reverse Address Resolution Protocol)</strong></p><p><img src="/../img/computernetwork/3-11.png"></p><p><strong>一些中间设备</strong></p><p>物理层使用的中间设备叫做<strong>转发器(repeater)</strong></p><p>数据链路层使用的中间设备叫做<strong>网桥或者桥接器(bridge)</strong></p><p>网络层使用的中间设备叫做<strong>路由器(router)</strong></p><p>网络层以上使用的中间商设备叫做<strong>网关(gateway)</strong></p><p>由于参与互联的计算机网络都使用相同的网际协议IP（Internet Protocol）因此可以把互联以后的计算机网络看成是一个虚拟互联网络。</p><h2 id="IP地址"><a href="#IP地址" class="headerlink" title="IP地址"></a>IP地址</h2><p>基本划分以及历史发展</p><p>IP地址现在由互联网名字和数字分配机构ICANN(Internent Corporation for Assigned Names and Numbers)进行分配。</p><p>其地址的编址方案经过了三个历史阶段：</p><p><strong>1，分类的IP地址</strong></p><p><strong>2，子网的划分</strong></p><p><strong>3，构成超网</strong></p><h3 id="分类的IP地址"><a href="#分类的IP地址" class="headerlink" title="分类的IP地址"></a>分类的IP地址</h3><p>分成两个字段net-id标志主机或者路由器连接到的网络，此号在整个互联网内都是唯一的</p><p>主机号host-id标志此主机或者是路由器，在其所在的网络里必须时唯一的.</p><p>由此可见一个IP地址在整个互联网范围内都是唯一的。</p><p><img src="/../img/computernetwork/3-1.png"></p><p>网络号本身占有8 16 24 位，但是其开头几位是固定的了，否则计算机无法确认所给的地址是哪一类地址。</p><p>其中ABC都是单播地址用于一对一通信</p><p>D类地址用于多播</p><p>E类地址保留位以后使用</p><p><strong>点分十进制：</strong></p><p>将32位分割位8位然后用对应的十进制代替0-255</p><p><strong>网络号与主机号</strong></p><p>对于每个网络号，如果整个网络字段全为0是个保留地址，意思是本网络(形式上是一个A类地址的形式)；</p><p>网络号为127（01111111）（形式上是一个A类地址的形式）表示本地软件的回环测试（loopback set）</p><p>对于全为0的主机号码实际上表示的时一个网络地址，该主机所连接的到的网络地址(分配给网络地址)</p><p>对于全为1的主机号码实际上表示的时该网络上的所有主机</p><p>注意对于整个IP地址空间一共有2^32的地址</p><p>对于B类网络，由于其开头是10，首先网络字段全为0已经不可能（也意味着本网络只可能是A类）而127的回环地址又是属于A地址，所以网络号不存在减2的问题，但是实际上B类网络字段为10000000 0000000 （128.0）  也是不分配的。</p><p>实际上B类可以指派的网络号有2^14 - 1,主机号2^16-2</p><p>同理C类的无法表示出本网络以及回环地址，但是1100000 00000000 00000000 （192.0.0）也是不分配的</p><p>实际上C类可以指派的网络号由2^21 - 1,主机号2^8-2</p><p><img src="/../img/computernetwork/3-2.png"> </p><ol><li><p>IP地址管理机构在分配IP地址只分配网络号，而剩下的由得到网络号的单位来自行分配。</p></li><li><p>路由器仅仅根据目的主机所连接的网络号来转发分组而不考虑目的主机号，减小了路由表的储存空间以及查找路由表的时间</p></li><li><p>IP地址是标志一台主机和一条链路的接口的。</p></li><li><p>如果两个router仅仅只有一条线连接，可以不为这样一个比较小的网络分配IP，可视为无编号网络或者是无名网络(unumbered network)(anonymous network)</p></li></ol><p><img src="/../img/computernetwork/3-12.png"></p><h2 id="Private-address-Space"><a href="#Private-address-Space" class="headerlink" title="Private address Space"></a>Private address Space</h2><p>10.0.0.0 - 10.255.255.255</p><p>172.16.0.0 - 172.31.255.255</p><p>192.168.0.0 - 192.168.255.255</p><p>There are certain IP address ranges reserved for private IP addressing schemes.</p><p>数据报中的源地址和目的地址是不变的，路由器的地址并不在其中</p><h2 id="IP-地址与硬件地址"><a href="#IP-地址与硬件地址" class="headerlink" title="IP 地址与硬件地址"></a>IP 地址与硬件地址</h2><p><img src="/../img/computernetwork/3-13.png"></p><p><img src="/../img/computernetwork/3-14.png"></p><ol><li><p>IP抽象层只能看到IP数据报</p></li><li><p>路由器可以看到IP地址但是路由器仅仅是根据IP地址选择合适的转发路径，具体选择转发路径的方式就是选择不同的端口以及相对应的MAC地址进行再次封装</p></li><li><p>在局域网的链路层只能看见MAC帧</p></li><li><p>IP屏蔽了一些下层的复杂的细节</p></li></ol><h2 id="ARP"><a href="#ARP" class="headerlink" title="ARP"></a>ARP</h2><p>每台主机上都有一个ARP Cache里面有本局域网上的各个主机和路由器的IP地址到硬件地址的映射表，如果A要向某台主机B发送IP数据报，则在ARP Cache 中寻找对应的MAC地址，写入MAC帧。</p><p>如果找到了，封装mac帧，发送。</p><p>如果没找到则A就运行ARP协议</p><p>1）A发送一个ARP请求分组</p><p>注意ARP请求分组是广播而ARP响应是单播的</p><p>为了提高效率，在ARP请求中也会有主机A的MAC信息，B可以在收到请求后吧A的映射也写到自己的ARP Cache中</p><p>2）如果B在收到这个请求分组后发现自己的IP和要查询的IP相同，那么就收下（在自己的Cache中存储A的映射）,然后发送ARP响应分组。给出自己的IP地址以及硬件地址。由于B已经知道了A的MAC地址和IP地址的映射，因此ARP响应分组是普通的单播。</p><p>4）A收到响应分组以后就在ARP告诉缓存中写u人主机B的IP地址到硬件地址的映射。</p><p>ARP中的每一段映射都有生存周期，如果出现硬件更换的情况生存周期可以确保A能重新发送请求获得正确的映射（但是错误发送的IP报文回不来了）</p><p>注意：以上协议只能发生在同一局域网中，如果目标主机在另外的局域网中，那么主机只需要知道此网络的router的ip和mac的映射关系（这也可以解释为什么路由器在网络层应为其必须要去除mac帧的头然后读取ip信息然后才能转发）</p><h2 id="IP数据报的格式"><a href="#IP数据报的格式" class="headerlink" title="IP数据报的格式"></a>IP数据报的格式</h2><p><img src="/../img/computernetwork/3-3.png"></p><p>一个IP数据报由首部和数据两个部分组成。首部包括20byte的固定长度和可选字段。</p><ol><li>版本（4bit）</li></ol><p>IP协议版本</p><ol start="2"><li>首部长度（4bit）。</li></ol><p>首部长度的单位是32bit（4byte）由于固定部分是20字节所以其最小值是5 0101，最长是 15 1111 表示首部长为6obyte </p><p>如果首部长度不是4字节的整数倍，则必须填充以满足。</p><ol start="3"><li>区分服务（8bit）</li></ol><p>只有在使用区分服务的时候，这个字段才有作用，但是一般都不使用。</p><ol start="4"><li>总长度（16bit）</li></ol><p>总长度的单位是字节。最大可以表示的数据报有2^16 - 1&#x3D;65535byte.</p><p>数据报文最大（首部和数据之和的长度）受制于一个数据帧的数字字段的最大长度（最大传送单元MTU Maximum Transfer Unit）所以一个IP数据报的总长度一定不能超过MTU，否则必须进行分片处理</p><p>为了统一规定IP协议规定互联网中的所有主机和路由器必须能够接受长度不超过576字节的数据包 512 + 60（最长的IP数据报首部）+ 4字节的富余量，如果实际传输的数据大于此值，那么首先要检查目的主机以及路由器能否处理，否则就需要分片</p><p>如果有分片，，那么总长度是指的是各个分片的总长度（说明分片的时候要修改）</p><ol start="5"><li>标识：（identification）(16bit<br>)</li></ol><p>每产生一个数据报计数器就+1并且将此值付给标识字段。标识没有序号意义，仅仅只是作为是否同属一个原来的数据报在分片的标志。</p><ol start="6"><li>标志：(flag)（3bit）</li></ol><p>目前只有两位有意义</p><p>MF（more fragment）最低位，表示后面还有分片，否则表示这就是最后一个分片</p><p>DF(dont fragment)意思是不能分片，只有DF &#x3D; 0 的时候才允许分片。</p><ol start="7"><li>片位移（13bit）：单位为8byte，指出某片在原分组中的相对位置。这个偏移是在最原始的IP数据报中偏移而不是相对偏移。</li></ol><p>分片过程中标识不需要修改，但是总长度，MF位，DF位，片位移都需要进行相应的修改。</p><ol start="8"><li>生存时间：TTL（Time to live）（8bit）</li></ol><p>目前是作为跳数限制占8位最多255，每次经过一个路由器的时候就-1，当等于0则丢弃</p><ol start="9"><li>协议（8bit）</li></ol><p>此数据包携带的数据是哪种协议以便于上交给哪个协议进行处理</p><ol start="10"><li>首部检验和（16bit）</li></ol><p>只检验首部而不检验数据以减小计算量数据报每经过一个路由器，路由器都要重新计算一下首部检验和（首部可能有字段发生变化）</p><p>如何计算？</p><p>先把首部划分为16bit的字段，把校验和字段置为0。应为首部一定事宜4byte为单位的，因此一定可以完整划分。</p><p>将各个16bit按照反码算数运算相加，将得到的值取反码写入检验和字段。接收方收到数据报后将首部所有字段再用反码算数运算计算一遍最后取发反码，若没有差错则和为0</p><ol start="11"><li><p>源地址（32bit）</p></li><li><p>目的地址（32bit）</p></li></ol><p>可变部分：</p><p>主要用于支持排错测量以及安全等等措施。</p><h2 id="IP分组的转发"><a href="#IP分组的转发" class="headerlink" title="IP分组的转发"></a>IP分组的转发</h2><p>一个实际的路由表可能还会有其他信息，比如标记参数使用情况等等。</p><p><img src="/../img/computernetwork/3-15.png"></p><p>特定主机路由：针对特定的目的主机指明一个路由。</p><p>默认路由：</p><p>分组转发算法：</p><ol><li><p>从数据报的首部提取目的主机的IP地址D，得出目的网络地址位N</p></li><li><p>如果N就是此路由器直接相连的某个网络地址则直接交付，否则继续</p></li><li><p>如果路由表中有目的地址的D的特定主机路由，则交给指定的下一跳，否则继续</p></li><li><p>如果路由表中有达到网络N的路由，则把数据报传送给下一跳路由器。否则继续</p></li><li><p>如何没有则交给默认路由器</p></li><li><p>如果连默认路由器都没有，则报告转发出错</p></li></ol><h1 id="划分子网与构造超网"><a href="#划分子网与构造超网" class="headerlink" title="划分子网与构造超网"></a>划分子网与构造超网</h1><p>划分子网的方法是从主机号借用若干位作为子网号（sub-netid）</p><p>发送给某一网络的数据报照常，但是路由器收到数据报进行交付的时候根据子网交付</p><p>子网在拓扑结构上已经实际上是一个网络了，应为他实际上已经连接的是路由器的不同端口了</p><p><img src="/../img/computernetwork/3-16.png"></p><p><strong>子网掩码</strong></p><p>如果一个网络没有划分子网则其子网掩码中的1的位置和IP地址中的网络号字段（net-id）刚好一一对应</p><p>所以在配置路由器的时候在配置某一个端口的ip的同时也要配置其对应的子网掩码</p><p>注意：一但划分了子网，那么发送者应该是要知道这种划分的，原来的网络就不存在了，存在的只有各个子网，这些子网对外显现出为一个网络。</p><p>若subnet-id有nbit则一共有2^n的情况，除去全为0和全为1的情况，就可以得出表中的子网数。</p><p><img src="/../img/computernetwork/3-18.png"></p><p><img src="/../img/computernetwork/3-17.png"></p><p>子网号不能位全0或者全1但是随着CIDR的出现，这种方式在某些情况下也是支持的</p><h2 id="转发算法相应的改动"><a href="#转发算法相应的改动" class="headerlink" title="转发算法相应的改动"></a>转发算法相应的改动</h2><p>如果有子网，则转发算法也要修改</p><p>在判断是否直接交付时，此时连接路由器各个端口的已经不再是传统分类上的网络，而可能是子网，所以在判断网络时要将D与子网掩码AND然后判断</p><p>只有直接交付的情况下才能看到子网的具体划分，其余情况都是默认掩码，按照网络号（这与后面的路由表的生成有关系）</p><h2 id="CIDR-无分类编址"><a href="#CIDR-无分类编址" class="headerlink" title="CIDR 无分类编址"></a>CIDR 无分类编址</h2><p>CIDR将网络前缀都相同的连续IP组成一个CIDR地址块，在此情况下CIDR使的子网掩码就是一连串网络前缀的1</p><p>地址表示中全0和全1的主机号依然保留做特殊用途。</p><p>利用超网的划分可以实现地址聚合。</p><p><strong>最长前缀匹配</strong></p><p><img src="/../img/computernetwork/3-19.png"></p><p>采用地址聚合时一般是不会出现多个匹配的情况的，但是实际路由设置过程中可能出现非聚合的情况</p><p>如果出现多个匹配则选择最长的前缀匹配。</p><p>一种快速查找方法，首先将每一个网络号的唯一前缀求出来，唯一前缀要是最小的能够唯一表示的前缀字段</p><p>首先利用二分查找找出和最小前缀匹配的项目，但是这只是一个充分条件，在找到叶节点以后，在与子网掩码AND具体判断到底是不是正确的网络号</p><p>还有更进一步的压缩技术等等</p><h2 id="ICMP"><a href="#ICMP" class="headerlink" title="ICMP"></a>ICMP</h2><p><img src="/../img/computernetwork/3-4.png"></p><p>实际上就是一种控制意义的IP数据报</p><p>有两种类型：</p><p>ICMP差错报文和ICMP询问报文</p><p><img src="/../img/computernetwork/3-20.png"></p><p>ICMP的前4个字节是统一的格式，共有三个字段：类型，代码和检验和。接着4个字节与ICMP的类型有关，最后是数据字段，长度取决于ICMP类型。</p><p><strong>差错报文类型：</strong></p><ol><li><p>终点不可到达:路由器或者主机不能交付数据报就向源点发送终点不可到达报文。</p></li><li><p>时间超过：路由器收到生存时间为0的数据报，再丢弃数据报外，还要向源点发送时间超过报文。</p></li><li><p>参数问题：当路由器或者目的主机收到的数据报的首部中的字段的值不正确，就丢弃该数据报，并且向源点发送参数问题报文</p></li><li><p>改变路由（重定向）：路由器把改变路由报文发送给主机，让主机知道下一次应该法数据报发送给更好的路由器</p></li></ol><p><em>主机也有一个路由表。出于效率的考虑，这些主机不和连接在网络上的路由器定期交换路由信息。一般都在路由表中设置一个默认路由器的IP地址。</em></p><p>所有ICMP的差错报告报文中的数字字段都具有相同的格式。把收到的需要进行差错报告的IP数据报的首部和数据字段的前8个字节提取出来作为ICMP报文的数据字段。在加上ICMP报文的前8个字节。其中IP数据报的前八个字节是得到了运输层的端口号（TCP和UDP）</p><p><img src="/../img/computernetwork/3-21.png"></p><p>以下情况不发送差错报文</p><ul><li><p>ICMP差错报文的差错不发送差错报文</p></li><li><p>第一个分片的数据报片的所有后续数据报片</p></li><li><p>多播地址的数据报</p></li><li><p>特殊地址（如127.0.0.0或者0.0.0.0）</p></li></ul><p><strong>询问报文类型：</strong></p><ol><li>回送请求或者回答</li></ol><p>ICMP 回送请求报文是由主机或者路由器向一个特定的目的主机发出的询问。收到此报文的主机必须给ICMP发送回送回答报文。</p><ol start="2"><li>时间戳请求或者回答</li></ol><p>请某台主机或者路由器回答当前的日期和时间。回答报文中有一个32bit的字段。</p><h2 id="ping（Packet-Internet-Group）"><a href="#ping（Packet-Internet-Group）" class="headerlink" title="ping（Packet Internet Group）"></a>ping（Packet Internet Group）</h2><p>tracerout指令</p><h1 id="路由选择协议"><a href="#路由选择协议" class="headerlink" title="路由选择协议"></a>路由选择协议</h1><p>理想的路由算法：</p><ul><li><p>算法必须是正确的和完整的</p></li><li><p>算法在计算上应该简答</p></li><li><p>算法能适应通信量和网络拓扑的变化</p></li><li><p>算法应该具有稳定性</p></li><li><p>算法应该是公平的</p></li><li><p>算法应该是最佳的</p></li></ul><p>静态路由选择策略（人工配置每一条路由）</p><p>动态路由选择（自适应路由选择）</p><h3 id="AS（autonomous-system）（自洽系统）"><a href="#AS（autonomous-system）（自洽系统）" class="headerlink" title="AS（autonomous system）（自洽系统）"></a>AS（autonomous system）（自洽系统）</h3><p>在单一技术管理下的一组路由器，这些路由器使用一种自洽系统内部的路由选择协议和共同的度量。一个AS对于其他AS表现出的是一个单一的和一致的路由选择策略。</p><p>互联网将路由选择协议划分为两大类</p><ul><li><strong>内部网关协议IGP（Interior Gateway Protocol)</strong></li></ul><p>内部的路由选择协议和外部其他自洽系统的选择无关，有多种RIP OSPF  </p><ul><li><strong>外部网关协议EGP （Externel Gateway Protocol）</strong></li></ul><p>如果源主机和目的主机位于不同的自洽系统中，需要通过不同的路由协议转到另外一个自洽系统,目前使用BGP.</p><p>自洽系统之间的路由选择叫做域间路由选择（interdomain routing）</p><p>内部叫做 域内路由选择（intradomain routing）</p><p><img src="/../img/computernetwork/3-22.png"></p><h3 id="RIP"><a href="#RIP" class="headerlink" title="RIP"></a>RIP</h3><h4 id="RIP-History"><a href="#RIP-History" class="headerlink" title="RIP History"></a>RIP History</h4><p>RIP v1 is considered an interior gateway protocol that is classful</p><ul><li><p>RIP v1 is a distance vector protocol that broadcasts its entire routing table to each neighbour router at predetermined itervals. The default interval is 30 seconds.</p></li><li><p>RIP used hop count as a metric with 15 as the maximum number of hops</p></li></ul><p>RIP v1 is capable of load balancing over as many as six equal-cost paths, with four paths as the default.</p><p>等价路径是指在路由网络中，到达目的地的多条路径具有相同的代价或距离。RIP v1 可以在这些等价路径上进行负载均衡，确保流量在这些路径之间分布均匀。</p><p>RIP was originally specified in RFC 1058</p><p>it has the following limitations</p><ol><li><p>it doesn’t send subnet mask information in its updates</p></li><li><p>It sends updates as broadcasts on 255.255.255.255</p></li><li><p>It doesn’t support authentication</p></li><li><p>It doesn’t able to support VLSM(可变长度子网掩码) or Classless Interdomain Routing(CIDR)</p></li></ol><h4 id="code"><a href="#code" class="headerlink" title="code"></a>code</h4><p>The <code>router rip</code> command selects RIP as the routing protocol.</p><p>The network command assigns a NIC-based network address（特定网络接口卡相关联的网络地址） to which a router will be directly connected.</p><h4 id="RIP-v2"><a href="#RIP-v2" class="headerlink" title="RIP v2"></a>RIP v2</h4><p>RIP v2 is an improved version of RIP v1 and shares the following features:</p><ul><li><p>It is a distance vector protocol that uses a hop count metric.</p></li><li><p>It uses holddown timers to prevent routing loops&#x3D;default is 180 seconds.</p></li><li><p>It uses split horizon to prevent routing loops.</p></li></ul><p>“Split horizon” 是一种路由算法中的策略，旨在防止路由环路的发生。它规定了当路由器向邻居广播更新信息时，不应将包含该更新信息的路由条目发送给它学到这个信息的邻居。这就是说，如果路由器A向邻居B报告了某个目的地的路由信息，A就不会再从B那里接收关于这个目的地的路由信息。</p><p>A 中含有到达NET1的路由表项：NET1 直接交付，A转发给 B， B学到了此路由表 NET1 A。随后C与A的连接断开，但是A又收到了B的路由称中含有NET1 B，此时A已经删除了自己到达NET1的路由表项，因此又把NET1 B放入自己的路由表中，循环产生。</p><p>一般也可以使用带毒性的水平分割（split-horizon with poisoned reverse），B回发送给A的表项中条数被设置为16跳，即永远不可到达，因此A不可能将其放入自己的路由表中。</p><ul><li>It uses 16 hops as a metric for infinite distance</li></ul><h4 id="Compare-RIPV1-AND-RIPV2"><a href="#Compare-RIPV1-AND-RIPV2" class="headerlink" title="Compare RIPV1 AND RIPV2"></a>Compare RIPV1 AND RIPV2</h4><p><img src="/../img/computernetwork/3-23.png"></p><h4 id="code-1"><a href="#code-1" class="headerlink" title="code"></a>code</h4><p>The router command starts the routing process</p><p>The network commands causes the implementation of the following three functions:</p><ul><li>The routing updates are multicast out an interface</li></ul><p>RIP v2 使用组播（multicast）的方式发送路由更新。这意味着当路由器向网络中的其他路由器发送更新时，它将使用组播地址来传递这些信息，而不是向每个单独的路由器发送独立的更新。</p><ul><li>The routing updates are processed if they enter that same interface</li></ul><p>路由器接收到的路由更新只有在它们进入相同的接口时才会被处理。这是为了防止由于路由更新通过其他接口进入而引起的不必要的处理和信息循环。</p><ul><li>The subnet that is directly connected to that interface is advertised</li></ul><p>直接连接到路由器的子网将被广告（advertised）。这意味着路由器将告知其他路由器它所直接连接的网络的可达性信息。这是 RIP v2 的一种基本行为，确保网络中的其他路由器了解到这些直接连接的子网。</p><h4 id="Verifying-RIP-v2"><a href="#Verifying-RIP-v2" class="headerlink" title="Verifying RIP v2"></a>Verifying RIP v2</h4><ul><li><p>Router# show ip protocols </p></li><li><ul><li>Verifying the RIP Configuration</li></ul></li><li><p>Router# show ip route</p></li><li><ul><li>Displaying the IP Routing Table</li></ul></li></ul><p>Troubleshooting RIP v2</p><ul><li>Router# debug ip rip</li></ul><p><img src="/../img/computernetwork/3-24.png"></p><ul><li><ul><li>display RIP routing updates sent and received.</li></ul></li><li><p>Router# undebug all </p></li><li><ul><li>turn of al the debugging</li></ul></li></ul><h2 id="diferences-of-v1-and-v2"><a href="#diferences-of-v1-and-v2" class="headerlink" title="diferences of v1 and v2"></a>diferences of v1 and v2</h2><p><img src="/../img/computernetwork/3-9.png"></p><h4 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h4><p>基于距离向量的路由选择协议，要求每一个路由器都必须维护从他自己到其他每一个目的网络的距离的记录.</p><p>RIP使用“跳数”（hop count）记录距离。</p><p>RIP 跳数最大位16(15)，超过则认为不可达。</p><p>RIP不能再两个网络之间同时使用多条路由。RIP会选择一条具有有最少路由器的路由（哪怕存在更低时延的路由）</p><p><strong>如何交换信息</strong></p><ul><li><p>仅仅和相邻的路由器交换信息</p></li><li><p>交换的信息是当前本路由器知道的所有信息，即自己的现在路由表,“我到本自治系统中所有网络的最短距离，以及到每个网络应该经过的下一跳路由器”</p></li><li><p>按照固定的时间间隔交换路由信息</p></li></ul><p>PS：事实上也就意味着路由表中最主要的信息就是到某个网络的距离以及经过下一跳的地址。路由表更新的原则就是找到每个目的网络的最短距离，又称之为距离向量算法</p><p><strong>距离向量算法</strong></p><p>假设发送过来的路由表格式有：</p><ol><li><p>对于地址为X的相邻路由发送的报文，修改所有项目，把下一跳字段中的地址都作为X，并且把距离+1，即目的网络N， 距离d+1，下一跳路由器X。</p></li><li><p>如果路由表中没有N，则加入</p></li></ol><p>如果路由表中有N，否则查看此项目下一跳地址</p><p>如果下一跳地址是X，则更新</p><p>如果下一跳地址不是X，则比较距离，如果新项目距离更小则替换，如果项目距离更大则不替换。</p><ol start="3"><li>如果三分钟还没有收到相邻路由表的更新路由表，则把此相邻路由器记为不可到达，设置为16</li></ol><p><strong>Bellman-ford 算法</strong></p><p>对于一个有向图G（V,E）Bellman-ford算法可以给出对于源点s到其他各个点的最短路径。</p><p>算法思路。</p><p>set every vertice in a tag d(v) , default is inf except the source vertice. then check every edge e_i &lt;v_i,v_j&gt; if d(v_j) &gt; w(v_i,v_j) + d(v_i) then change the d(v_j) into w(v_i, v_j) + d(v_i). Do the loop for every vertice and after |v| - 1 loop all the vertice get the d(v) which is the min weighted path. </p><p>RIP协议也是封装在IP数据报内部的</p><h3 id="RIP协议的报文格式"><a href="#RIP协议的报文格式" class="headerlink" title="RIP协议的报文格式"></a>RIP协议的报文格式</h3><p><img src="/../img/computernetwork/3-6.png"></p><p>注意RIP协议使用UDP传输</p><p>首部四个字节，分为命令，版本，以及一段0，</p><p>命令字段指明此报文的意义，比如1请求路由信息<br>2表示对请求路由信息的响应或者未被请求而发出的路由更新报文</p><p>路由部分中地址标识符字段用来标志所使用的地址协议如果是IP就令这个字段为2（说明也可以支持非TCP&#x2F;IP协议）</p><p>路由标记填入自洽系统号（ASN Autonomous System Number）（有可能收到其他ASN的信息）</p><p>RIP报文的最大长度：4字节首部+20 * 25字节的路由信息</p><p>也可以使用鉴别功能此时将地址族标识设为全1，路由标记写入鉴别的类型</p><p>ASN是一个16位的号码 由IANA分配</p><p><img src="/../img/computernetwork/3-7.png"></p><p><strong>性质</strong>：</p><p>好消息传播的快，坏消息传播的慢</p><h3 id="OSPF"><a href="#OSPF" class="headerlink" title="OSPF"></a>OSPF</h3><p>Open Shortest Path First (OSPF) is a link-state routing protocol based on open standards</p><p>It is described in several standards of the Internet Engineering Task Force (IETF)</p><p>OSPF is becoming the preferred IGP protocol when compared with RIPv1 and RIPv2 because it is scalable</p><h4 id="Routing-Information"><a href="#Routing-Information" class="headerlink" title="Routing Information"></a>Routing Information</h4><p>The state of link is description of an interface and the relationship to its neighbouring routers</p><p>The collections of link-states forms a link-state database, sometimes called a topological database</p><p>Routers apply the Dijkstra shortest path first(SPF) algorithm to build the SPF tree, with themselves as the root.</p><p>Router calculate the best paths through SPF tree, then best paths are selected and placed in the routing table</p><p>开放最短路径有限（Open Short Path First）</p><p>使用了Dijstra提出的最短路径算法SPF</p><p><strong>Dijkstra SPF 算法</strong></p><p>set a source vertice</p><p>set a path_len array d[]</p><p>set a visited array visted[]</p><p>set a pre array[]</p><p>at the beginning d[s] &#x3D; 0 d[else] &#x3D; inf all the vertice is unvisited.</p><ol><li><p>in all unvisited vertice find the min path_len one v_j. set it as visited.</p></li><li><p>check all the connected and not visited vertice v_i if d[v_j] + w(v_j,v_i) &lt; d[v_i] update d[v_i] and set the pre of v_i as v_j;</p></li></ol><p>go back to 1 untill all the vertice is visited.</p><p><strong>proof</strong></p><p>for s-&gt; v if all the vertice between s -&gt; v is in S then the min v is dist[v] becaue eevry d[v] is inf so dist[v] if not update must come from v_n and which mean v_n have been visted. If there is a path s -&gt; v has a v_m not in the S, but s -&gt; v is the min, then pick s -&gt; v_m &lt; s -&gt; v_k v_k is the vertice before v, but when we pick v_k v_k is the min unvisited vertice and there is a paradox</p><p>特征：使用分布式的链路状态协议（link state protocol）</p><ol><li><p>用洪泛法（flooding）向所有路由器发送信息</p></li><li><p>发送的信息就是本路由器和相邻的所有路由器的链路状态 包括和哪些路由器相连以及该链路的度量（metric）</p></li><li><p>只有当链路发生变化的时候路由器才向所有路由器洪泛法发送信息，而RIP是定期交换信息</p></li></ol><p>最后全网范围内都有一个同步的链路数据库，包括所有路由器相互连接的情况，然后依据这个数据库构建自己的路由表Dijkstra最短路径路由算法</p><p>特点：更新过程收敛的块</p><p>为了降低洪泛法的消耗</p><p>可以将一个自洽系统划分位若干个更小的范围（area）每个区域都有一个32bit的区域标识符每一个区域的路由器只知道本区域的完整网络拓扑。在上层的区域叫做主干区域（backbone）规定其标识符为0.0.0.0，其他区域的来的信息都有区域边界路由器进行概括。所有主干区域内的路由器叫做主干路由器。与其他自治系统交换路由信息的路由器叫做自治边界路由器</p><p><img src="/../img/computernetwork/3-1.png">     </p><p>OSPF不使用UDP而是直接使用IP数据报传送</p><p><img src="/../img/computernetwork/3-8.png"></p><p>支持：</p><ol><li><p>为不同的业务设定不同的代价，从而得到不同的路由</p></li><li><p>如果某个目的网络有多条相同的代价，负载平衡</p></li><li><p>OSPF支持可变长的子网划分和无分类的CIDR</p></li><li><p>每一个链路状态都带上一个32位的序号，链路序号的增长速率不得超过5秒钟1次</p></li></ol><h4 id="OSPF五种分组分类"><a href="#OSPF五种分组分类" class="headerlink" title="OSPF五种分组分类"></a>OSPF五种分组分类</h4><ol><li><strong>问候（hello)</strong></li></ol><p>发现维持相邻的站的可达性</p><ol start="2"><li><strong>数据库描述分组（data description）</strong></li></ol><p>向临站给出自己的链路状态数据库中的所有的链路状态项目和摘要信息</p><p>3.<strong>链路状态请求（Link State Request</strong></p><p>向对方请求发送某些立澜路状态项目的详细信息</p><p>4.<strong>链路状态更新（Link State Update)</strong></p><p>用洪泛法对全网更新链路状态</p><p>5.<strong>链路状态确认（Link State Acknowledgment)</strong></p><p>两个相邻路由器每10s要交换依次问候分组，明确哪些相邻的路由器是可达的</p><p><img src="/../img/computernetwork/3-26.png"></p><h4 id="Difference-of-OSPF-and-RIP"><a href="#Difference-of-OSPF-and-RIP" class="headerlink" title="Difference of OSPF and RIP"></a>Difference of OSPF and RIP</h4><p><img src="/../img/computernetwork/3-10.png"></p><p>OSPF Features</p><p>OSPF overcomes these limitations</p><p>more robust and more scalable</p><p>large OSPF network use a hierarchical design</p><h4 id="Link"><a href="#Link" class="headerlink" title="Link"></a>Link</h4><p><strong>Link</strong> is a physical connection between two network devices</p><p><strong>Link-State</strong> of a link between two routers, including information about a router’s interface and its relationship to neighbouring routers</p><p><strong>cost</strong>: The value assigned to a link. Rather than hops, link-state protocols assign a cost to a link, which is based on the bandwidth of the link</p><p><strong>Area</strong>: a collection of networks&#x2F;routers having the same area ID Each router within an area has the same link-state information.</p><p><strong>Neighbourship Database</strong>: A listing of all the neighbours to which a router has established a bi-directional communication(双向通信)</p><p><strong>Topology Database</strong>: A list of information about all other routers in the internetwork. It shows the internetwork topology.</p><p><strong>Routing Table</strong>: Sometimes known as the forwarding database The routing table each router is unique.</p><p><strong>Designated Router</strong>(DR): One router on an OSPF multiaccess network that is elected to represent all the routers in that network</p><p><strong>Backup Designated Router(BDR)</strong></p><p>A standby router that becomes the DR, if the original DR fails.</p><p><strong>Area</strong>: Areas are defined with a 32 bits number. It can be either in IP format or single decimal value. Area 0 or Area 0.0.0.0</p><p><strong>Area 0</strong>:A single area whose area number is 0</p><p>OSPF uses a 2 level hierarchical model</p><p>In multi-area OSPF networks, all areas are required to connected to area 0</p><p><img src="/../img/computernetwork/3-27.png"></p><h4 id="OSPF-Operations"><a href="#OSPF-Operations" class="headerlink" title="OSPF Operations"></a>OSPF Operations</h4><p>OSPF use neighbour adjacencies to gain full knowledge of the network.</p><p>OSPF operation include five steps</p><p><strong>1. set up the adjacency relationships</strong></p><p>Router send hello packet at an interval. If a neighbour founded: Add the neighbour to the neighbourship database</p><p>Discover the network type</p><p>If a multi-access network, enter the DR&#x2F;BDR election process and enter Step2</p><p>Discover the network type. If point-to-point or point-to-multipoint, no DR&#x2F;BDR is elected and skip Step 2</p><p>If the DR&#x2F;BDR fields in the hello packet’s header is already occupied, no DR&#x2F;BDR election occurs and skip step2</p><p><strong>2. elect DR and BDR (if needed)</strong></p><p>If no other router online, the router becomes the DR. The next router to “come up” will be BDR</p><p>If multiple routers(two or more) come online simultaneously, then…</p><p>The router with the highest priority becomes DR (Priority of zero means “never DR”)(If there is a tie, then the router with the highest router ID become DR) (Router ID is the highest loopback or interface IP address)</p><p>Router with second highest priority or router ID beocmes BDR</p><p>BDR becomes DR if the DR fails</p><p>However If A new OSPF router joins the network with a higher priority or router ID the current DR and BDR do not change</p><p>It would become the new BDR only if the current DR failed or become the new DR only if the current DR and BDR failed</p><p><strong>3. Discover the routes</strong></p><p>Previously explained in the ExStart to Full State </p><p>Routers determine “master&#x2F;slave” relationship</p><p>DR&#x2F;BDR in multiaccess networks exchange LSAs and all DR routers send the DR&#x2F;BDR their Type 2 DBDS</p><p><strong>4. Choose appropriate routes</strong></p><p><strong>5. Maintain the route information</strong></p><p>The regular exchange of hellos is the mechanism OSPF uses to detect a new neighbour or a downed neighbour.</p><p>OSPF has seven states.</p><p>Init, 2Way, Ex Start, Exchange, Loading, Full</p><h4 id="OSPF-NetWork-Types"><a href="#OSPF-NetWork-Types" class="headerlink" title="OSPF NetWork Types"></a>OSPF NetWork Types</h4><ul><li><p>Broadcast multi-access, such as Ethernet</p></li><li><p>Point-to-Point networks</p></li><li><p>Nonbroadcast multi-access(NBMA)</p></li></ul><p>only Broadcast mutiaccess and nonbroadcast multiaccess should elect DR</p><h4 id="DR-amp-BDR"><a href="#DR-amp-BDR" class="headerlink" title="DR &amp; BDR"></a>DR &amp; BDR</h4><p>each router then forms adjacency with DR and BDR</p><p>The DR sends link-state information to all other routers on the segment using the multicast address of 224.0.0.5 for all OSPF routers</p><p>to ensure that DR&#x2F;BDR see the link states all routers send on the segment, the multicast address for all DR&#x2F;BDRs 224.0.0.6 is used.</p><h4 id="OSPF-Packets"><a href="#OSPF-Packets" class="headerlink" title="OSPF Packets"></a>OSPF Packets</h4><p><em>Header</em></p><p><img src="/../img/computernetwork/3-28.png"></p><p><img src="/../img/computernetwork/3-30.png"></p><p><strong>Hello</strong> Hello</p><p>when a router starts an OSPF routing process on an interface, it sends a hello packet and continues to send hello at regular intervals</p><p>The rule that govern the exchange of OSPF hello packets are called the Hello protocol</p><p>Hello are sent every 10 seconds by default on broadcast nulti-access and point-to-point networks, such as Frame Relay, the default time is 30 seconds.</p><p><strong>Database Description</strong> DBD</p><p><strong>Link-State Request</strong> LSR</p><p><strong>Link-State Update</strong> LSU</p><p><strong>Link-State Acknowledgement</strong> LSAck</p><h4 id="Which-Router-will-be-DR"><a href="#Which-Router-will-be-DR" class="headerlink" title="Which Router will be DR?"></a>Which Router will be DR?</h4><p>Priority + Router ID the biggest is DR the second biggest is BDR</p><p>Priority:1-255 Default &#x3D; 1;</p><p>Router ID:</p><ul><li><p>A loopback IP address</p></li><li><p>If the absence of loopback IP address, the highest-value address interface IP</p></li><li><p>If the interface goes down, the router must re-estabishing adjacency and readvertising LSA</p></li></ul><p><img src="/../img/computernetwork/3-29.png"></p><h4 id="code-2"><a href="#code-2" class="headerlink" title="code"></a>code</h4><p><code>router ospf process-id</code></p><p><code>network address wildcard-mask area area-id</code></p><p>在子网掩码中，将掩码的一位设成1表示IP地址对应的位属于网络地址部分。相反，在访问列表中将通配符掩码中的一位设成1表示I P地址中对应的位既可以是1又可以是0。有时，可将其称作“无关”位，因为路由器在判断是否匹配时并不关心它们。掩码位设成0则表示IP地址中相对应的位必须精确匹配。</p><p>to add stability to OSPF router ID</p><p><code>interface loopback number</code></p><p><code>ip address address subnet-mask</code></p><p>here the loopback interface must be configured before the OSPF process start</p><p><code>ip ospf priority number</code></p><p>number 0-255 default is 1</p><p>A 0 priority indicates an interface cannot be elected as DR or BDR</p><p><code>show ip ospf [interface type number]</code></p><h4 id="cost-of-ospf"><a href="#cost-of-ospf" class="headerlink" title="cost of ospf"></a>cost of ospf</h4><p>it is a 16bit number 1-65535</p><p>Formula COST &#x3D; 100000000&#x2F;Bandwidth</p><p>All interfaces connected to the same link must agree on the cost of that link. Otherwise, the link will be considered down.</p><p><code>Router(config-if)# ip ospf cost number</code></p><p><code>Router(config-if)# bandwidth number</code></p><h4 id="timers"><a href="#timers" class="headerlink" title="timers"></a>timers</h4><p>All the routers in an OSPF area must agree on the same hello interval and the same dead intervals</p><p><code>Router(config-if)# ip ospf hello-interval seconds</code></p><p><code>Router(config-if)# ip ospf dead-interval seconds</code></p><h2 id="BGP"><a href="#BGP" class="headerlink" title="BGP"></a>BGP</h2><p>互联网规模太大，自洽系统AS之间的路由选择非常困难</p><p>自洽系统AS之间路由选择必须考虑有关策略</p><p><strong>BGP发言人</strong></p><p>每一个自治系统的管理员选择至少一个路由器作为该自治系统的“BGP发言人”</p><p>BGP发言人之间使用TCP连接建立BGP共享路由信息</p><p>所以每一个BGP发言人除了要运行BGP协议以外，还必须运行该内部网关协议比如OSPF RIP</p><p><img src="/../img/computernetwork/3-31.png"></p><p>BGP刚刚运行的时候BGP相邻的站交换整个BGP路由表，以后只更新有变化的部分</p><p>报文：</p><ol><li><p>OPEN</p></li><li><p>UPDATE</p></li><li><p>KEPPALIVE</p></li><li><p>NOTIFICATION</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>computernetwork</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Computernetwork0_Summary</title>
    <link href="/2023/09/19/computernetwork0/"/>
    <url>/2023/09/19/computernetwork0/</url>
    
    <content type="html"><![CDATA[<h1 id="1-Summary"><a href="#1-Summary" class="headerlink" title="1 Summary"></a>1 Summary</h1><h2 id="networks"><a href="#networks" class="headerlink" title="networks"></a>networks</h2><p>What is a network</p><ul><li>a net work is an intricately connected system of objects, devices, or people</li></ul><h2 id="Data-Networks-Classifications"><a href="#Data-Networks-Classifications" class="headerlink" title="Data Networks Classifications"></a>Data Networks Classifications</h2><ul><li><p>LAN(Local Area Networks)</p><ul><li>Operate locally</li><li>Multi-user access</li><li>High speeds expected</li><li>Errror rate is easily controlled</li></ul></li><li><p>WAN(Wide Area Networks)</p><ul><li>Operate over larger areas</li><li>Access over serial links, optical links,etc</li><li>Traditionally, have lower speeds</li><li>Error rate can not be easily controlled</li></ul></li></ul><p><em>PS:Serial links typically refer to point-to-point connections that transmit data sequentially, bit by bit, over a single communication channel.</em> </p><p><em>PS: Optical links, also known as fiber-optic links, use fiber-optic cables to transmit data using light signals.</em></p><p>For WAN, it can be divded into point-point WAN and  switched WAN.</p><p>Image example:</p><p><img src="/img/computernetwork/1-1.png"></p><p>The most striking feature is the coverage, LAN usually cover a small area like an office or college, while LAN covers several nations or even continents</p><p>There is also other features. LAN can be privately held while WAN in most cases can not, the speed of its data transformation, business model and price are different too.</p><h2 id="LAN-Devices"><a href="#LAN-Devices" class="headerlink" title="LAN Devices"></a>LAN Devices</h2><ul><li>Hub（集线器）</li></ul><p>Multiport repeater, connects PCs, repeats siganls.</p><p>When one device sends data, the hub forwards it to all devices,regardless of whether the data is intended for a specific device or not</p><ul><li>Bridge（网桥）</li></ul><p>LAN segmentation,MAC addresses</p><p>It can separate the network into more segments.And it can forward or block traffic between segments based on MAC.</p><ul><li>Switch（交换机）</li></ul><p>Multiport-bridge, Full badn width</p><p><em>PS:The differences and similarities between switch and bridge. A Bridge has only 2 ports.<br>A switch can handle many ports.<br>Packet forwarding in Bridges is performed using the software. Thus bridges are software-based.<br>Packet forwarding in Switches are performed using ASICS (Application Specific Integrated Circuits). Thus a switch is hardware-based.<br>Both switch and bridge use the MAC address.</em></p><ul><li>Router（路由器）</li></ul><p>Path determination, Packet switching</p><h2 id="WAN-Devices"><a href="#WAN-Devices" class="headerlink" title="WAN Devices"></a>WAN Devices</h2><ul><li>Router</li></ul><p>Path determination,Packet switching</p><ul><li>Modem,CSU&#x2F;DSU,TA&#x2F;NT1</li></ul><p>Analog to Digital,Remote LAN connections</p><p><em>PS:A modem is a device that modulates digital data from a computer or network into analog signals suitable for transmission over analog communication lines, such as telephone lines.It also performs the reverse operation by demodulating incoming analog signals back into digital data for reception by computers or networking equipment.</em></p><h2 id="Multi-layer-ISP-structure"><a href="#Multi-layer-ISP-structure" class="headerlink" title="Multi-layer ISP structure"></a>Multi-layer ISP structure</h2><p>Image example:</p><p><img src="/img/computernetwork/1-5.png"></p><h2 id="Data"><a href="#Data" class="headerlink" title="Data"></a>Data</h2><p>Data is sent in bits,1s and 0s.</p><p>Data is not the information itself</p><p>Data is an encoded form of information</p><h2 id="Data-Packets"><a href="#Data-Packets" class="headerlink" title="Data Packets"></a>Data Packets</h2><ul><li><p>Computer data is often broken into small, easily transmitted units</p><ul><li>Using the OSI model, these units can be called packets, or frames or segments</li></ul></li></ul><p>Computers can take turns sending packets</p><p>If packet is lost, only small amount of data must be retransmitted.</p><p>Data can take different paths</p><h2 id="Protocol"><a href="#Protocol" class="headerlink" title="Protocol"></a>Protocol</h2><p>All devices must speak the same “language” or use the same protocol (use same set of rules).</p><h2 id="Source-and-Destination"><a href="#Source-and-Destination" class="headerlink" title="Source and Destination"></a>Source and Destination</h2><h2 id="Media-Types"><a href="#Media-Types" class="headerlink" title="Media Types"></a>Media Types</h2><p>Media—material through which data packets travel</p><h2 id="Digital-Bandwidth"><a href="#Digital-Bandwidth" class="headerlink" title="Digital Bandwidth"></a>Digital Bandwidth</h2><p>Bandwidth is the measure of how much information can flow from one place to another in a given amount of time.</p><p>Measured in: bits&#x2F;second (bps)</p><h2 id="Throughput"><a href="#Throughput" class="headerlink" title="Throughput"></a>Throughput</h2><p>Through is a measure of the rate of data transfer over a network.</p><h2 id="OSI-Open-System-Interconnection-Model"><a href="#OSI-Open-System-Interconnection-Model" class="headerlink" title="OSI(Open System Interconnection) Model"></a>OSI(Open System Interconnection) Model</h2><ol start="7"><li><p>Application (User interface)</p></li><li><p>Presentation (Data presentation and encryption)</p></li><li><p>Session (Inter-host connection)</p></li></ol><p><em>PS:the session layer is responsible for managing and controlling the establishment, maintenance, and termination of sessions or connections between two communicating devices.</em></p><ol start="4"><li><p>Transport (End-to-end connections)</p></li><li><p>Network (Address and best path)</p></li><li><p>Data Link (Access to media)</p></li><li><p>Physical (Binary transmission)</p></li></ol><p>The top 3 layers are known as the <em>application layers</em>, for they deal with the user interface, data formatting, and the application access.</p><p>Layers 1-4 are known as the data flow layers, for they control the physical delivery of messages over the network.</p><h3 id="Physical-Layer"><a href="#Physical-Layer" class="headerlink" title="Physical Layer"></a>Physical Layer</h3><p>defines the electrical and functional specifications for the link between end systems (including media)<br>defines voltage levels, timing of voltage changes, physical data rates, maximum transmission distances, physical connectors, and other, similar attributes.</p><h3 id="Data-Link-Layer"><a href="#Data-Link-Layer" class="headerlink" title="Data Link Layer"></a>Data Link Layer</h3><p>provides reliable transit of data across a physical link</p><p>is concerned with physical (as opposed to logical) addressing, network topology, network access, error notification, ordered delivery of frames, and flow control</p><p>is upper sublayer of the data link layer is Logical Link Control, (LLC)the lower sublayer of the data link layer called the Media Dependebt Sublayer(MDA)</p><p><em>PS:The data link layer breaks down the stream of data from the network layer (Layer 3) into smaller, manageable units called frames. These frames include both data and control information.</em></p><p><em>PS:Each network interface card (NIC) or network adapter on a device has a unique hardware address known as a Media Access Control (MAC) address. The data link layer uses MAC addresses to identify the source and destination devices within the same LAN. This addressing allows devices to determine whether a received frame is intended for them or not.</em></p><p><em>PS:The data link layer includes mechanisms for detecting and, in some cases, correcting errors that can occur during data transmission. This is crucial for ensuring data integrity within a local network.</em></p><p><em>PS:Flow control mechanisms are used to manage the flow of data between devices. They prevent data congestion by regulating the rate at which data is sent and acknowledged.</em></p><p>PS:In shared or multi-access LANs, such as Ethernet networks, the data link layer implements access control methods to determine which device has the right to transmit data at a given time. This helps avoid data collisions and ensures fair access to the network medium.</p><h3 id="The-Network-Layer"><a href="#The-Network-Layer" class="headerlink" title="The Network Layer"></a>The Network Layer</h3><p>Provide connectivity and path selection between two end systems where routing occurs</p><p>These may be located on geographically separated networks</p><h3 id="Transport-Layer"><a href="#Transport-Layer" class="headerlink" title="Transport Layer"></a>Transport Layer</h3><p>segments and reassembles data into a data stream</p><p>concerned with how reliable transport over an internetwork is accomplished</p><p>responsible for reliable network communication between end nodes and provides mechanisms for<br>the establishment, maintenance, and termination<br>of virtual circuits, transport fault detection and<br>recovery, and information flow contro</p><h3 id="Session-Layer"><a href="#Session-Layer" class="headerlink" title="Session Layer"></a>Session Layer</h3><p>establishes, manages, and terminates sessions between communicating hosts</p><p>synchronizes dialog between presentation layer entities and manages their data exchange</p><p>offers provisions for efficient data transfer, class of service, and exception reporting of session, presentation, and application layer problems</p><p>manages data exchange between presentation<br>layer entities</p><h2 id="Presentation-Layer"><a href="#Presentation-Layer" class="headerlink" title="Presentation Layer"></a>Presentation Layer</h2><p>ensures that information sent by the application layer of one system is readable by the application layer of another system</p><p>translates between multiple data representation formats by using a common data representation format</p><p>concerned with data structures and negotiation of data transfer syntax</p><p>responsible for compression and encryption</p><h2 id="Application-Layer"><a href="#Application-Layer" class="headerlink" title="Application Layer"></a>Application Layer</h2><p>closest to the user</p><p>provides network services to user applications</p><p>does not provide services to any other OSI layer</p><h2 id="Protocols-on-ISO-layers"><a href="#Protocols-on-ISO-layers" class="headerlink" title="Protocols on ISO layers"></a>Protocols on ISO layers</h2><p><img src="/img/computernetwork/1-6.png"></p><h2 id="Data-encapsulation"><a href="#Data-encapsulation" class="headerlink" title="Data encapsulation"></a>Data encapsulation</h2><p><img src="/img/computernetwork/1-7.png"></p><h2 id="TCP-x2F-IP-Model"><a href="#TCP-x2F-IP-Model" class="headerlink" title="TCP&#x2F;IP Model"></a>TCP&#x2F;IP Model</h2><p>TCP&#x2F;IP Model and OSI Model:</p><p>The OSI and TCP&#x2F;IP models are both logical models that describe how information is transmitted between two devices across a network. They both define a set of layers, with each layer performing a specific set of functions to enable the transmission of data</p><h3 id="Application-Layer-1"><a href="#Application-Layer-1" class="headerlink" title="Application Layer"></a>Application Layer</h3><p>Handles high-level protocols, issues of representation, encoding, and session control</p><p>TCP&#x2F;IP combines all application-related issues into one layer, and assures this data is properly packaged for the next layer.</p><h3 id="Transport-Layer-1"><a href="#Transport-Layer-1" class="headerlink" title="Transport Layer"></a>Transport Layer</h3><p>Deals with the quality-of-service issues of reliability, flow control, and error correction.</p><p>Transmission Control Protocol (TCP)</p><p>User Datagram Protocol(UDP)</p><p>It package application layer information into<br>units called segments</p><h3 id="Internet-Layer"><a href="#Internet-Layer" class="headerlink" title="Internet Layer"></a>Internet Layer</h3><p>Purpose: Send source packets from any network on the internetwork and have them arrive at the destination independent of the path and networks</p><p>Best path determination and packet switching occur at this layer</p><p>Internet protocol (IP)</p><h3 id="Network-Access-Layer"><a href="#Network-Access-Layer" class="headerlink" title="Network Access Layer"></a>Network Access Layer</h3><p>Is also called the host-to-network layer. </p><p>It is concerned with all of the issues that an IP packet requires to actually make a physical link, and then to make another physical link.</p><p>It includes the LAN and WAN technology details, and all the details in the OSI physical and data link layers.</p><h3 id="TCP-x2F-IP-Protocols"><a href="#TCP-x2F-IP-Protocols" class="headerlink" title="TCP&#x2F;IP Protocols"></a>TCP&#x2F;IP Protocols</h3><p>Image example</p><p><img src="/img/computernetwork/1-8.png"></p><h2 id="Network-Topologies"><a href="#Network-Topologies" class="headerlink" title="Network Topologies"></a>Network Topologies</h2><p>Image example</p><p><img src="/img/computernetwork/1-9.png"></p><h3 id="Bus"><a href="#Bus" class="headerlink" title="Bus"></a>Bus</h3><p>Physical Perspective:</p><p>Each host is wired to a common wire. </p><p>Advantage: all hosts can communicate directly. </p><p>Disadvantage: A break in the cable disconnects hosts from each other.</p><p>Logical Perspective </p><p>Every networking device to see all signals from all other devices </p><h3 id="Ring"><a href="#Ring" class="headerlink" title="Ring"></a>Ring</h3><p>Physical Perspective</p><p>All devices wired directly to each other in what is called a daisy-chain. </p><p>Logical Perspective</p><p>In order for information to flow, each station must pass the information to its adjacent station.</p><h3 id="Dual-Ring"><a href="#Dual-Ring" class="headerlink" title="Dual Ring"></a>Dual Ring</h3><p>Physical Perspective</p><p>A dual ring topology is the same as a ring topology, except that there is a second, redundant ring, that connects the same devices. </p><p>Advantages: provide reliability and flexibility </p><p>Logical Perspective</p><p>A dual ring topology acts like two independent rings, of<br>which, only one at a time is used</p><h3 id="Star"><a href="#Star" class="headerlink" title="Star"></a>Star</h3><p>Physical Perspective</p><p>Advantage: it allows all other nodes to communicate with each other, conveniently. It also might be desirable for security or restricted access reasons</p><p>disadvantage: if the central node fails, the whole network becomes disconnected. Depending on the type of networkingdevice used, collisions can be a problem. </p><p>Logical Perspective</p><p>The flow of all information would go through one device.</p><h3 id="Tree-Hierarchical"><a href="#Tree-Hierarchical" class="headerlink" title="Tree(Hierarchical)"></a>Tree(Hierarchical)</h3><p>Physical Perspective</p><p>The trunk is a wire that has several layers of branches.</p><p>Logical Perspective</p><p>The flow of information is hierarchical. </p><h3 id="Mesh"><a href="#Mesh" class="headerlink" title="Mesh"></a>Mesh</h3><p>Physical Perspective </p><p>Advantage: the maximum connectivity and reliability. </p><p>Disadvantage: the amount of media for the links, and the amount of connections to the links becomes overwhelming. </p><p>Logical Perspective </p><p>The behavior of a complete, or mesh topology depends greatly on the devices used. </p><h3 id="Cellular"><a href="#Cellular" class="headerlink" title="Cellular"></a>Cellular</h3><p><img src="/img/computernetwork/1-10.png"></p><p>Physical Perspective</p><p>The cellular topology is for wireless technology </p><p>Sometimes the receiving nodes move (e.g. cell phone), and sometimes the sending nodes move (e.g. satellite)</p><p>Logical Perspective</p><p>Nodes communicate with each other directly (though sometimes extremely difficult), or communicate only with their adjacent cells, which is extremely inefficient. </p><h2 id="LAN-devices"><a href="#LAN-devices" class="headerlink" title="LAN devices"></a>LAN devices</h2><p>Host-devices connected directly to network segment, not part of any layer but the functions of the OSI model are performed in software inside host</p><h3 id="NICs-Layer-2"><a href="#NICs-Layer-2" class="headerlink" title="NICs -Layer 2"></a>NICs -Layer 2</h3><p>Carries a unique code called a MAC address.</p><p>Is used to control data communication for the host on the network</p><p>Translates parallel signal produced by computer into serial format to send over the network</p><p>Transceiver used to<br>convert signals as well as send and receive bits</p><p>Provides the host’s<br>access to the medium</p><h3 id="Media-Layer-1"><a href="#Media-Layer-1" class="headerlink" title="Media -Layer 1"></a>Media -Layer 1</h3><p>Carries a flow of information in bits</p><p>The means by which signals travel from one networked device to another</p><h3 id="Repeaters-Layer-1"><a href="#Repeaters-Layer-1" class="headerlink" title="Repeaters - Layer 1"></a>Repeaters - Layer 1</h3><p>used to extend the<br>length of the network</p><p>clean, amplify, and resend signals that are weakened by long cable</p><p>regenerate (amplify) and retime network signals at the bit level to allow them to travel a longer distance on the media</p><p>perform no filtering</p><h3 id="Hubs-Layer-1"><a href="#Hubs-Layer-1" class="headerlink" title="Hubs -Layer 1"></a>Hubs -Layer 1</h3><p>used to regenerate and retime network signals</p><p>propagate signals </p><p>cannot filter traffic</p><p>cannot determine the best path</p><p>used as network concentration points</p><p>sometimes called multiport repeater</p>]]></content>
    
    
    <categories>
      
      <category>computernetwork</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>vim配置与hexo搭建</title>
    <link href="/2023/09/09/vim%E9%85%8D%E7%BD%AE%E4%BB%A5%E5%8F%8Ahexo%E6%90%AD%E5%BB%BA/"/>
    <url>/2023/09/09/vim%E9%85%8D%E7%BD%AE%E4%BB%A5%E5%8F%8Ahexo%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<p>仅做个人记录</p><h1 id="vim配置"><a href="#vim配置" class="headerlink" title="vim配置"></a>vim配置</h1><p>此处直接使用的是wsl ubuntu22.04 自带的vim</p><h2 id="配置按键映射"><a href="#配置按键映射" class="headerlink" title="配置按键映射"></a>配置按键映射</h2><pre><code class="hljs">    inoremap jk &lt;Esc&gt;    inoremap &#39; &#39;&#39;&lt;ESC&gt;i    inoremap &quot; &quot;&quot;&lt;ESC&gt;i    inoremap () ()&lt;ESC&gt;    inoremap [ []&lt;ESC&gt;    inoremap &#123; &#123;&#125;&lt;ESC&gt;i    nnoremap o o&lt;ESC&gt;</code></pre><h2 id="安装vundle插件管理"><a href="#安装vundle插件管理" class="headerlink" title="安装vundle插件管理"></a>安装vundle插件管理</h2><p>将vundle插件clone到指定位置</p><pre><code class="hljs">    git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim</code></pre><p>在.vimrc文件中加入</p><pre><code class="hljs">    &quot;这是vundle所需要的配置文件    &quot;--------------------------    set nocompatible        filetype off    &quot; 设置Vundle管理vim插件 set the runtime path to include Vundle and initialize     set rtp+=~/.vim/bundle/Vundle.vim    call vundle#begin()    &quot; 安装的vim插件写在下面        &quot; 安装的vim插件写在上面    call vundle#end()     &quot; required    filetype plugin on    &quot; required</code></pre><p>安装插件，输入对应的地址或者名称</p><pre><code class="hljs">    Plugin &#39;Valloric/YouCompleteMe&#39; &quot;YCM&quot;    Plugin &#39;VundleVim/Vundle.vim&#39;   &quot; let Vundle manage Vundle, required    Plugin &#39;scrooloose/nerdtree&#39; &quot;nerdtree&quot;    Plugin &#39;tpope/vim-surround&#39; &quot;自动环绕&quot;    Plugin &#39;jiangmiao/auto-pairs&#39; &quot;括号补全&quot;    Plugin &#39;https://gitee.com/linuor/gruvbox.git&#39; &quot;gruvbox主题&quot;    Plugin &#39;https://gitee.com/then_then/markdown-preview.nvim.git&#39; &quot;markdown预览&quot;</code></pre><p>进入vim，命令模式执行 </p><pre><code class="hljs">    ：PluginInstall</code></pre><p>其中YCM耗时较长，且需要进一步配置（运行YCM文件目录下的 install.py文件（同样时间较长））</p><p>配置各个插件</p><pre><code class="hljs">    &quot;这是markdwon预览的配置    let g:mkdp_path_to_chrome = &#39;/mnt/c/ProgramData/Microsoft/Windows/Start Menu/Programs/Microsoft Edge.lnk&#39;    &quot; 设置 chrome 浏览器的路径（或是启动 chrome（或其他现代浏览器）的命令）    let g:mkdp_auto_start = 0    &quot; 设置为 1 可以在打开 markdown 文件的时候自动打开浏览器预览，只在打开    &quot; markdown 文件的时候打开一次    let g:mkdp_auto_open = 1    &quot; 设置为 1 在编辑 markdown 的时候检查预览窗口是否已经打开，否则自动打开预    &quot;     let g:mkdp_auto_close = 1    &quot; 在切换 buffer 的时候自动关闭预览窗口，设置为 0 则在切换 buffer 的时候不    &quot; 自动关闭预览窗口    let g:mkdp_refresh_slow = 0    &quot; 设置为 1 则只有在保存文件，或退出插入模式的时候更新预览，默认为 0，实时    &quot; 更新预览    let g:mkdp_command_for_global = 0    &quot; 设置为 1 则所有文件都可以使用 MarkdownPreview 进行预览，默认只有 markdown    let g:mkdp_echo_preview_url = 1    &quot;这是Nerdtree相关配置文件    &quot;------------------------    autocmd vimenter * NERDTree  &quot;自动开启Nerdtree    let g:NERDTreeWinSize = 35    &quot;开启nerdtree快捷键    map &lt;F3&gt; :NERDTree&lt;CR&gt;    let NERDTreeShowBookmarks=1  &quot; 开启Nerdtree时自动显示Bookmarks    &quot;打开vim时如果没有文件自动打开NERDTree    autocmd vimenter * if !argc()|NERDTree|endif    &quot;当NERDTree为剩下的唯一窗口时自动关闭    autocmd bufenter * if (winnr(&quot;$&quot;) == 1 &amp;&amp; exists(&quot;b:NERDTree&quot;) &amp;&amp; b:NERDTree.isTabTree()) | q | endif    &quot;设置树的显示图标    let g:NERDTreeDirArrowExpandable = &#39;▸&#39;      let g:NERDTreeDirArrowCollapsible = &#39;▾&#39;     let g:NERDTreeShowLineNumbers=1  &quot; 是否显示行号    &quot; 在终端启动vim时，共享NERDTree    let g:nerdtree_tabs_open_on_console_startup=1    &quot; 忽略一下文件的显示    let NERDTreeIgnore=[&#39;\.pyc&#39;,&#39;\~$&#39;,&#39;\.swp&#39;]    let g:NERDTreeGitStatusIndicatorMapCustom = &#123;                    \ &#39;Modified&#39;  :&#39;✹&#39;,                    \ &#39;Staged&#39;    :&#39;✚&#39;,                    \ &#39;Untracked&#39; :&#39;✭&#39;,                    \ &#39;Renamed&#39;   :&#39;➜&#39;,                    \ &#39;Unmerged&#39;  :&#39;═&#39;,                    \ &#39;Deleted&#39;   :&#39;✖&#39;,                    \ &#39;Dirty&#39;     :&#39;✗&#39;,                    \ &#39;Ignored&#39;   :&#39;☒&#39;,                    \ &#39;Clean&#39;     :&#39;✔︎&#39;,                    \ &#39;Unknown&#39;   :&#39;?&#39;,                    \ &#125;</code></pre><p>配置不同模式下的光标</p><pre><code class="hljs">    let &amp;t_SI = &quot;\&lt;Esc&gt;[6 q&quot;    let &amp;t_SR = &quot;\&lt;Esc&gt;[4 q&quot;    let &amp;t_EI = &quot;\&lt;Esc&gt;[2 q&quot;</code></pre><p>启用主题</p><pre><code class="hljs">    set bg=dark                     &quot;设置背景为黑色    colorscheme gruvbox             &quot;设置主题为 gruvbox    set guioptions=                 &quot;去掉两边的scrollbar    set guifont=Monaco:h17          &quot;设置字体和字的大小</code></pre><p>其他配置       </p><pre><code class="hljs">    &quot;&quot;自动开启语法高亮&quot;    syntax enable    &quot;设置字体&quot;    &quot;set guifont=dejaVu\ Sans\ MONO\ 10    set guifont=Courier_New:h10:cANSI    &quot;设置主题样式&quot;    set bg=dark                     &quot;设置背景为黑色    colorscheme gruvbox             &quot;设置主题为 gruvbox    set guioptions=                 &quot;去掉两边的scrollbar    set guifont=Monaco:h17          &quot;设置字体和字的大小    &quot;高亮显示当前行&quot;    set cursorline    hi cursorline guibg=#00ff00    hi CursorColumn guibg=#00ff00    &quot;使用空格来替换Tab&quot;    set expandtab    &quot;设置所有的Tab和缩进为4个空格&quot;    set tabstop=4    &quot;设定&lt;&lt;和&gt;&gt;命令移动时的宽度为4&quot;    set shiftwidth=4    &quot;使得按退格键时可以一次删除4个空格&quot;    set softtabstop=4    set smarttab    &quot;缩进，自动缩进（继承前一行的缩进）&quot;    &quot;set autoindent 命令打开自动缩进，是下面配置的缩写    &quot;可使用autoindent命令的简写，即“:set ai”和“:set noai”    &quot;还可以使用“:set ai sw=4”在一个命令中打开缩进并设置缩进级别    set ai    set cindent    &quot;智能缩进&quot;    set si    &quot;自动换行”    set wrap    &quot;设置软宽度&quot;    set sw=4    &quot;行内替换&quot;    set gdefault    &quot;显示标尺&quot;    set ruler    &quot;设置命令行的高度&quot;    set cmdheight=1    &quot;显示行数&quot;    set nu    &quot;不要图形按钮&quot;    set go=    &quot;设置魔术&quot;    set magic    &quot;关闭遇到错误时的声音提示&quot;    &quot;关闭错误信息响铃&quot;    set noerrorbells    &quot;关闭使用可视响铃代替呼叫&quot;    set novisualbell    &quot;高亮显示匹配的括号([&#123;和&#125;])&quot;    set showmatch    &quot;匹配括号高亮的时间（单位是十分之一秒）&quot;    set mat=2    &quot;搜索逐字符高亮&quot;    set hlsearch    set incsearch    &quot;搜索时不区分大小写&quot;    &quot;还可以使用简写（“:set ic”和“:set noic”）&quot;    set ignorecase    &quot;用浅色高亮显示当前行&quot;    autocmd InsertLeave * se nocul    autocmd InsertEnter * se cul    &quot;输入的命令显示出来，看的清楚&quot;    set showcmd    &quot;设置编码&quot;    set encoding=utf-8    set fencs=utf-8,ucs-bom,shift-jis,gb18030,gbk,gb2312,cp936    &quot;设置文件编码&quot;    set fileencodings=utf-8    &quot;设置终端编码&quot;    set termencoding=utf-8    &quot;设置语言编码&quot;    set langmenu=zh_CN.UTF-8    set helplang=cn    &quot;在处理未保存或只读文件的时候，弹出确认&quot;    set confirm    &quot;隐藏工具栏&quot;    set guioptions-=T    &quot;隐藏菜单栏&quot;    set guioptions-=m    &quot;显示状态栏（默认值为1，表示无法显示状态栏）&quot;    set laststatus=2    &quot;状态行显示的内容&quot;    set statusline=%F%m%r%h%w\ [FORMAT=%&#123;&amp;ff&#125;]\ [TYPE=%Y]\ [POS=%l,%v][%p%%]\ %&#123;strftime(\&quot;%d/%m/%y\ -\ %H:%M\&quot;)&#125;    &quot;设置背景颜色&quot;    set background=dark    &quot;共享剪切板&quot;    set clipboard+=unnamed    &quot;从不备份&quot;    set nobackup    set noswapfile    &quot;自动保存&quot;    set autowrite    &quot;关闭vi兼容模式&quot;    set nocompatible    &quot;设置历史记录步数&quot;    set history=1000    &quot;激活鼠标的使用&quot;    set mouse=a    set selection=exclusive    set selectmode=mouse,key</code></pre><h1 id="hexo搭建"><a href="#hexo搭建" class="headerlink" title="hexo搭建"></a>hexo搭建</h1><p>创建github库以username.github.io命名，设置好权限</p><p>安装nodejs和hexo和npm</p><pre><code class="hljs">    sudo npm install hexo-cli -g</code></pre><p>使用</p><p>创建blog文件夹</p><pre><code class="hljs">    hexo init</code></pre><p>生成</p><p>配置_config.yml文件</p><p>操作</p><pre><code class="hljs">    hexo clean    hexo g</code></pre><p>部署</p><pre><code class="hljs">    hexo d</code></pre><p>本地查看 </p><pre><code class="hljs">    hexo s</code></pre><p>可以将相关主题clone到themes文件加从而完成主题切换</p>]]></content>
    
    
    <categories>
      
      <category>tools</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>vim</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hello</title>
    <link href="/2023/09/09/hello/"/>
    <url>/2023/09/09/hello/</url>
    
    <content type="html"><![CDATA[<p>hello world! </p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
